openapi: 3.0.1
info:
  title: Seqera API
  description: Seqera Platform services API
  contact:
    url: https://seqera.io
    email: info@seqera.io
  version: 1.45.0
paths:
  /actions:
    get:
      summary: List actions
      description: "Lists all available actions in a user context, enriched by `attributes`. Append `?workspaceId` to list actions in a workspace context."
      tags:
        - actions
      operationId: ListActions
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`). Returns an empty value (`labels: null`) if omitted."
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ActionQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListActionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Actions#read
    post:
      summary: Create action
      description: Creates a new pipeline action. Append `?workspaceId` to associate the action with the given workspace.
      tags:
        - actions
      operationId: CreateAction
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Action create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateActionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateActionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Action#create
  /actions/labels/add:
    post:
      summary: Add labels to actions
      description: Adds the given list of labels to the given pipeline actions. Existing labels are preserved.
      tags:
        - labels
      operationId: AddLabelsToActions
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels add request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateActionLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/labels/apply:
    post:
      summary: Replace action labels
      description: Applies the given list of labels to the given pipeline actions. Existing labels are replaced â€” include labels to be preserved in `labelIds`.
      tags:
        - labels
      operationId: ApplyLabelsToActions
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels apply request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateActionLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/labels/remove:
    post:
      summary: Remove labels from actions
      description: Removes the given list of labels from the given pipeline actions.
      tags:
        - labels
      operationId: RemoveLabelsFromActions
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels remove request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateActionLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/types:
    get:
      summary: List action event types
      description: Lists the supported event types that trigger a pipeline action. Append `?workspaceId` to list event types in a workspace context.
      tags:
        - actions
      operationId: ListActionTypes
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEventTypesResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/validate:
    get:
      summary: Validate action name
      description: Confirms the validity of the given action name. Append `?name=<your_action_name>`.
      tags:
        - actions
      operationId: ValidateActionName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Action name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /actions/{actionId}:
    get:
      summary: Describe action
      description: Retrieves the details of the action identified by the given `actionId`.
      tags:
        - actions
      operationId: DescribeAction
      parameters:
        - name: actionId
          in: path
          description: Action string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`). Returns an empty value (`labels: null`) if omitted."
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ActionQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeActionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Action#read
    put:
      summary: Update action
      description: Updates the details of the action identified by the given `actionId`. The `source` of an existing action cannot be changed.
      tags:
        - actions
      operationId: UpdateAction
      parameters:
        - name: actionId
          in: path
          description: Action string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Action update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateActionRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Action#update
    delete:
      summary: Delete action
      description: Deletes the pipeline action identified by the given `actionId`.
      tags:
        - actions
      operationId: DeleteAction
      parameters:
        - name: actionId
          in: path
          description: Action string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Action#delete
  /actions/{actionId}/launch:
    post:
      summary: Trigger Tower Launch action
      description: Triggers the execution of the Tower Launch action identified by the given `actionId`.
      tags:
        - actions
      operationId: LaunchAction
      parameters:
        - name: actionId
          in: path
          description: Action string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Action launch request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LaunchActionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LaunchActionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/{actionId}/pause:
    post:
      summary: Pause or resume action
      description: Pauses or resumes the pipeline action identified by the given `actionId`.
      tags:
        - actions
      operationId: PauseAction
      parameters:
        - name: actionId
          in: path
          description: Action string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /avatars:
    post:
      summary: Create the avatar image
      tags:
        - avatars
      operationId: CreateAvatar
      requestBody:
        description: Image file request
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
            encoding:
              image:
                contentType: application/octet-stream
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAvatarResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /avatars/{avatarId}:
    get:
      summary: Download the avatar image
      tags:
        - avatars
      operationId: DownloadAvatar
      parameters:
        - name: avatarId
          in: path
          description: Avatar string identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found element
      security:
        - BearerAuth: []
  /compute-envs:
    get:
      summary: List compute environments
      description: "Lists all available compute environments in a user context. Append `?workspaceId` to list compute environments in a workspace context, and `?status` to filter by compute environment status."
      tags:
        - compute-envs
      operationId: ListComputeEnvs
      parameters:
        - name: status
          in: query
          description: Compute environment status
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListComputeEnvsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: ComputeEnvs#read
    post:
      summary: Create compute environment
      description: Creates a new compute environment. Append `?workspaceId` to create the environment in a workspace context.
      tags:
        - compute-envs
      operationId: CreateComputeEnv
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Compute environment create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateComputeEnvRequest"
            examples:
              AwsBatchForge:
                description: "A minimal AWS Batch Forge compute environment with Wave and Fusion v2 enabled."
                value: 
                  computeEnv:     
                    name: "compute-env1"
                    platform: "aws-batch"
                    credentialsId: "11gg7Owxxxxxxxxxx50c3B"
                    description: "Minimal AWS Batch Forge compute environment with Wave, Fusion v2, and fast instance storage enabled"
                    config: {
                        region: "eu-west-2",
                        forge: {      
                          type: "SPOT",
                          minCpus: "0",
                          maxCpus: "100",
                        },
                        workDir: "s3://your-bucket/work",
                        waveEnabled: "true",
                        fusion2Enabled: "true",
                        nvnmeStorageEnabled: "true" 
                        } 
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateComputeEnvResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: ComputeEnv#create
  /compute-envs/validate:
    get:
      summary: Validate compute environment name
      description: Confirms the validity of the given compute environment name in a user context. Append `?name=<your_ce_name>`.
      tags:
        - compute-envs
      operationId: ValidateComputeEnvName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Compute environment name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /compute-envs/{computeEnvId}:
    get:
      summary: Describe compute environment
      description: Retrieves the details of the compute environment identified by the given `computeEnvId`.
      tags:
        - compute-envs
      operationId: DescribeComputeEnv
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`). Returns an empty value (`labels: null`) if omitted."
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ComputeEnvQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeComputeEnvResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: ComputeEnv#read
    put:
      summary: Update compute environment
      description: Updates the details of the compute environment identified by the given `computeEnvId`.
      tags:
        - compute-envs
      operationId: UpdateComputeEnv
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Compute environment update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateComputeEnvRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: ComputeEnv#update
    delete:
      summary: Delete compute environment
      description: Deletes the compute environment identified by the given `computeEnvId`.
      tags:
        - compute-envs
      operationId: DeleteComputeEnv
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Conflicting deletion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: ComputeEnv#delete
  /compute-envs/{computeEnvId}/primary:
    post:
      summary: Define primary compute environment
      description: Selects the compute environment identified by the given `computeEnvId` as the primary compute environment in the given workspace context.
      tags:
        - compute-envs
      operationId: UpdateComputeEnvPrimary
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /credentials:
    get:
      summary: List credentials
      description: "Lists all available credentials in a user context. Append `?workspaceId` to list credentials in a workspace context, and `?platformId` to filter credentials by computing platform."
      tags:
        - credentials
      operationId: ListCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: platformId
          in: query
          description: Platform string identifier
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCredentialsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Credentials#read
    post:
      summary: Create credentials
      description: Creates new credentials in a user context. Append `?workspaceId` to create the credentials in a workspace context.
      tags:
        - credentials
      operationId: CreateCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        description: Credentials create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCredentialsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCredentialsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Credential#create
  /credentials/validate:
    get:
      summary: Validate credential name
      description: Validates the given credentials name. Append `?name=<your_credential_name>`.
      tags:
        - credentials
      operationId: ValidateCredentialsName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Credentials name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /credentials/{credentialsId}:
    get:
      summary: Describe credentials
      description: Retrieves the details of the credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DescribeCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeCredentialsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Credential#read
    put:
      summary: Update credentials
      description: Updates the details of the credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: UpdateCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Credentials update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCredentialsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Credential#update
    delete:
      summary: Delete credentials
      description: Deletes the credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DeleteCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: checked
          in: query
          description: If set credentials deletion will be blocked by running jobs that depend on them
          schema:
            type: boolean
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Running jobs block the deletion of this credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteCredentialsConflictResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Credential#delete
  /data-links:
    get:
      summary: List data-links
      description: Retrieves all available data-links in a user context. Append `?workspaceId={your-workspace-id}` to retrieve data-links in a workspace context.
      tags:
        - data-links
      operationId: ListDataLinks
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: search
          in: query
          description: "Free text search criteria â€” data-link name and keywords: `region`, `provider`."
          schema:
            type: string
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: visibility
          in: query
          description: Filter results by visibility
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinksListResponse"
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinksListResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, or the API is disabled in the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create data-link
      description: Creates a new data-link in a user context. Append `?workspaceId=` to create the data-link in a workspace context.
      tags:
        - data-links
      operationId: CreateCustomDataLink
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        description: Data-link creation request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkCreateRequest"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDto"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled in the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: DataLink#create
  /data-links/cache/refresh:
    get:
      summary: Refresh data-link cache
      description: Refreshes the data-link cache for the given `workspaceId` or `credentialsId`.
      tags:
        - data-links
      operationId: RefreshDataLinkCache
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials string identifier
          schema:
            type: string
      responses:
        "200":
          description: OK
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}:
    get:
      summary: Describe data-link
      description: Retrieves the details of the data-link associated with the given `dataLinkId`.
      tags:
        - data-links
      operationId: DescribeDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials string identifier
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: DataLink#read
    put:
      summary: Update data-link
      description: Update the data-link associated with the given `dataLinkId`.
      tags:
        - data-links
      operationId: UpdateCustomDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Data-link update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkUpdateRequest"
        required: true
      responses:
        "200":
          description: Success â€” Data-link updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDto"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: DataLink#update
    delete:
      summary: Delete data-link
      description: Deletes the data-link associated with the given `dataLinkId`.
      tags:
        - data-links
      operationId: DeleteCustomDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success â€” Data-link deleted
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "204":
          description: DeleteCustomDataLink 204 response
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: DataLink#delete
  /data-links/{dataLinkId}/browse:
    get:
      summary: Explore data-link
      description: Retrieves the content of the data-link associated with the given `dataLinkId`.
      tags:
        - data-links
      operationId: ExploreDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials string identifier
          schema:
            type: string
        - name: search
          in: query
          description: Prefix search of data-link content
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Token used to fetch the next page of items
          schema:
            type: string
        - name: pageSize
          in: query
          description: "Number of items to return per page. If ommitted, a default maximum value is returned."
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkContentResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/browse-tree:
    get:
      tags:
        - data-links
      summary: Explore a data-link tree
      description: Provides a list of all files in the provided paths (including files in sub-paths).
      operationId: ExploreDataLinkTree
      parameters:
        - name: dataLinkId
          in: path
          description: Datalink identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Optional credentials identifier
          schema:
            type: string
        - name: paths
          in: query
          description: List of paths
          schema:
            type: array
            items:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkContentTreeListResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the workspace, credentials or data link are not found or when the api is disabled for the workspace"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/browse/{path}:
    get:
      summary: Explore data-link path
      description: Retrieves the content of the data-link associated with the given `dataLinkId`, at the given `path`.
      tags:
        - data-links
      operationId: ExploreDataLink_1
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: path
          in: path
          description: Content path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: search
          in: query
          description: Prefix search on data-link content
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Token used to fetch the next page of items
          schema:
            type: string
        - name: pageSize
          in: query
          description: "Number of items to return per page. If ommitted, a default maximum value is returned."
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkContentResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/content:
    delete:
      tags:
        - data-links
      summary: Delete data-link content
      description: Deletes the content of the data-link associated with the given `dataLinkId`. The data-link itself is preserved.
      operationId: DeleteDataLinkItem
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkDeleteItemRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDeleteItemResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/download/{filePath}:
    get:
      tags:
        - data-links
      summary: Download data-link file at path
      description: Downloads the content at the given `filePath` in the data-link associated with the given `dataLinkId`.
      operationId: DownloadDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: filePath
          in: path
          description: File path to download
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/generate-download-url:
    get:
      tags:
        - data-links
      summary: Generate data-link file download URL
      description: Returns a URL to download files from the data-link associated with the given `dataLinkId`.
      operationId: GenerateDownloadUrlDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: filePath
          in: query
          description: File path to download
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: preview
          in: query
          description: "Whether to generate the URL for preview purposes or direct download (default: false)"
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDownloadUrlResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/script/download:
    get:
      tags:
        - data-links
      summary: Generate download script
      description: "Creates a script to download files from the data-link associated with the given `dataLinkId`.   Append `?dirs` or `?files` to specify a list of files or paths to download within the data-link."
      operationId: GenerateDownloadScript
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: dirs
          in: query
          description: List of paths to directories to download
          schema:
            type: array
            items:
              type: object
        - name: files
          in: query
          description: List of paths to files to download
          schema:
            type: array
            items:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDownloadScriptResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload:
    post:
      tags:
        - data-links
      summary: Generate file upload URL
      description: |-
        Creates a URL to upload files to the data-link associated with the given `dataLinkId`.
        For AWS S3 data-links, an additional follow-up request must be sent after your file upload has completed (or encountered an error) to finalize the upload - see the `/upload/finish` endpoint.
      operationId: GenerateDataLinkUploadUrl
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: Origin
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkMultiPartUploadRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkMultiPartUploadResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload/finish:
    post:
      tags:
        - data-links
      summary: Finish data-link file upload
      description: Finish upload of a data-link file. This is necessary for AWS S3 data-links (`DataLinkProvider=aws`) to finalize a successful file upload, or abort an upload if an error was encountered while uploading a file using an upload URL from the `/upload` endpoint.
      operationId: FinishDataLinkUpload
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkFinishMultiPartUploadRequest"
        required: true
      responses:
        "202":
          description: No content
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "200":
          description: FinishDataLinkUpload 200 response
          content:
            application/json:
              schema:
                type: object
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload/finish/{dirPath}:
    post:
      tags:
        - data-links
      summary: Finish data-link file upload to given path
      description: Finish upload of a data-link file, specifying a file path (`dirPath`). This is necessary for AWS S3 data-links (`DataLinkProvider=aws`) to finalize a successful file upload, or abort an upload if an error was encountered while uploading a file using an upload URL from the `/upload` endpoint.
      operationId: FinishDataLinkUpload_1
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: dirPath
          in: path
          description: Path to the destination directory
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkFinishMultiPartUploadRequest"
        required: true
      responses:
        "202":
          description: No content
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "200":
          description: FinishDataLinkUpload_1 200 response
          content:
            application/json:
              schema:
                type: object
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload/{dirPath}:
    post:
      tags:
        - data-links
      summary: Generate data-link file upload URL (to given path)
      description: |-
        Creates a URL to upload files to the data-link associated with the given `dataLinkId`, specifying a file path (`dirPath`).
        For AWS S3 data-links, an additional follow-up request must be sent after your file upload has completed (or encountered an error) to finalize the upload - see the `/upload/finish` endpoint.
      operationId: GenerateDataLinkUploadUrl_1
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: dirPath
          in: path
          description: Path to the destination directory
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: Origin
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkMultiPartUploadRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkMultiPartUploadResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the API is disabled or the file does not exist or data link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /datasets:
    get:
      summary: List datasets
      description: Lists all available datasets in a user context. Append `?workspaceId` to list datasets in a workspace context.
      tags:
        - datasets
      operationId: ListDatasetsV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create dataset
      description: Creates a new dataset in the user context. Include the dataset file and details in your request body. Append `?workspaceId` to create the dataset in a workspace context.
      tags:
        - datasets
      operationId: CreateDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        description: Dataset create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasetRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDatasetResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Datasets#create
  /datasets/versions:
    get:
      summary: List latest dataset versions
      description: Lists the latest version of each dataset in the user context. Append `?workspaceId` to list latest versions in a workspace context.
      tags:
        - datasets
      operationId: ListLatestDatasetVersionsV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: mimeType
          in: query
          description: Dataset MIME type
          schema:
            type: string
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /datasets/{datasetId}:
    put:
      summary: Update dataset
      description: Updates the details of the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: UpdateDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Dataset update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDatasetRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Dataset#update
    delete:
      summary: Delete dataset
      description: Deletes the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: DeleteDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Dataset#delete
  /datasets/{datasetId}/metadata:
    get:
      summary: Describe dataset
      description: Retrieves the metadata of the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: DescribeDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDatasetResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Dataset#read
  /datasets/{datasetId}/upload:
    post:
      summary: Upload new dataset version
      description: Uploads the CSV or TSV content to create a new version of the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: UploadDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
        - name: header
          in: query
          description: Uploaded file has header
          schema:
            type: boolean
      requestBody:
        description: Dataset file request
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MultiRequestFileSchema"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadDatasetVersionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /datasets/{datasetId}/v/{version}/n/{fileName}:
    get:
      summary: Download dataset content
      description: Downloads the content of the dataset identified by the given `datasetId` and `version`.
      tags:
        - datasets
      operationId: DownloadDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: Version number to download
          required: true
          schema:
            type: string
        - name: fileName
          in: path
          description: File name for the downloaded dataset content
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /datasets/{datasetId}/versions:
    get:
      summary: List all dataset versions
      description: Lists all versions of the given `datasetId`.
      tags:
        - datasets
      operationId: ListDatasetVersionsV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
        - name: mimeType
          in: query
          description: Optional MIME type filter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /ga4gh/wes/v1/runs:
    get:
      summary: "GA4GH: List runs"
      description: Uses the GA4GH workflow execution service API to list all run records.
      tags:
        - ga4gh
      operationId: Ga4ghRunList
      parameters:
        - name: page_size
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: page_token
          in: query
          description: Page token
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunListResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
    post:
      summary: "GA4GH: Launch run"
      description: "Uses the GA4GH workflow execution service API to launch a new run. Runs are launched in the user workspace context by default. To launch in an organization workspace context, include the `workspaceId` in `workflow_engine_parameters`. Runs are launched with the workspace primary compute environment by default. To launch with a different compute environment, include the `computeEnvId` in `workflow_engine_parameters`."
      tags:
        - ga4gh
      operationId: Ga4ghRunCreate
      requestBody:
        description: Run request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RunRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunId"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/runs/{run_id}:
    get:
      summary: "GA4GH: Describe run"
      description: Uses the GA4GH workflow execution service API to retrieve the details of the run assoiated with the given `run_id`.
      tags:
        - ga4gh
      operationId: Ga4ghRunDescribe
      parameters:
        - name: run_id
          in: path
          description: Run string identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunLog"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/runs/{run_id}/cancel:
    post:
      summary: "GA4GH: Cancel run"
      description: Uses the GA4GH workflow execution service API to cancel the run associated with the given `run_id`.
      tags:
        - ga4gh
      operationId: Ga4ghRunCancel
      parameters:
        - name: run_id
          in: path
          description: Run string identifier
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunId"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/runs/{run_id}/status:
    get:
      summary: "GA4GH: Retrieve run status"
      description: Uses the GA4GH workflow execution service API to retrieve the status of the run associated with the given `run_id`.
      tags:
        - ga4gh
      operationId: Ga4ghRunStatus
      parameters:
        - name: run_id
          in: path
          description: Run string identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunStatus"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/service-info:
    get:
      summary: GA4GH workflow execution service API info
      tags:
        - ga4gh
      operationId: Ga4ghServiceInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceInfo"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
  /labels:
    get:
      summary: List labels
      description: Lists all available labels in a user context. Append `?workspaceId` to list labels in a workspace context.
      tags:
        - labels
      operationId: ListLabels
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
        - name: type
          in: query
          description: Label type
          schema:
            $ref: "#/components/schemas/LabelType"
        - name: isDefault
          in: query
          description: Label default flag
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLabelsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Labels#read
    post:
      summary: Create label
      description: "Creates a new label or returns an existing label based on name/value. By default the operation works in a user context, append `?workspaceId` to create/retrieve a label in a workspace context. Resource labels include `resource: true` and a `value`."
      tags:
        - labels
      operationId: CreateLabel
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: "Provide a label `name`. Set `resource: true` for resource labels. Only resource labels have a `value` â€” if `resource: true`, include a `value`. Else, omit `value` from your request body."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLabelRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLabelResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Labels#create
  /labels/{labelId}:
    put:
      summary: Update label
      description: Updates the label identified by the given `labelId`.
      tags:
        - labels
      operationId: UpdateLabel
      parameters:
        - name: labelId
          in: path
          description: Label numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Label update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLabelRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLabelResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Labels#update
    delete:
      summary: Delete label
      description: Deletes the label identified by the given `labelId`.
      tags:
        - labels
      operationId: DeleteLabel
      parameters:
        - name: labelId
          in: path
          description: Label numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Labels#delete
  /launch/{launchId}:
    get:
      summary: Describe Launch record
      description: Retrieves the details of the launch identified by the given `launchId`.
      tags:
        - launch
      operationId: DescribeLaunch
      parameters:
        - name: launchId
          in: path
          description: Launch string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLaunchResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /launch/{launchId}/datasets:
    get:
      summary: Describe launch datasets
      description: Retrieves the details of the datasets used in the launch identified by the given `launchId`.
      tags:
        - datasets
      operationId: ListLaunchDatasetVersions
      parameters:
        - name: launchId
          in: path
          description: Launch string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLaunchResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs:
    get:
      summary: List organizations
      description: Lists all available organizations in a user context.
      tags:
        - orgs
      operationId: ListOrganizations
      parameters:
        - name: role
          in: query
          description: Organization user role identifier
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrganizationsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create organization
      description: Creates a new organization.
      tags:
        - orgs
      operationId: CreateOrganization
      requestBody:
        description: Organization create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrganizationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrganizationResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Orgs#create
  /orgs/validate:
    get:
      summary: Validate organization name
      description: Confirms the validity of the given organization name. Append `?name=<your_org_name>`.
      tags:
        - orgs
      operationId: ValidateOrganizationName
      parameters:
        - name: name
          in: query
          description: Organization name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}:
    get:
      summary: Describe organization
      description: Retrieves the details of the organization identified by the given `orgId`.
      tags:
        - orgs
      operationId: DescribeOrganization
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
          # x-speakeasy-match: orgId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOrganizationResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Organization#read
    put:
      summary: Update organization
      description: Updates the details of the organization identified by the given `orgId`.
      tags:
        - orgs
      operationId: UpdateOrganization
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      requestBody:
        description: Organization update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrganizationRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Orgs#update
    delete:
      summary: Delete organization
      description: Deletes the organization identified by the given `orgId`.
      tags:
        - orgs
      operationId: DeleteOrganization
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Orgs#delete
  /orgs/{orgId}/collaborators:
    get:
      summary: List organization collaborators
      description: Lists the collaborators of the organization identified by the given `orgId`.
      tags:
        - orgs
      operationId: ListOrganizationCollaborators
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMembersResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/members:
    get:
      summary: List organization members
      description: Lists the members of the organization identified by the given `orgId`.
      tags:
        - orgs
      operationId: ListOrganizationMembers
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMembersResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/add:
    put:
      summary: Add organization member
      description: Adds a new member to the organization identified by the given `orgId`.
      tags:
        - orgs
      operationId: CreateOrganizationMember
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Member addition request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddMemberRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddMemberResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/leave:
    delete:
      summary: Leave organization
      description: Removes the requesting user from the organization identified by the given `orgId`.
      tags:
        - orgs
      operationId: LeaveOrganization
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/{memberId}:
    delete:
      summary: Delete member
      description: Deletes the member identified by the given `memberId`.
      tags:
        - orgs
      operationId: DeleteOrganizationMember
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: memberId
          in: path
          description: Organization member numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/{memberId}/role:
    put:
      summary: Update member role
      description: Updates the role of the member identified by the given `memberId`.
      tags:
        - orgs
      operationId: UpdateOrganizationMemberRole
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: memberId
          in: path
          description: Organization member numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Member role update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMemberRoleRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/quotas:
    get:
      summary: Describe organization quotas
      description: Retrieves the details of the organization quotas identified by the given `orgId`.
      tags:
        - orgs
      operationId: DescribeOrganizationQuotas
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: include
          in: query
          description: Optional list of quota names to include
          schema:
            type: array
            items:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOrganizationQuotasResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams:
    get:
      summary: List organization teams
      description: Lists all teams in the organization identified by the given `orgId`.
      tags:
        - teams
      operationId: ListOrganizationTeams
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTeamResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create team
      description: Creates a new team in the organization identified by the given `orgId`.
      tags:
        - teams
      operationId: CreateOrganizationTeam
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: false
      requestBody:
        description: Team create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTeamRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTeamResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Teams#create
  /orgs/{orgId}/teams/validate:
    get:
      summary: Validate team name
      description: Confirms the validity of the given team name. Append `?name=<your_team_name>`.
      tags:
        - teams
      operationId: ValidateTeamName
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Team name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}:
    get:
      summary: Describe team
      description: Retrieves the details of the team identified by the given `teamId`.
      tags:
        - teams
      operationId: DescribeOrganizationTeam
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTeamResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Teams#read
    put:
      summary: Update team
      description: Updates the details of the team identified by the given `teamId`.
      tags:
        - teams
      operationId: UpdateOrganizationTeam
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      requestBody:
        description: Team update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTeamRequest"
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "204":
          description: UpdateOrganizationTeam 204 response
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Teams#update
    delete:
      summary: Delete team
      description: Deletes the team identified by the given `teamId`.
      tags:
        - teams
      operationId: DeleteOrganizationTeam
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Teams#delete
  /orgs/{orgId}/teams/{teamId}/members:
    get:
      summary: List team members
      description: Lists the team members associated with the given `teamId`.
      tags:
        - teams
      operationId: ListOrganizationTeamMembers
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          schema:
            type: string
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMembersResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create team member
      description: Adds a new member to the team identified by the given `teamId`.
      tags:
        - teams
      operationId: CreateOrganizationTeamMember
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      requestBody:
        description: Team create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTeamMemberRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddTeamMemberResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}/members/{memberId}/delete:
    delete:
      summary: Delete team member
      description: Deletes the team member identified by the given `memberId`.
      tags:
        - teams
      operationId: DeleteOrganizationTeamMember
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: memberId
          in: path
          description: Member numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}/workspaces:
    get:
      summary: List team workspaces
      description: Lists all the workspaces of which the given `teamId` is a participant.
      tags:
        - teams
      operationId: ListWorkspacesByTeam
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Search criteria
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkspacesResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces:
    get:
      summary: List organization workspaces
      description: Lists the organization workspaces in `orgId` to which the requesting user belongs.
      tags:
        - workspaces
      operationId: ListWorkspaces
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkspacesResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workspaces#read
    post:
      summary: Create workspace
      description: Creates a new organization workspace.
      tags:
        - workspaces
      operationId: CreateWorkspace
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: false
      requestBody:
        description: Workspace create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWorkspaceRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkspaceResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workspace#create
  /orgs/{orgId}/workspaces/validate:
    get:
      summary: Validate workspace name
      description: Confirms the validity of the given workspace name. Append `?name=<your_workspace_name>`.
      tags:
        - workspaces
      operationId: WorkspaceValidate
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: name
          in: query
          description: Workspace name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}:
    get:
      summary: Describe workspace
      description: Retrieves the details of the workspace identified by the given `workspaceId`.
      tags:
        - workspaces
      operationId: DescribeWorkspace
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-name-override: id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkspaceResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workspace#read
    put:
      summary: Update workspace
      description: Updates the details of the workspace identified by the given `workspaceId`.
      tags:
        - workspaces
      operationId: UpdateWorkspace
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-name-override: id
      requestBody:
        description: Workspace update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkspaceRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkspaceResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Duplicate name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workspace#update
    delete:
      summary: Delete workspace
      description: Deletes the workspace identified by the given `workspaceId`.
      tags:
        - workspaces
      operationId: DeleteWorkspace
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-name-override: id
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workspace#delete
  /orgs/{orgId}/workspaces/{workspaceId}/participants:
    get:
      summary: List workspace participants
      description: Lists the participants of the workspace identified by the given `workspaceId`.
      tags:
        - workspaces
      operationId: ListWorkspaceParticipants
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListParticipantsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      summary: Leave workspace
      description: Removes the requesting user from the given workspace.
      tags:
        - workspaces
      operationId: LeaveWorkspaceParticipant
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants/add:
    put:
      summary: Create workspace participant
      description: Adds a new participant to the workspace identified by the given `workspaceId`.
      tags:
        - workspaces
      operationId: CreateWorkspaceParticipant
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Participant addition request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddParticipantRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddParticipantResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants/{participantId}:
    delete:
      summary: Delete workspace participant
      description: Deletes the given participant from the given workspace.
      tags:
        - workspaces
      operationId: DeleteWorkspaceParticipant
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: participantId
          in: path
          description: Participant numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants/{participantId}/role:
    put:
      summary: Update participant role
      description: Updates the role of the given participant in the given workspace.
      tags:
        - workspaces
      operationId: UpdateWorkspaceParticipantRole
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: participantId
          in: path
          description: Participant numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Participant role update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateParticipantRoleRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/settings/studios:
    get:
      summary: List workspace Studios settings
      description: Retrieves the Studios settings of the workspace identified by the given `workspaceId`.
      tags:
        - workspaces
      operationId: FindDataStudiosWorkspaceSettings
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Workspace update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkspaceRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioWorkspaceSettingsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    put:
      summary: Update workspace Studios settings
      description: Updates the Studios settings of the workspace identified by the given `workspaceId`.
      tags:
        - workspaces
      operationId: UpdateDataStudiosWorkspaceSettings
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Workspace update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkspaceRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: UpdateDataStudiosWorkspaceSettings 200 response
          content:
            application/json:
              schema:
                type: object
      security:
        - BearerAuth: []
  /pipeline-secrets:
    get:
      summary: List pipeline secrets
      description: Lists all available pipeline secrets in a user context. Append `?workspaceId` to list secrets in a workspace context.
      tags:
        - pipeline-secrets
      operationId: ListPipelineSecrets
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPipelineSecretsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create pipeline secret
      description: Creates a new pipeline secret in the user context. Append `?workspaceId` to create the secret in a workspace context.
      tags:
        - pipeline-secrets
      operationId: CreatePipelineSecret
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Pipeline secret create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePipelineSecretRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePipelineSecretResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: PipelineSecret#create
  /pipeline-secrets/validate:
    get:
      summary: Validate secret name
      description: Confirms the validity of the given pipeline secret name in a user context. Append `?name=<your_secret_name>`. Append `?workspaceId` to validate the name in a workspace context.
      tags:
        - pipeline-secrets
      operationId: ValidatePipelineSecretName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Secret name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /pipeline-secrets/{secretId}:
    get:
      summary: Describe pipeline secret
      description: Retrieves the details of the pipeline secret identified by the given `secretId`.
      tags:
        - pipeline-secrets
      operationId: DescribePipelineSecret
      parameters:
        - name: secretId
          in: path
          description: Secret numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePipelineSecretResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: PipelineSecret#read
    put:
      summary: Update secret
      description: Updates the pipeline secret identified by the given `secretId`.
      tags:
        - pipeline-secrets
      operationId: UpdatePipelineSecret
      parameters:
        - name: secretId
          in: path
          description: Secret numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Secret update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePipelineSecretRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: PipelineSecret#update
    delete:
      summary: Delete secret
      description: Deletes the pipeline secret identified by the given `secretId`.
      tags:
        - pipeline-secrets
      operationId: DeletePipelineSecret
      parameters:
        - name: secretId
          in: path
          description: Secret numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: PipelineSecret#delete
  /pipelines:
    get:
      summary: List pipelines
      description: "Lists all available pipelines in a user context, enriched by `attributes`. Append `workspaceId` to list pipelines in a workspace context."
      tags:
        - pipelines
      operationId: ListPipelines
      parameters:
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`, `optimized` status, `computeEnv`). Returns an empty value (`labels: null`, etc.) if omitted."
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PipelineQueryAttribute"
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
        - name: visibility
          in: query
          description: Filter visibility parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPipelinesResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Pipelines#read
    post:
      summary: Create pipeline
      description: Creates a new pipeline in a user context. Append `?workspaceId` to create the pipeline in a workspace context.
      tags:
        - pipelines
      operationId: CreatePipeline
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Pipeline creation request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePipelineRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePipelineResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Pipeline#create
  /pipelines/info:
    get:
      summary: Describe remote pipeline repository
      description: Retrieves the details of a remote Nextflow pipeline Git repository. Append the repository name or full URL with `?name`.
      tags:
        - pipelines
      operationId: DescribePipelineRepository
      parameters:
        - name: name
          in: query
          description: Pipeline repository name or URL
          schema:
            type: string
        - name: revision
          in: query
          description: Pipeline revision
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: mainScript
          in: query
          description: Pipeline alternative main.nf
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePipelineInfoResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/labels/add:
    post:
      summary: Add labels to pipelines
      description: Adds the given list of labels to the given pipelines. Existing labels are preserved.
      tags:
        - labels
      operationId: AddLabelsToPipelines
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels add request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociatePipelineLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/labels/apply:
    post:
      summary: Replace pipeline labels
      description: Applies the given list of labels to the given pipelines. Existing labels are replaced â€” include labels to be preserved in `labelIds`.
      tags:
        - labels
      operationId: ApplyLabelsToPipelines
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels apply request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociatePipelineLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/labels/remove:
    post:
      summary: Remove labels from pipelines
      description: Removes the given list of labels from the given pipelines.
      tags:
        - labels
      operationId: RemoveLabelsFromPipelines
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels remove request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociatePipelineLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/repositories:
    get:
      summary: List user pipeline repositories
      description: "Lists known Nextflow pipeline Git repositories, extracted from existing runs. Append `?workspaceId` to list repositories in a workspace context."
      tags:
        - pipelines
      operationId: ListPipelineRepositories
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPipelineInfoResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/validate:
    get:
      summary: Validate pipeline name
      description: Confirms the validity of the given pipeline `name` in a user context. Append `?name=<your_pipeline_name>`. Append `?workspaceId` to validate the name in a workspace context.
      tags:
        - pipelines
      operationId: ValidatePipelineName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: orgId
          in: query
          description: Organization numeric identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Pipeline name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /pipelines/{pipelineId}:
    get:
      summary: Describe pipeline
      description: "Retrieves the details of the pipeline identified by the given `pipelineId`, enriched by `attributes`."
      tags:
        - pipelines
      operationId: DescribePipeline
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`, `optimized` status, `computeEnv`). Returns an empty value (`labels: null`, etc.) if omitted."
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PipelineQueryAttribute"
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: sourceWorkspaceId
          in: query
          description: Source Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePipelineResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Pipeline#read
    put:
      summary: Update pipeline
      description: "Updates the details of the pipeline identified by the given `pipelineId`. \n            **Note**: If `labelIds` is `null`, empty, or ommitted, existing pipeline labels are removed.\n            Include `labelIds: [<label-id-1>,<label-id-2>]` to override existing labels. Labels to be preserved must be included.\n            To append a list of labels to multiple pipelines, use `/pipelines/labels/add`."
      tags:
        - pipelines
      operationId: UpdatePipeline
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Pipeline update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePipelineRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePipelineResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Pipeline#update
    delete:
      summary: Delete pipeline
      description: Deletes the pipeline identified by the given `pipelineId`.
      tags:
        - pipelines
      operationId: DeletePipeline
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Pipeline#delete
  /pipelines/{pipelineId}/launch:
    get:
      summary: Describe pipeline launch
      description: Retrieves the launch details of the pipeline identified by the given `pipelineId`.
      tags:
        - pipelines
      operationId: DescribePipelineLaunch
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: sourceWorkspaceId
          in: query
          description: Source Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLaunchResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/{pipelineId}/schema:
    get:
      summary: Describe pipeline schema
      description: "Retrieves the pipeline schema of the pipeline identified by the given `pipelineId`, enriched by `attributes`.\n            `200 - OK` responses include the pipeline schema.\n            `204 - OK` responses indicate a successful request, with no saved schema found for the given pipeline ID.\n            "
      tags:
        - pipelines
      operationId: DescribePipelineSchema
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: sourceWorkspaceId
          in: query
          description: Source Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
            nullable: true
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response: `schema` returns the pipeline schema, `params` returns the pipeline config. Returns all if `attributes` is omitted."
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PipelineSchemaAttributes"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PipelineSchemaResponse"
        "204":
          description: Request OK - No schema found for given pipeline ID
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /platforms:
    get:
      summary: List platforms
      description: Lists all available computing platforms in a user context. Append `?workspaceId` to list platforms in a workspace context.
      tags:
        - platforms
      operationId: ListPlatforms
      parameters:
        - name: orgId
          in: query
          description: Organization numeric identifier
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPlatformsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /platforms/{platformId}:
    get:
      summary: Describe platform
      description: Retrieves the details of the computing platform identified by the given `platformId`.
      tags:
        - platforms
      operationId: DescribePlatform
      parameters:
        - name: platformId
          in: path
          description: Platform string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: regionId
          in: query
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePlatformResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /platforms/{platformId}/regions:
    get:
      summary: List platform regions
      description: Lists the available regions for the computing platform identified by the given `platformId`.
      tags:
        - platforms
      operationId: ListPlatformRegions
      parameters:
        - name: platformId
          in: path
          description: Platform string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRegionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /service-info:
    get:
      summary: General Seqera service features and version.
      tags:
        - service-info
      operationId: Info
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceInfoResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /studios:
    get:
      summary: List Studios
      description: Lists all available Studios in a user context. Append `?workspaceId` to list Studios in a workspace context.
      tags:
        - studios
      operationId: ListDataStudios
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: search
          in: query
          description: "Optional search criteria, allowing free text search on name and templateUrl and keywords: `userId`, `computeEnvId` and `status`."
          schema:
            type: string
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: attributes
          in: query
          description: "Optional attribute values to be included in the response (`labels`). Returns an empty value (`labels: null`) if omitted."
          schema:
            type: array
            items:
              $ref: "#/components/schemas/DataStudioQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioListResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the workspace is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create Studio
      description: "Creates a new Studio environment, starting it by default. Default behavior can be changed using the query parameter `autoStart=false`."
      tags:
        - studios
      operationId: CreateDataStudio
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: autoStart
          in: query
          description: Optionally disable the Studio's automatic launch when it is created.
          schema:
            type: boolean
      requestBody:
        description: Create Studio request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataStudioCreateRequest"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCreateResponse"
        "404":
          description: "NotFound, when the workspace or compute environment is not found or when the API is disabled."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict - duplicated name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "200":
          description: Create Studio 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCreateResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Studios#create
  /studios/data-links:
    get:
      summary: List mounted data-links
      description: Lists the IDs of all available data-links mounted in existing Studios. Append `orgId` or `?workspaceId` to list mounted data-links in an organization or workspace context, respectively.
      tags:
        - studios
      operationId: ListMountedDataLinkIds
      parameters:
        - name: orgId
          in: query
          description: Organization numeric identifier
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          description: Optional Studio status
          schema:
            type: string
        - name: exclude
          in: query
          description: Optional Studio session ID to exclude in the request.
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioMountedLinksResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /studios/templates:
    get:
      summary: List available Studio templates
      description: Returns the list of available, configured Studio templates.
      tags:
        - studios
      operationId: ListDataStudioTemplates
      parameters:
        - name: workspaceId
          in: query
          description: Workspace identifier
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Ok - paginated list of available Studio templates.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioTemplatesListResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: NotFound, when the API is disabled for the workspace.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /studios/validate:
    get:
      summary: Validate Studio name
      description: Confirms the availability of the given name for a Studio in the user context. Append `?workspaceId=` to validate the name in a workspace context.
      tags:
        - studios
      operationId: ValidateDataStudioName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Studio name to validate
          schema:
            type: string
      responses:
        "204":
          description: "Ok - No content, if the name is valid and available."
        "400":
          description: "Bad request, if the name is not valid."
        "409":
          description: "Conflict, name duplicated in the given context."
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /studios/{sessionId}:
    get:
      summary: Describe Studio
      description: Retrieves the details of the Studio session identified by the given `sessionId`.
      tags:
        - studios
      operationId: DescribeDataStudio
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioDto"
        "202":
          description: "Accepted, when the Studio is fetching mounted data links in the background."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioDto"
        "404":
          description: "NotFound, when the studio is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Operation not allowed."
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Studios#read
    delete:
      summary: Delete Studio
      description: "Deletes the Studio associated with the given Studio session ID."
      tags:
        - studios
      operationId: DeleteDataStudio
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "404":
          description: "NotFound, when the Studio is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Operation not allowed."
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Studios#delete
  /studios/{sessionId}/checkpoints:
    get:
      summary: List Studio checkpoints
      description: "Retrieves the list of checkpoints for the given Studio session ID."
      tags:
        - studios
      operationId: ListDataStudioCheckpoints
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: search
          in: query
          description: "Optional search criteria, allowing free text search on name and keywords: `before` and `after`."
          schema:
            type: string
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioListCheckpointsResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the studio is not found or when the API is disabled for the workspace"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /studios/{sessionId}/checkpoints/{checkpointId}:
    get:
      summary: Get Studio checkpoint
      description: "Retrieves the details of the given Studio checkpoint ID."
      tags:
        - studios
      operationId: GetDataStudioCheckpoint
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: checkpointId
          in: path
          description: "Numeric identifier of the checkpoint."
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCheckpointDto"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the Studio or the checkpoint is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Operation not allowed."
      security:
        - BearerAuth: []
    put:
      summary: Update Studio checkpoint name
      description: "Updates the name of the given Studio checkpoint ID."
      tags:
        - studios
      operationId: UpdateDataStudioCheckpoint
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: checkpointId
          in: path
          description: "Numeric identifier of the checkpoint."
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataStudioCheckpointUpdateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCheckpointDto"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the Studio or the checkpoint is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: "Conflict, when the checkpoint name conflicts with an existing checkpoint for the same Studio."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Operation not allowed."
      security:
        - BearerAuth: []
  /studios/{sessionId}/lifespan:
    post:
      description: "Extends the lifespan of the given Studio session ID."
      tags:
        - studios
      operationId: ExtendDataStudioLifespan
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioDto"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the studio is not found or when the API is disabled for the workspace"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /studios/{sessionId}/start:
    put:
      summary: Start Studio
      description: "Starts the given Studio session ID."
      tags:
        - studios
      operationId: StartDataStudio
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: "An optional overriding configuration for the studio to be started."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataStudioStartRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioStartResponse"
        "404":
          description: "NotFound, when the studio is not found or when the API is disabled for the workspace"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /studios/{sessionId}/stop:
    put:
      summary: Stop Studio
      description: "Stops the given Studio session ID."
      tags:
        - studios
      operationId: StopDataStudio
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioStopResponse"
        "404":
          description: "NotFound, when the studio is not found or when the API is disabled for the workspace"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /tokens:
    get:
      summary: List tokens
      description: "Retrieves the list of all available API access tokens."
      tags:
        - tokens
      operationId: TokenList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAccessTokensResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Tokens#read
    post:
      summary: Create token
      description: "Creates an API access token with the details in the given request body."
      tags:
        - tokens
      operationId: CreateToken
      requestBody:
        description: Access token create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccessTokenRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccessTokenResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Tokens#create
  /tokens/delete-all:
    delete:
      summary: Delete all user tokens
      description: "Deletes all API access tokens in the user context."
      tags:
        - tokens
      operationId: DeleteAllTokens
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /tokens/{tokenId}:
    delete:
      summary: Delete token
      description: "Deletes the given API access token ID."
      tags:
        - tokens
      operationId: DeleteToken
      parameters:
        - name: tokenId
          in: path
          description: Token numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Tokens#delete
  /trace/create:
    post:
      summary: Create workflow execution trace
      description: "Creates a new workflow execution trace."
      tags:
        - trace
      operationId: CreateTrace
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: "Trace create request."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceCreateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceCreateResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /trace/{workflowId}/begin:
    put:
      summary: Signal workflow execution start
      description: "Updates the workflow execution trace for the given `workflowId`."
      tags:
        - trace
      operationId: UpdateTraceBegin
      parameters:
        - name: workflowId
          in: path
          description: "Workflow string identifier."
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Trace begin request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceBeginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceBeginResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /trace/{workflowId}/complete:
    put:
      summary: Signal workflow execution completion
      description: "Updates the workflow execution trace for the given `workflowId`."
      tags:
        - trace
      operationId: UpdateTraceComplete
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Trace complete request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceCompleteRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceCompleteResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /trace/{workflowId}/heartbeat:
    put:
      summary: Signal workflow execution heartbeat
      description: "Update the workflow execution trace heartbeat for the given `workflowId` to signal that execution is ongoing."
      tags:
        - trace
      operationId: UpdateTraceHeartbeat
      parameters:
        - name: workflowId
          in: path
          description: "Workflow string identifier."
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: "Trace heartbeat request."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceHeartbeatRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceHeartbeatResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /trace/{workflowId}/progress:
    put:
      summary: Store workflow task execution metadata
      description: "Store the execution metadata for one or more tasks in the given `workflowId`."
      tags:
        - trace
      operationId: UpdateTraceProgress
      parameters:
        - name: workflowId
          in: path
          description: "Workflow string identifier."
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: "Trace progress request."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceProgressRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceProgressResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /user-info:
    get:
      summary: Describe current user
      tags:
        - users
      operationId: UserInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeUserResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: CurrentUser#read
  /user/{userId}/workspaces:
    get:
      summary: List user workspaces and organizations
      description: Lists the workspaces and organizations to which the user identified by the given `userId` belongs.
      tags:
        - workspaces
      operationId: ListWorkspacesUser
      parameters:
        - name: userId
          in: path
          description: User numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkspacesAndOrgResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: UserWorkspaces#read
  /users/validate:
    get:
      summary: Check that the user name is valid
      tags:
        - users
      operationId: ValidateUserName
      parameters:
        - name: name
          in: query
          description: User name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /users/{userId}:
    get:
      summary: Describe a user entity
      tags:
        - users
      operationId: DescribeUser
      parameters:
        - name: userId
          in: path
          description: User numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeUserResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: User#read
    post:
      summary: Update an user entity
      tags:
        - users
      operationId: UpdateUser
      parameters:
        - name: userId
          in: path
          description: User numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: User update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDbDto"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      summary: Delete a user entity
      tags:
        - users
      operationId: DeleteUser
      parameters:
        - name: userId
          in: path
          description: User numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow:
    get:
      summary: List workflows
      description: "Lists all workflow records, enriched with `attributes`. Append `?workspaceId` to list workflow records in a workspace context."
      tags:
        - workflows
      operationId: ListWorkflows
      parameters:
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`, `optimized` status). Returns an empty value (`labels: null`) if omitted."
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/WorkflowQueryAttribute"
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkflowsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/delete:
    post:
      summary: Delete workflows
      description: Deletes the workflow records identified by the given list of `workflowIds`.
      tags:
        - workflows
      operationId: DeleteWorkflowMany
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: force
          in: query
          description: Force the deletion even if any workflows are active
          schema:
            type: boolean
      requestBody:
        description: Delete workflows request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteWorkflowsRequest"
        required: true
      responses:
        "200":
          description: "OK - Return the IDs of workflows that could not be deleted, if any"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteWorkflowsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/labels/add:
    post:
      summary: Add labels to workflows
      description: Adds the given list of labels to the given workflows. Existing labels are preserved.
      tags:
        - labels
      operationId: AddLabelsToWorkflows
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels add request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateWorkflowLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/labels/apply:
    post:
      summary: Replace workflow labels
      description: Applies the given list of labels to the given workflows. Existing labels are replaced â€” include labels to be preserved in `labelIds`.
      tags:
        - labels
      operationId: ApplyLabelsToWorkflows
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels apply request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateWorkflowLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/labels/remove:
    post:
      summary: Remove labels from workflows
      description: Removes the given list of labels from the given workflows.
      tags:
        - labels
      operationId: RemoveLabelsFromWorkflows
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels remove request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateWorkflowLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/launch:
    post:
      summary: Launch workflow
      description: Submits a workflow execution.
      tags:
        - workflows
      operationId: CreateWorkflowLaunch
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: sourceWorkspaceId
          in: query
          description: Source Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
            nullable: true
      requestBody:
        description: Workflow launch request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitWorkflowLaunchRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmitWorkflowLaunchResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workflows#create
  /workflow/random-name:
    get:
      summary: Generates a random name
      tags:
        - workflows
      operationId: GenerateRandomWorkflowName
      responses:
        "200":
          description: Generated name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RandomWorkflowNameResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/validate:
    get:
      summary: Validate run name
      description: "Check that the given run name of a workflow has a valid format. When the session ID is given: check that no other workflow in the system exists with the combination of both elements."
      tags:
        - workflows
      operationId: ValidateWorkflowConstraints
      parameters:
        - name: runName
          in: query
          description: Workflow run name to validate
          schema:
            type: string
        - name: sessionId
          in: query
          description: Workflow session ID to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request. Invalid run name format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Duplicated element. Existing run name and session ID combination
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}:
    get:
      summary: Describe workflow
      description: Retrieves the details of the workflow record associated with the given `workflowId`.
      tags:
        - workflows
      operationId: DescribeWorkflow
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          description: "Comma-separated list of attributes to retrieve. Returns an empty value for each attribute not specified."
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/WorkflowQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkflowResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workflows#read
    delete:
      summary: Delete the Workflow entity with the given ID
      tags:
        - workflows
      operationId: DeleteWorkflow
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: force
          in: query
          description: Force the deletion even if the workflow is active
          schema:
            type: boolean
      responses:
        "204":
          description: OK - Not content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workflows#delete
  /workflow/{workflowId}/cancel:
    post:
      summary: Cancel workflow
      description: Cancels the workflow execution identified by the given `workflowId`.
      tags:
        - workflows
      operationId: CancelWorkflow
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/download:
    get:
      summary: Download workflow files
      description: Downloads the workflow files for the Nextflow main job associated with the given `workflowId`.
      tags:
        - workflows
      operationId: DownloadWorkflowLog
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: fileName
          in: query
          description: Filename to download
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/download/{taskId}:
    get:
      summary: Download workflow task files
      description: Downloads the workflow files of the task identified by the given `taskId`.
      tags:
        - workflows
      operationId: DownloadWorkflowTaskLog
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          description: Task numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: fileName
          in: query
          description: Filename to download
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/launch:
    get:
      summary: Describe workflow launch
      description: Retrieves the details of the workflow launch associated with the given `workflowId`.
      tags:
        - workflows
      operationId: DescribeWorkflowLaunch
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkflowLaunchResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element. Existing run name and session ID combination
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /workflow/{workflowId}/log:
    get:
      summary: Get workflow logs
      description: Retrieves the output logs for the Nextflow main job of the workflow identified by the given `workflowId`.
      tags:
        - workflows
      operationId: WorkflowLogs
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: next
          in: query
          description: Workflow log cursor
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowLogResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/log/{taskId}:
    get:
      summary: Get workflow task logs
      description: Retrieves the output logs for the workflow task identified by the given `taskId`.
      tags:
        - workflows
      operationId: GetWorkflowTaskLog
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          description: Task numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: next
          in: query
          description: Workflow log cursor
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowLogResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/metrics:
    get:
      summary: Get the execution metrics for the given Workflow ID
      tags:
        - workflows
      operationId: DescribeWorkflowMetrics
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWorkflowMetricsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/progress:
    get:
      summary: Retrieve the execution progress for the given Workflow ID
      tags:
        - workflows
      operationId: DescribeWorkflowProgress
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProgressResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/star:
    get:
      summary: Check workflow star status
      description: Confirms whether the given `workflowId` is starred.
      tags:
        - workflows
      operationId: DescribeWorkflowStar
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkflowStarResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-speakeasy-group: WorkflowStar
    post:
      summary: Star workflow
      description: Adds the workflow identified by the given `workflowId` to your list of starred workflows.
      tags:
        - workflows
      operationId: CreateWorkflowStar
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkflowStarResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-speakeasy-group: WorkflowStar
    delete:
      summary: Unstar workflow
      description: Removes the workflow identified by the given `workflowId` from your list of starred workflows.
      tags:
        - workflows
      operationId: DeleteWorkflowStar
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkflowStarResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-speakeasy-group: WorkflowStar
  /workflow/{workflowId}/task/{taskId}:
    get:
      summary: Describe a task entity with the given ID
      tags:
        - workflows
      operationId: DescribeWorkflowTask
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          description: Task numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTaskResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/tasks:
    get:
      summary: List the tasks for the given Workflow ID and filter parameters
      tags:
        - workflows
      operationId: ListWorkflowTasks
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description: Field to sort by
          schema:
            type: string
        - name: sortDir
          in: query
          description: Sorting direction (asc|desc)
          schema:
            type: string
        - name: search
          in: query
          description: Search tasks by name
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTasksResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets:
    get:
      summary: List available datasets
      description: Lists all available datasets in the workspace context identified by the given `workspaceId`.
      tags:
        - datasets
      operationId: ListDatasets
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
    post:
      summary: Create dataset
      description: Creates a new dataset in the given workspace context. Include the dataset file and details in your request body.
      tags:
        - datasets
      operationId: CreateDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Dataset create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasetRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDatasetResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/versions:
    get:
      summary: List latest dataset versions
      description: Lists the latest version of each dataset associated with the given `workspaceId`.
      tags:
        - datasets
      operationId: ListWorkspaceDatasetVersions
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: mimeType
          in: query
          schema:
            type: string
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}:
    put:
      summary: Update dataset
      description: Updates the details of the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: UpdateDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Dataset update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDatasetRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      deprecated: true
      security:
        - BearerAuth: []
    delete:
      summary: Delete dataset
      description: Deletes the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: DeleteDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/metadata:
    get:
      summary: Describe dataset
      description: Retrieves the metadata of the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: DescribeDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDatasetResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/upload:
    post:
      summary: Upload new dataset version
      description: Uploads the CSV or TSV content to create a new version of the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: UploadDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
        - name: header
          in: query
          description: Uploaded file has header
          schema:
            type: boolean
      requestBody:
        description: Dataset file request
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MultiRequestFileSchema"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadDatasetVersionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/v/{version}/n/{fileName}:
    get:
      summary: Download dataset content
      description: Downloads the content of the dataset identified by the given `datasetId` and `version`.
      tags:
        - datasets
      operationId: DownloadDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: Version number to download
          required: true
          schema:
            type: string
        - name: fileName
          in: path
          description: File name for the downloaded dataset content
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/versions:
    get:
      summary: List all dataset versions
      description: Lists all versions of the given `datasetId`.
      tags:
        - datasets
      operationId: ListDatasetVersions
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
        - name: mimeType
          in: query
          description: MIME type filter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
components:
  schemas:
    AbstractGridConfig:
      type: object
      properties:
        workDir:
          type: string
          description: "Compute environment working directory"
          required: true
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        nextflowConfig:
          type: string
        launchDir:
          type: string
        userName:
          type: string
        hostName:
          type: string
        port:
          type: integer
          format: int32
        headQueue:
          type: string
        computeQueue:
          type: string
        maxQueueSize:
          type: integer
          format: int32
        headJobOptions:
          type: string
        propagateHeadJobOptions:
          type: boolean
      required:
        - workDir    
    AccessToken:
      required:
        - name
      type: object
      properties:
        basicAuth:
          type: string
          deprecated: true
        id:
          type: integer
          format: int64
          nullable: true
          x-speakeasy-param-optional: true
        name:
          maxLength: 50
          minLength: 1
          type: string
        lastUsed:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
      x-speakeasy-entity: Tokens
    Action.ConfigType:
      type: object
      properties:
        discriminator:
          type: string
      discriminator:
        propertyName: discriminator
        mapping:
          github: "#/components/schemas/GithubActionConfig"
          tower: "#/components/schemas/Action.TowerActionConfig"
      oneOf:
        - $ref: "#/components/schemas/Action.TowerActionConfig"
        - $ref: "#/components/schemas/GithubActionConfig"
    Action.EventType:
      type: object
      properties:
        discriminator:
          type: string
        timestamp:
          type: string
          format: date-time
      discriminator:
        propertyName: discriminator
        mapping:
          github: "#/components/schemas/GithubActionEvent"
          tower: "#/components/schemas/Action.TowerActionEvent"
      oneOf:
        - $ref: "#/components/schemas/GithubActionEvent"
        - $ref: "#/components/schemas/Action.TowerActionEvent"
    Action.Source:
      type: string
      enum:
        - github
        - tower
    Action.Status:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - ERROR
        - PAUSED
    Action.TowerActionConfig:
      type: object
      properties:
        discriminator:
          type: string
    Action.TowerActionEvent:
      type: object
      properties:
        discriminator:
          type: string
        timestamp:
          type: string
          format: date-time
        workflowId:
          type: string
    ActionQueryAttribute:
      type: string
      enum:
        - labels
    ActionResponseDto:
      type: object
      properties:
        id:
          type: string
        launch:
          $ref: "#/components/schemas/Launch"
        name:
          type: string
        hookId:
          type: string
        hookUrl:
          type: string
        message:
          type: string
        source:
          $ref: "#/components/schemas/Action.Source"
        status:
          $ref: "#/components/schemas/Action.Status"
        config:
          $ref: "#/components/schemas/Action.ConfigType"
        event:
          $ref: "#/components/schemas/Action.EventType"
        lastSeen:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
    ActiveConnection:
      type: object
      allOf:
        - $ref: "#/components/schemas/StudioUser"
        - required:
            - lastActive
          properties:
            lastActive:
              type: string
              format: date-time
    AddMemberRequest:
      type: object
      properties:
        user:
          type: string
    AddMemberResponse:
      type: object
      properties:
        member:
          $ref: "#/components/schemas/MemberDbDto"
    AddParticipantRequest:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        teamId:
          type: integer
          format: int64
        userNameOrEmail:
          type: string
    AddParticipantResponse:
      type: object
      properties:
        participant:
          $ref: "#/components/schemas/ParticipantDbDto"
    AddTeamMemberResponse:
      type: object
      properties:
        member:
          $ref: "#/components/schemas/MemberDbDto"
    AgentSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
        connectionId:
          type: string
        workDir:
          type: string
        shared:
          type: boolean
    AltairPbsComputeConfig:
      title: Altair PBS configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
    Analytics:
      type: object
      properties:
        hubspotId:
          type: string
        posthogApiKey:
          type: string
        posthogApiHost:
          type: string
    AssociateActionLabelsRequest:
      type: object
      properties:
        actionIds:
          type: array
          items:
            type: string
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    AssociatePipelineLabelsRequest:
      type: object
      properties:
        pipelineIds:
          type: array
          items:
            type: integer
            format: int64
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    AssociateWorkflowLabelsRequest:
      type: object
      properties:
        workflowIds:
          type: array
          items:
            type: string
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    Avatar:
      type: object
      properties:
        id:
          maxLength: 22
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    AwsBatchConfig:
      title: AWS Batch configuration
      type: object
      properties:
        storageType:
          type: string
          deprecated: true
        lustreId:
          type: string
          deprecated: true
        volumes:
          type: array
          items:
            type: string
        discriminator:
          type: string
          description: property to select the compute config platform
        region:
          type: string
        computeQueue:
          type: string
        dragenQueue:
          type: string
        dragenInstanceType:
          type: string
        computeJobRole:
          type: string
        executionRole:
          type: string
        headQueue:
          type: string
        headJobRole:
          type: string
        cliPath:
          type: string
        workDir:
          type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
        fusion2Enabled:
          type: boolean
        nvnmeStorageEnabled:
          type: boolean
        logGroup:
          type: string
        nextflowConfig:
          type: string
        fusionSnapshots:
          type: boolean
        forge:
          $ref: "#/components/schemas/ForgeConfig"
        forgedResources:
          type: array
          items:
            type: object
            additionalProperties: true
          x-speakeasy-terraform-ignore: true
      required:
        - workDir
        - region
        - forge
    AwsBatchPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        jobQueues:
          type: array
          items:
            $ref: "#/components/schemas/JobQueue"
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/Bucket"
        fileSystems:
          type: array
          items:
            $ref: "#/components/schemas/FsxFileSystem"
        efsFileSystems:
          type: array
          items:
            $ref: "#/components/schemas/EfsFileSystem"
        keyPairs:
          type: array
          items:
            type: string
        vpcs:
          type: array
          items:
            $ref: "#/components/schemas/Vpc"
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
        securityGroups:
          type: array
          items:
            $ref: "#/components/schemas/SecurityGroup"
        subnets:
          type: array
          items:
            $ref: "#/components/schemas/Subnet"
        instanceFamilies:
          type: array
          items:
            type: string
        allocStrategy:
          type: array
          items:
            type: string
    AwsCloudConfig:
      title: AWS Cloud configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        allowBuckets:
          type: array
          items:
            type: string
        region:
          type: string
        instanceType:
          type: string
        imageId:
          type: string
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        nextflowConfig:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
        fusion2Enabled:
          type: boolean
        logGroup:
          type: string
        arm64Enabled:
          type: boolean
        gpuEnabled:
          type: boolean
        ec2KeyPair:
          type: string
        ebsBootSize:
          type: integer
          format: int32
        instanceProfileArn:
          type: string
        subnetId:
          type: string
        securityGroups:
          type: array
          items:
            type: string
        forgedResources:
          type: array
          items:
            type: object
            additionalProperties: true
          x-speakeasy-terraform-ignore: true
      required:
        - region
        - workDir
    AwsCloudPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/Bucket"
        keyPairs:
          type: array
          items:
            type: string
        vpcs:
          type: array
          items:
            $ref: "#/components/schemas/Vpc"
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
        securityGroups:
          type: array
          items:
            $ref: "#/components/schemas/SecurityGroup"
        subnets:
          type: array
          items:
            $ref: "#/components/schemas/Subnet"
        instanceTypes:
          type: array
          items:
            $ref: "#/components/schemas/InstanceType"
    AwsSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
        accessKey:
          type: string
        secretKey:
          type: string
          writeOnly: true
        assumeRoleArn:
          type: string
    AzBatchConfig:
      title: Azure batch configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
        workDir:
          type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        region:
          type: string
        headPool:
          type: string
        autoPoolMode:
          type: boolean
          deprecated: true
        forge:
          $ref: "#/components/schemas/AzBatchForgeConfig"
        tokenDuration:
          type: string
        deleteJobsOnCompletion:
          $ref: "#/components/schemas/JobCleanupPolicy"
        deletePoolsOnCompletion:
          type: boolean
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
        fusion2Enabled:
          type: boolean
        nextflowConfig:
          type: string
        managedIdentityClientId:
          type: string
          nullable: true
      required:
        - workDir
        - region
        - forge
    AzBatchForgeConfig:
      type: object
      properties:
        vmType:
          type: string
        vmCount:
          type: integer
          format: int32
        autoScale:
          type: boolean
        disposeOnDeletion:
          type: boolean
        containerRegIds:
          type: array
          items:
            type: string
      required:
        - vmCount
    AzBatchPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        pools:
          type: array
          items:
            type: string
        containers:
          type: array
          items:
            type: string
        vmTypes:
          type: array
          items:
            type: string
    AzureEntraKeys:
      type: object
      allOf:
        - $ref: "#/components/schemas/AzureSecurityKeys"
        - properties:
            discriminator:
              type: string
            tenantId:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
              writeOnly: true
    AzureReposSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
        username:
          type: string
        password:
          type: string
          writeOnly: true
    AzureSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
        batchName:
          type: string
        storageName:
          type: string
        batchKey:
          type: string
          writeOnly: true
        storageKey:
          type: string
          writeOnly: true
    BitBucketSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
        username:
          type: string
        password:
          type: string
          writeOnly: true
    Bucket:
      type: object
      properties:
        path:
          type: string
    CloudPriceModel:
      type: string
      enum:
        - standard
        - spot
    CodeCommitSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
        username:
          type: string
        password:
          type: string
          writeOnly: true
    ComputeConfig:
      type: object
      properties:
        workDir:
          type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        nextflowConfig:
          type: string
        discriminator:
          type: string
          description: property to select the compute config platform
      discriminator:
        propertyName: discriminator
        mapping:
          moab-platform: "#/components/schemas/MoabComputeConfig"
          aws-batch: "#/components/schemas/AwsBatchConfig"
          gke-platform: "#/components/schemas/GkeComputeConfig"
          google-batch: "#/components/schemas/GoogleBatchConfig"
          aws-cloud: "#/components/schemas/AwsCloudConfig"
          slurm-platform: "#/components/schemas/SlurmComputeConfig"
          k8s-platform: "#/components/schemas/K8sComputeConfig"
          altair-platform: "#/components/schemas/AltairPbsComputeConfig"
          lsf-platform: "#/components/schemas/LsfComputeConfig"
          azure-batch: "#/components/schemas/AzBatchConfig"
          seqeracompute-platform: "#/components/schemas/SeqeraComputeConfig"
          eks-platform: "#/components/schemas/EksComputeConfig"
          google-lifesciences: "#/components/schemas/GoogleLifeSciencesConfig"
          uge-platform: "#/components/schemas/UnivaComputeConfig"
      oneOf:
        - $ref: "#/components/schemas/AwsBatchConfig"
        - $ref: "#/components/schemas/AwsCloudConfig"
        - $ref: "#/components/schemas/SeqeraComputeConfig"
        - $ref: "#/components/schemas/GoogleLifeSciencesConfig"
        - $ref: "#/components/schemas/GoogleBatchConfig"
        - $ref: "#/components/schemas/AzBatchConfig"
        - $ref: "#/components/schemas/LsfComputeConfig"
        - $ref: "#/components/schemas/SlurmComputeConfig"
        - $ref: "#/components/schemas/K8sComputeConfig"
        - $ref: "#/components/schemas/EksComputeConfig"
        - $ref: "#/components/schemas/GkeComputeConfig"
        - $ref: "#/components/schemas/UnivaComputeConfig"
        - $ref: "#/components/schemas/AltairPbsComputeConfig"
        - $ref: "#/components/schemas/MoabComputeConfig"
    ComputeEnv.Status:
      type: string
      readOnly: true
      enum:
        - CREATING
        - AVAILABLE
        - ERRORED
        - INVALID
    ComputeEnvDbDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        platform:
          type: string
        region:
          type: string
    ComputeEnvQueryAttribute:
      type: string
      enum:
        - labels
    ComputeEnvResponseDto:
      type: object
      properties:
        id:
          type: string
          x-speakeasy-name-override: computeEnvId
        name:
          type: string
        description:
          type: string
        platform:
          type: string
          enum:
            - aws-batch
            - aws-cloud
            - seqeracompute-platform
            - google-lifesciences
            - google-batch
            - azure-batch
            - k8s-platform
            - eks-platform
            - gke-platform
            - uge-platform
            - slurm-platform
            - lsf-platform
            - altair-platform
        config:
          $ref: "#/components/schemas/ComputeConfig"
        dateCreated:
          type: string
          format: date-time
          x-speakeasy-param-readonly: true
        lastUpdated:
          type: string
          format: date-time
        lastUsed:
          type: string
          format: date-time
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
        status:
          $ref: "#/components/schemas/ComputeEnv.Status"
        message:
          type: string
        primary:
          type: boolean
        credentialsId:
          type: string
        managedIdentityId:
          type: string
        orgId:
          type: integer
          format: int64
        workspaceId:
          type: integer
          format: int64
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
      x-speakeasy-entity: ComputeEnv
    ComputeEnv_ComputeConfig_:
      required:
        - config
        - name
        - platform
        - credentialsId
      type: object
      properties:
        credentialsId:
          type: string
        orgId:
          type: integer
          format: int64
          readOnly: true
        workspaceId:
          type: integer
          format: int64
          readOnly: true
        id:
          maxLength: 22
          type: string
          readOnly: true
          x-speakeasy-name-override: computeEnvId
          x-speakeasy-param-readonly: true
        name:
          maxLength: 100
          type: string
        description:
          maxLength: 2000
          type: string
        platform:
          maxLength: 25
          type: string
          enum:
            - aws-batch
            - aws-cloud
            - google-lifesciences
            - google-batch
            - azure-batch
            - k8s-platform
            - eks-platform
            - gke-platform
            - uge-platform
            - slurm-platform
            - lsf-platform
            - altair-platform
            - moab-platform
            - local-platform
            - seqeracompute-platform
          x-speakeasy-plan-validators: ComputeConfigValidator
          x-speakeasy-param-optional: false
        config:
          $ref: "#/components/schemas/ComputeConfig"
        dateCreated:
          type: string
          format: date-time
          readOnly: true
          x-speakeasy-param-readonly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
          x-speakeasy-param-readonly: true
        lastUsed:
          type: string
          format: date-time
          readOnly: true
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          readOnly: true
        status:
          allOf:
            - $ref: "#/components/schemas/ComputeEnv.Status"
            - type: string
              readOnly: true
          x-speakeasy-param-readonly: true
        message:
          maxLength: 4096
          type: string
        primary:
          type: boolean
          readOnly: true
    ComputePlatform:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        credentialsProviders:
          type: array
          items:
            type: string
    ComputePlatformDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ComputeRegion:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ConfigEnvVariable:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        head:
          type: boolean
        compute:
          type: boolean
    ContainerData:
      required:
        - targetImage
      type: object
      properties:
        requestId:
          type: string
        sourceImage:
          type: string
        targetImage:
          type: string
        buildId:
          type: string
        scanId:
          type: string
        mirrorId:
          type: string
        cached:
          type: boolean
        freeze:
          type: boolean
        requestTime:
          type: string
          format: date-time
    ContainerRegistryKeys:
      type: object
      properties:
        discriminator:
          type: string
        userName:
          type: string
        password:
          type: string
          writeOnly: true
        registry:
          type: string
    CreateAccessTokenRequest:
      type: object
      properties:
        name:
          type: string
    CreateAccessTokenResponse:
      type: object
      properties:
        accessKey:
          type: string
        token:
          $ref: "#/components/schemas/AccessToken"
      x-speakeasy-entity: Tokens
    CreateActionRequest:
      type: object
      properties:
        name:
          type: string
        source:
          $ref: "#/components/schemas/Action.Source"
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
    CreateActionResponse:
      type: object
      properties:
        actionId:
          type: string
    CreateAvatarResponse:
      type: object
      properties:
        avatar:
          $ref: "#/components/schemas/Avatar"
        url:
          type: string
    CreateComputeEnvRequest:
      type: object
      properties:
        computeEnv:
          $ref: "#/components/schemas/ComputeEnv_ComputeConfig_"
        labelIds:
          type: array
          items:
            type: integer
            format: int64
      x-speakeasy-entity: ComputeEnv
      required:
        - name
        - credentialsId
        - platform
        - config
    CreateComputeEnvResponse:
      type: object
      properties:
        computeEnvId:
          type: string
      x-speakeasy-entity: ComputeEnv
    CreateCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: "#/components/schemas/Credentials"
    CreateCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    CreateDatasetRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      x-speakeasy-entity: Datasets
      required:
        - name
    CreateDatasetResponse:
      type: object
      properties:
        dataset:
          $ref: "#/components/schemas/Dataset"
    CreateLabelRequest:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
        isDefault:
          type: boolean
      x-speakeasy-entity: Label
    CreateLabelResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
        isDefault:
          type: boolean
      x-speakeasy-entity: Label
    CreateOrganizationRequest:
      type: object
      properties:
        organization:
          $ref: "#/components/schemas/Organization"
        logoId:
          type: string
    CreateOrganizationResponse:
      type: object
      properties:
        organization:
          $ref: "#/components/schemas/OrganizationDbDto"
    CreatePipelineRequest:
      type: object
      properties:
        name:
          type: string
          x-speakeasy-param-optional: false
        description:
          type: string
        icon:
          type: string
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
        labelIds:
          type: array
          items:
            type: integer
            format: int64
      required:
        - name
        - launch
    CreatePipelineResponse:
      type: object
      properties:
        pipeline:
          $ref: "#/components/schemas/PipelineDbDto"
      x-speakeasy-entity: Pipelines
    CreatePipelineSecretRequest:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      required:
        - name
        - value
    CreatePipelineSecretResponse:
      type: object
      properties:
        secretId:
          type: integer
          format: int64
    CreateTeamMemberRequest:
      type: object
      properties:
        userNameOrEmail:
          type: string
    CreateTeamRequest:
      type: object
      properties:
        team:
          $ref: "#/components/schemas/Team"
        avatarId:
          type: string
    CreateTeamResponse:
      type: object
      properties:
        team:
          $ref: "#/components/schemas/TeamDbDto"
    CreateWorkflowStarResponse:
      type: object
      properties:
        workflowId:
          type: string
    CreateWorkspaceRequest:
      type: object
      properties:
        workspace:
          $ref: "#/components/schemas/Workspace"
    CreateWorkspaceResponse:
      type: object
      properties:
        workspace:
          $ref: "#/components/schemas/Workspace"
    Credentials:
      required:
        - name
        - provider
        - keys
      type: object
      properties:
        id:
          maxLength: 22
          type: string
          x-speakeasy-name-override: credentialsId
          x-speakeasy-param-suppress-computed-diff: true
        name:
          maxLength: 100
          type: string
        description:
          type: string
          x-speakeasy-param-computed: false
        provider:
          maxLength: 16
          type: string
          enum:
            - aws
            - azure
            - google
            - github
            - gitlab
            - bitbucket
            - ssh
            - k8s
            - container-reg
            - tw-agent
            - codecommit
            - gitea
            - azurerepos
            - seqeracompute
            # discriminator:
            #   propertyName: discriminator
            #   mapping:
            #     aws: "#/components/schemas/AwsSecurityKeys"
            #     azure: "#/components/schemas/AzureSecurityKeys"
            #     google: "#/components/schemas/GoogleSecurityKeys"
            #     github: "#/components/schemas/GitHubSecurityKeys"
            #     gitlab: "#/components/schemas/GitLabSecurityKeys"
            #     bitbucket: "#/components/schemas/BitBucketSecurityKeys"
            #     ssh: "#/components/schemas/SSHSecurityKeys"
            #     k8s: "#/components/schemas/K8sSecurityKeys"
            #     container-reg: "#/components/schemas/ContainerRegistryKeys"
            #     tw-agent: "#/components/schemas/AgentSecurityKeys"
            #     codecommit: "#/components/schemas/CodeCommitSecurityKeys"
            #     gitea: "#/components/schemas/GiteaSecurityKeys"
            #     azurerepos: "#/components/schemas/AzureReposSecurityKeys"
            #     seqeracompute: "#/components/schemas/SeqeraComputeSecurityKeys"
            #     azure_entra: "#/components/schemas/AzureEntraKeys"
          x-speakeasy-name-override: providerType
          x-speakeasy-plan-validators: CredentialsConfigValidator
        baseUrl:
          maxLength: 200
          pattern: ""
          type: string
          x-speakeasy-param-computed: false
        category:
          maxLength: 20
          type: string
          x-speakeasy-param-computed: false
        deleted:
          type: boolean
          readOnly: true
          x-speakeasy-param-suppress-computed-diff: true
        lastUsed:
          type: string
          format: date-time
          readOnly: true
          x-speakeasy-param-suppress-computed-diff: true
        dateCreated:
          type: string
          format: date-time
          readOnly: true
          x-speakeasy-param-suppress-computed-diff: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
          x-speakeasy-param-suppress-computed-diff: true
        keys:
          $ref: "#/components/schemas/SecurityKeys"
      x-speakeasy-entity: Credential
    DataLink.Status:
      type: string
      readOnly: true
      enum:
        - VALID
        - INVALID
    DataLinkContentResponse:
      type: object
      properties:
        originalPath:
          type: string
        objects:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkItem"
        nextPageToken:
          type: string
    DataLinkContentTreeListResponse:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkSimpleItem"
    DataLinkCreateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          $ref: "#/components/schemas/DataLinkType"
        provider:
          $ref: "#/components/schemas/DataLinkProvider"
        resourceRef:
          type: string
        publicAccessible:
          type: boolean
        credentialsId:
          type: string
      required:
        - credentialsId
        - description
        - name
        - provider
        - publicAccessible
        - resourceRef
        - type
    DataLinkCredentials:
      required:
        - id
        - name
        - provider
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        provider:
          $ref: "#/components/schemas/DataLinkProvider"
    DataLinkDeleteItemRequest:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
        dirs:
          type: array
          items:
            type: string
    DataLinkDeleteItemResponse:
      type: object
      properties:
        deletionFailures:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkItemDeletionFailure"
    DataLinkDownloadScriptResponse:
      type: object
      properties:
        script:
          type: string
    DataLinkDownloadUrlResponse:
      type: object
      properties:
        url:
          type: string
    DataLinkDto:
      type: object
      properties:
        id:
          type: string
          x-speakeasy-name-override: dataLinkId
        name:
          type: string
        description:
          type: string
        resourceRef:
          type: string
        type:
          $ref: "#/components/schemas/DataLinkType"
        provider:
          $ref: "#/components/schemas/DataLinkProvider"
        region:
          type: string
        credentials:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkCredentials"
        publicAccessible:
          type: boolean
        hidden:
          type: boolean
        status:
          allOf:
            - $ref: "#/components/schemas/DataLink.Status"
            - type: string
              readOnly: true
        message:
          type: string
    DataLinkFinishMultiPartUploadRequest:
      type: object
      properties:
        uploadId:
          type: string
        fileName:
          type: string
        tags:
          type: array
          items:
            $ref: "#/components/schemas/UploadEtag"
        withError:
          type: boolean
    DataLinkItem:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/DataLinkItemType"
        name:
          type: string
        size:
          type: integer
          format: int64
        mimeType:
          type: string
    DataLinkItemDeletionFailure:
      required:
        - dataLinkItem
        - errorMessage
      type: object
      properties:
        dataLinkItem:
          $ref: "#/components/schemas/DataLinkItem"
        errorMessage:
          type: string
    DataLinkItemType:
      type: string
      enum:
        - FOLDER
        - FILE
    DataLinkMultiPartUploadRequest:
      type: object
      properties:
        fileName:
          type: string
        contentLength:
          type: integer
          format: int64
        contentType:
          type: string
    DataLinkMultiPartUploadResponse:
      type: object
      properties:
        uploadId:
          type: string
        uploadUrls:
          type: array
          items:
            type: string
    DataLinkProvider:
      type: string
      enum:
        - aws
        - google
        - azure
        - azure_entra
        - seqeracompute
      x-speakeasy-name-override: providerType
    DataLinkResponse:
      type: object
      properties:
        dataLink:
          $ref: "#/components/schemas/DataLinkDto"
    DataLinkSimpleItem:
      required:
        - path
        - size
      type: object
      properties:
        path:
          type: string
        size:
          type: integer
          format: int64
    DataLinkType:
      type: string
      enum:
        - bucket
    DataLinkUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        credentialsId:
          type: string
    DataLinksListResponse:
      type: object
      properties:
        dataLinks:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkDto"
        totalSize:
          type: integer
          format: int64
    DataStudioCheckpointDto:
      required:
        - author
        - dateCreated
        - dateSaved
        - id
        - name
        - path
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateSaved:
          type: string
          format: date-time
        author:
          $ref: "#/components/schemas/StudioUser"
        path:
          type: string
    DataStudioCheckpointUpdateRequest:
      type: object
      properties:
        name:
          type: string
    DataStudioComputeEnvDto:
      type: object
      allOf:
        - $ref: "#/components/schemas/ComputeEnvDbDto"
        - properties:
            credentialsId:
              type: string
            workDir:
              type: string
      x-speakeasy-entity: Studios
    DataStudioConfiguration:
      type: object
      properties:
        gpu:
          minimum: 0
          type: integer
          format: int32
        cpu:
          minimum: 0
          type: integer
          format: int32
        memory:
          minimum: 0
          type: integer
          format: int32
        mountData:
          type: array
          items:
            type: string
        condaEnvironment:
          maxLength: 2048
          type: string
        lifespanHours:
          minimum: 0
          type: integer
          format: int32
      x-speakeasy-entity: Studios
    DataStudioCreateRequest:
      required:
        - computeEnvId
        - dataStudioToolUrl
        - name
      type: object
      properties:
        name:
          maxLength: 80
          minLength: 1
          type: string
        description:
          maxLength: 2048
          type: string
        dataStudioToolUrl:
          minLength: 1
          type: string
        computeEnvId:
          minLength: 1
          type: string
        initialCheckpointId:
          type: integer
          format: int64
        configuration:
          $ref: "#/components/schemas/DataStudioConfiguration"
        isPrivate:
          type: boolean
        labelIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
        spot:
          type: boolean
          nullable: true
      x-speakeasy-entity: Studios
    DataStudioCreateResponse:
      type: object
      properties:
        studio:
          $ref: "#/components/schemas/DataStudioDto"
    DataStudioDto:
      type: object
      properties:
        sessionId:
          type: string
          x-speakeasy-param-optional: true
          x-speakeasy-param-readonly: true
          x-speakeasy-name-override: sessionId
        workspaceId:
          type: integer
          format: int64
        parentCheckpoint:
          $ref: "#/components/schemas/DataStudioDto.ParentCheckpoint"
        user:
          $ref: "#/components/schemas/StudioUser"
        name:
          type: string
        description:
          type: string
        studioUrl:
          type: string
        computeEnv:
          $ref: "#/components/schemas/DataStudioComputeEnvDto"
        template:
          $ref: "#/components/schemas/DataStudioTemplate"
        configuration:
          $ref: "#/components/schemas/DataStudioConfiguration"
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        lastStarted:
          type: string
          format: date-time
        effectiveLifespanHours:
          type: integer
          format: int32
        activeConnections:
          type: array
          items:
            $ref: "#/components/schemas/ActiveConnection"
        statusInfo:
          $ref: "#/components/schemas/DataStudioStatusInfo"
        waveBuildUrl:
          type: string
        baseImage:
          type: string
        customImage:
          type: boolean
        isPrivate:
          type: boolean
        mountedDataLinks:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkDto"
        progress:
          type: array
          items:
            $ref: "#/components/schemas/DataStudioProgressStep"
        labels:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/LabelDbDto"
      x-speakeasy-entity: Studios
    DataStudioDto.ParentCheckpoint:
      type: object
      properties:
        checkpointId:
          type: integer
          format: int64
        checkpointName:
          type: string
        sessionId:
          type: string
        studioName:
          type: string
    DataStudioListCheckpointsResponse:
      required:
        - checkpoints
        - totalSize
      type: object
      properties:
        checkpoints:
          type: array
          items:
            $ref: "#/components/schemas/DataStudioCheckpointDto"
        totalSize:
          type: integer
          format: int64
    DataStudioListResponse:
      required:
        - studios
        - totalSize
      type: object
      properties:
        studios:
          type: array
          items:
            $ref: "#/components/schemas/DataStudioDto"
        totalSize:
          type: integer
          format: int64
    DataStudioMountedLinksResponse:
      type: object
      properties:
        dataLinkIds:
          type: array
          items:
            type: string
    DataStudioProgressStep:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/DataStudioProgressStep.Status"
        message:
          type: string
        warnings:
          type: array
          items:
            type: string
    DataStudioProgressStep.Status:
      type: string
      enum:
        - pending
        - in-progress
        - succeeded
        - errored
    DataStudioQueryAttribute:
      type: string
      enum:
        - labels
    DataStudioStartRequest:
      type: object
      properties:
        configuration:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/DataStudioConfiguration"
        description:
          type: string
          nullable: true
        labelIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
        spot:
          type: boolean
          nullable: true
    DataStudioStartResponse:
      required:
        - jobSubmitted
        - sessionId
        - statusInfo
      type: object
      properties:
        jobSubmitted:
          type: boolean
        sessionId:
          type: string
        statusInfo:
          $ref: "#/components/schemas/DataStudioStatusInfo"
    DataStudioStatus:
      type: string
      enum:
        - starting
        - running
        - stopping
        - stopped
        - errored
        - building
        - buildFailed
    DataStudioStatusInfo:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/DataStudioStatus"
        message:
          type: string
        lastUpdate:
          type: string
          format: date-time
    DataStudioStopResponse:
      required:
        - jobSubmitted
        - sessionId
        - statusInfo
      type: object
      properties:
        jobSubmitted:
          type: boolean
        sessionId:
          type: string
        statusInfo:
          $ref: "#/components/schemas/DataStudioStatusInfo"
    DataStudioTemplate:
      type: object
      properties:
        repository:
          type: string
        icon:
          type: string
        status:
          $ref: "#/components/schemas/DataStudioVersionStatus"
        tool:
          type: string
    DataStudioTemplatesListResponse:
      required:
        - templates
        - totalSize
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: "#/components/schemas/DataStudioTemplate"
        totalSize:
          type: integer
          format: int64
    DataStudioVersionStatus:
      type: string
      enum:
        - recommended
        - deprecated
        - experimental
        - unsupported
    DataStudioWorkspaceSettingsResponse:
      required:
        - lifespanHours
        - orgId
        - wspId
      type: object
      properties:
        orgId:
          type: integer
          format: int64
        wspId:
          type: integer
          format: int64
        lifespanHours:
          type: integer
          format: int32
    Dataset:
      required:
        - name
      type: object
      properties:
        id:
          maxLength: 22
          type: string
        name:
          maxLength: 100
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,98}$"
          type: string
        description:
          maxLength: 1000
          type: string
        mediaType:
          maxLength: 80
          type: string
        deleted:
          type: boolean
          readOnly: true
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
    DatasetVersionDbDto:
      type: object
      properties:
        datasetId:
          type: string
        datasetName:
          type: string
        datasetDescription:
          type: string
        hasHeader:
          type: boolean
        version:
          type: integer
          format: int64
        lastUpdated:
          type: string
          format: date-time
        fileName:
          type: string
        mediaType:
          type: string
        url:
          type: string
    DeleteCredentialsConflictResponse:
      type: object
      properties:
        credentialsId:
          type: string
        conflicts:
          type: array
          items:
            $ref: "#/components/schemas/DeleteCredentialsConflictResponse.Conflict"
    DeleteCredentialsConflictResponse.Conflict:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
        name:
          type: string
        url:
          type: string
    DeleteWorkflowsRequest:
      type: object
      properties:
        workflowIds:
          type: array
          items:
            type: string
    DeleteWorkflowsResponse:
      type: object
      properties:
        failedWorkflowIds:
          type: array
          items:
            type: string
    DescribeActionResponse:
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ActionResponseDto"
    DescribeComputeEnvResponse:
      type: object
      properties:
        computeEnv:
          $ref: "#/components/schemas/ComputeEnvResponseDto"
          x-speakeasy-entity: ComputeEnv
      x-speakeasy-entity: ComputeEnv
    DescribeCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: "#/components/schemas/Credentials"
    DescribeDatasetResponse:
      type: object
      properties:
        dataset:
          $ref: "#/components/schemas/Dataset"
    DescribeLaunchResponse:
      type: object
      properties:
        launch:
          $ref: "#/components/schemas/Launch"
    DescribeOrganizationQuotasResponse:
      type: object
      properties:
        quotas:
          $ref: "#/components/schemas/OrganizationQuotas"
    DescribeOrganizationResponse:
      type: object
      properties:
        organization:
          $ref: "#/components/schemas/OrganizationDbDto"
    DescribePipelineInfoResponse:
      type: object
      properties:
        pipelineInfo:
          $ref: "#/components/schemas/PipelineInfo"
    DescribePipelineResponse:
      type: object
      properties:
        pipeline:
          $ref: "#/components/schemas/PipelineDbDto"
    DescribePipelineSecretResponse:
      type: object
      properties:
        pipelineSecret:
          $ref: "#/components/schemas/PipelineSecret"
    DescribePlatformResponse:
      type: object
      properties:
        metainfo:
          $ref: "#/components/schemas/PlatformMetainfo"
    DescribeTaskResponse:
      type: object
      properties:
        task:
          $ref: "#/components/schemas/Task"
    DescribeTeamResponse:
      type: object
      properties:
        team:
          $ref: "#/components/schemas/TeamDbDto"
    DescribeUserResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserDbDto"
        needConsent:
          type: boolean
        defaultWorkspaceId:
          type: integer
          format: int64
    DescribeWorkflowLaunchResponse:
      type: object
      properties:
        launch:
          $ref: "#/components/schemas/WorkflowLaunchResponse"
    DescribeWorkflowResponse:
      type: object
      properties:
        workflow:
          $ref: "#/components/schemas/Workflow"
        progress:
          $ref: "#/components/schemas/ProgressData"
        platform:
          $ref: "#/components/schemas/ComputePlatformDto"
        jobInfo:
          $ref: "#/components/schemas/JobInfoDto"
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        optimized:
          type: boolean
        messages:
          type: array
          items:
            type: string
      x-speakeasy-entity: Workflows
    DescribeWorkspaceResponse:
      type: object
      properties:
        workspace:
          $ref: "#/components/schemas/Workspace"
    EfsFileSystem:
      type: object
      properties:
        id:
          type: string
    EksComputeConfig:
      title: Amazon EKS cluster configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/K8sComputeConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
            workDir:
              type: string
            preRunScript:
              type: string
            postRunScript:
              type: string
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
            nextflowConfig:
              type: string
            region:
              type: string
              description: AWS region
            clusterName:
              type: string
              description: The AWS EKS cluster name
            waveEnabled:
              type: boolean
            fusion2Enabled:
              type: boolean
      required:
        - region
        - clusterName
    EksPlatformMetaInfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        clusters:
          type: array
          items:
            type: string
    EmptyBodyRequest:
      type: object
    ErrorResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
    EventType:
      type: object
      properties:
        source:
          type: string
        display:
          type: string
        description:
          type: string
        enabled:
          type: boolean
    ForgeConfig:
      type: object
      properties:
        type:
          type: string
          enum:
            - SPOT
            - EC2
        minCpus:
          type: integer
          format: int32
        maxCpus:
          type: integer
          format: int32
        gpuEnabled:
          type: boolean
        ebsAutoScale:
          type: boolean
        instanceTypes:
          type: array
          items:
            type: string
        allocStrategy:
          type: string
          enum:
            - BEST_FIT
            - BEST_FIT_PROGRESSIVE
            - SPOT_CAPACITY_OPTIMIZED
            - SPOT_PRICE_CAPACITY_OPTIMIZED
        imageId:
          type: string
        vpcId:
          type: string
        subnets:
          type: array
          items:
            type: string
        securityGroups:
          type: array
          items:
            type: string
        fsxMount:
          type: string
        fsxName:
          type: string
        fsxSize:
          type: integer
          format: int32
        disposeOnDeletion:
          type: boolean
        ec2KeyPair:
          type: string
        allowBuckets:
          type: array
          items:
            type: string
        ebsBlockSize:
          type: integer
          format: int32
        fusionEnabled:
          type: boolean
          deprecated: true
        bidPercentage:
          type: integer
          format: int32
        efsCreate:
          type: boolean
        efsId:
          type: string
        efsMount:
          type: string
        dragenEnabled:
          type: boolean
        dragenAmiId:
          type: string
        ebsBootSize:
          type: integer
          format: int32
        ecsConfig:
          type: string
        fargateHeadEnabled:
          type: boolean
        arm64Enabled:
          type: boolean
        dragenInstanceType:
          type: string
      required:
        - type
        - minCpus
        - maxCpus
    FsxFileSystem:
      type: object
      properties:
        id:
          type: string
        dns:
          type: string
        mount:
          type: string
    GetProgressResponse:
      type: object
      properties:
        progress:
          $ref: "#/components/schemas/ProgressData"
    GetWorkflowMetricsResponse:
      type: object
      properties:
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/WorkflowMetrics"
    GitHubSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
        username:
          type: string
        password:
          type: string
          writeOnly: true
          x-speakeasy-param-sensitive: true
          x-speakeasy-param-suppress-computed-diff: true
    GitLabSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
        username:
          type: string
        password:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
    GiteaSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
        username:
          type: string
        password:
          type: string
          writeOnly: true
    GithubActionConfig:
      type: object
      properties:
        discriminator:
          type: string
        events:
          type: array
          items:
            type: string
    GithubActionEvent:
      type: object
      properties:
        discriminator:
          type: string
        ref:
          type: string
        commitId:
          type: string
        commitMessage:
          type: string
        pusherName:
          type: string
        pusherEmail:
          type: string
        timestamp:
          type: string
          format: date-time
    GkeComputeConfig:
      title: Google GKE cluster configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/K8sComputeConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
            workDir:
              type: string
            preRunScript:
              type: string
            postRunScript:
              type: string
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
            nextflowConfig:
              type: string
            region:
              type: string
              description: The GKE cluster region - or - zone
            clusterName:
              type: string
              description: The GKE cluster name
            fusion2Enabled:
              type: boolean
            waveEnabled:
              type: boolean
      required:
        - region
        - clusterName
    GkePlatformMetaInfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        clusters:
          type: array
          items:
            type: string
    GoogleBatchConfig:
      title: Google Batch service configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
        location:
          type: string
        workDir:
          type: string
        spot:
          type: boolean
        bootDiskSizeGb:
          type: integer
          format: int32
        cpuPlatform:
          type: string
        machineType:
          type: string
        projectId:
          type: string
        sshDaemon:
          type: boolean
        sshImage:
          type: string
        debugMode:
          type: integer
          format: int32
        copyImage:
          type: string
        usePrivateAddress:
          type: boolean
        labels:
          type: object
          additionalProperties:
            type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        nextflowConfig:
          type: string
        nfsTarget:
          type: string
        nfsMount:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
        fusion2Enabled:
          type: boolean
        serviceAccount:
          type: string
        network:
          type: string
        subnetwork:
          type: string
        headJobInstanceTemplate:
          type: string
        computeJobsInstanceTemplate:
          type: string
      required: 
        - workDir
        - location    
    GoogleLifeSciencesConfig:
      title: Google life sciences configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
        region:
          type: string
        zones:
          type: array
          items:
            type: string
        location:
          type: string
        workDir:
          type: string
        preemptible:
          type: boolean
        bootDiskSizeGb:
          type: integer
          format: int32
        projectId:
          type: string
        sshDaemon:
          type: boolean
        sshImage:
          type: string
        debugMode:
          type: integer
          format: int32
        copyImage:
          type: string
        usePrivateAddress:
          type: boolean
        labels:
          type: object
          additionalProperties:
            type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        nextflowConfig:
          type: string
        nfsTarget:
          type: string
        nfsMount:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
    GooglePlatformMetainfo:
      type: object
      properties:
        locations:
          type: array
          items:
            type: string
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        zones:
          type: array
          items:
            type: string
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/GooglePlatformMetainfo.Bucket"
        filestores:
          type: array
          items:
            $ref: "#/components/schemas/GooglePlatformMetainfo.Filestore"
    GooglePlatformMetainfo.Bucket:
      type: object
      properties:
        path:
          type: string
    GooglePlatformMetainfo.Filestore:
      type: object
      properties:
        target:
          type: string
        name:
          type: string
        location:
          type: string
    GoogleSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
        data:
          type: string
          writeOnly: true
    GridPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
    Image:
      required:
        - arch
        - description
        - id
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        arch:
          type: string
    InstanceType:
      required:
        - arch
      type: object
      properties:
        id:
          type: string
        arch:
          type: string
    Iterator_String_:
      type: object
    JobCleanupPolicy:
      type: string
      enum:
        - on_success
        - always
        - never
    JobInfoDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        operationId:
          type: string
        message:
          type: string
        status:
          type: string
        exitCode:
          type: integer
          format: int32
    JobQueue:
      required:
        - name
        - state
      type: object
      properties:
        name:
          type: string
        state:
          type: string
    K8sComputeConfig:
      title: Kubernetes compute configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
        workDir:
          type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        server:
          type: string
        sslCert:
          type: string
        namespace:
          type: string
        computeServiceAccount:
          type: string
        headServiceAccount:
          type: string
        storageClaimName:
          type: string
        storageMountPath:
          type: string
        podCleanup:
          $ref: "#/components/schemas/PodCleanupPolicy"
        headPodSpec:
          type: string
        servicePodSpec:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        nextflowConfig:
          type: string
      required:
        - workDir
        - server
        - namespace
        - sslCert
        - headServiceAccount
        - storageClaimName
    K8sPlatformMetaInfo:
      type: object
      properties:
        discriminator:
          type: string
    K8sSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
        certificate:
          type: string
        privateKey:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
    LabelDbDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
        isDefault:
          type: boolean
        dateCreated:
          type: string
          format: date-time
    LabelType:
      type: string
      enum:
        - simple
        - resource
        - all
    Launch:
      required:
        - dateCreated
        - pipeline
      type: object
      properties:
        id:
          maxLength: 22
          type: string
          x-speakeasy-param-readonly: true
        computeEnv:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/ComputeEnv_ComputeConfig_"
        pipeline:
          maxLength: 200
          type: string
        workDir:
          type: string
        revision:
          maxLength: 100
          type: string
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        mainScript:
          maxLength: 200
          type: string
        entryName:
          maxLength: 80
          type: string
        schemaName:
          maxLength: 100
          pattern: "[\\p{Graph}&&[^/]]\\p{Graph}+"
          type: string
        resume:
          type: boolean
        resumeLaunchId:
          maxLength: 22
          type: string
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        sessionId:
          maxLength: 36
          type: string
        runName:
          maxLength: 80
          type: string
        configProfiles:
          type: array
          items:
            type: string
        userSecrets:
          type: array
          items:
            type: string
        workspaceSecrets:
          type: array
          items:
            type: string
        optimizationId:
          maxLength: 32
          type: string
        optimizationTargets:
          type: string
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        launchContainer:
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    LaunchActionRequest:
      type: object
      properties:
        params:
          type: object
          additionalProperties: true
    LaunchActionResponse:
      type: object
      properties:
        workflowId:
          type: string
    ListAccessTokensResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: "#/components/schemas/AccessToken"
    ListActionsResponse:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: "#/components/schemas/ListActionsResponse.ActionInfo"
    ListActionsResponse.ActionInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pipeline:
          type: string
        source:
          $ref: "#/components/schemas/Action.Source"
        status:
          $ref: "#/components/schemas/Action.Status"
        lastSeen:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        event:
          $ref: "#/components/schemas/Action.EventType"
        endpoint:
          type: string
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        usageCmd:
          type: string
      x-speakeasy-entity: Action
    ListComputeEnvsResponse:
      type: object
      properties:
        computeEnvs:
          type: array
          items:
            $ref: "#/components/schemas/ListComputeEnvsResponse.Entry"
      x-speakeasy-entity: ComputeEnvs
      ## Compute Config Schemas
    ListComputeEnvsResponse.Entry:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        platform:
          type: string
        status:
          $ref: "#/components/schemas/ComputeEnv.Status"
        message:
          type: string
        lastUsed:
          type: string
          format: date-time
        primary:
          type: boolean
        workspaceName:
          type: string
        visibility:
          type: string
        workDir:
          type: string
        credentialsId:
          type: string
        region:
          type: string
    ListCredentialsResponse:
      type: object
      properties:
        credentials:
          type: array
          items:
            $ref: "#/components/schemas/Credentials"
      x-speakeasy-entity: Credentials
      ## Security Keys Schemas
    ListDatasetVersionsResponse:
      type: object
      properties:
        versions:
          type: array
          items:
            $ref: "#/components/schemas/DatasetVersionDbDto"
    ListDatasetsResponse:
      type: object
      properties:
        datasets:
          type: array
          items:
            $ref: "#/components/schemas/Dataset"
    ListEventTypesResponse:
      type: object
      properties:
        eventTypes:
          type: array
          items:
            $ref: "#/components/schemas/EventType"
    ListLabelsResponse:
      type: object
      properties:
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        totalSize:
          type: integer
          format: int64
    ListMembersResponse:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: "#/components/schemas/MemberDbDto"
        totalSize:
          type: integer
          format: int64
    ListOrganizationsResponse:
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationDbDto"
        totalSize:
          type: integer
          format: int32
    ListParticipantsResponse:
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: "#/components/schemas/ParticipantDbDto"
        totalSize:
          type: integer
          format: int64
    ListPipelineInfoResponse:
      type: object
      properties:
        pipelines:
          type: array
          items:
            type: string
    ListPipelineSecretsResponse:
      type: object
      properties:
        pipelineSecrets:
          type: array
          items:
            $ref: "#/components/schemas/PipelineSecret"
        totalSize:
          type: integer
          format: int64
    ListPipelinesResponse:
      type: object
      properties:
        pipelines:
          type: array
          items:
            $ref: "#/components/schemas/PipelineDbDto"
        totalSize:
          type: integer
          format: int64
    ListPlatformsResponse:
      type: object
      properties:
        platforms:
          type: array
          items:
            $ref: "#/components/schemas/ComputePlatform"
    ListRegionsResponse:
      type: object
      properties:
        regions:
          type: array
          items:
            $ref: "#/components/schemas/ComputeRegion"
    ListTasksResponse:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/DescribeTaskResponse"
        total:
          type: integer
          format: int64
    ListTeamResponse:
      type: object
      properties:
        teams:
          type: array
          items:
            $ref: "#/components/schemas/TeamDbDto"
        totalSize:
          type: integer
          format: int64
    ListWorkflowsResponse:
      type: object
      properties:
        workflows:
          type: array
          items:
            $ref: "#/components/schemas/ListWorkflowsResponse.ListWorkflowsElement"
        totalSize:
          type: integer
          format: int64
    ListWorkflowsResponse.ListWorkflowsElement:
      type: object
      properties:
        workflow:
          $ref: "#/components/schemas/WorkflowDbDto"
        progress:
          $ref: "#/components/schemas/ProgressData"
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        starred:
          type: boolean
        optimized:
          type: boolean
    ListWorkspacesAndOrgResponse:
      type: object
      properties:
        orgsAndWorkspaces:
          type: array
          items:
            $ref: "#/components/schemas/OrgAndWorkspaceDto"
    ListWorkspacesResponse:
      type: object
      properties:
        workspaces:
          type: array
          items:
            $ref: "#/components/schemas/WorkspaceDbDto"
    LocalPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
    Log:
      type: object
      properties:
        name:
          type: string
        cmd:
          type: array
          items:
            type: string
        start_time:
          type: string
        end_time:
          type: string
        stdout:
          type: string
        stderr:
          type: string
        exit_code:
          type: integer
          format: int32
    LogPage:
      type: object
      properties:
        truncated:
          type: boolean
        entries:
          $ref: "#/components/schemas/Iterator_String_"
        rewindToken:
          type: string
        forwardToken:
          type: string
        pending:
          type: boolean
        message:
          type: string
        downloads:
          type: array
          items:
            $ref: "#/components/schemas/LogPage.Download"
    LogPage.Download:
      type: object
      properties:
        saveName:
          type: string
        fileName:
          type: string
        displayText:
          type: string
    LsfComputeConfig:
      title: IBM LSF configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
            unitForLimits:
              type: string
            perJobMemLimit:
              type: boolean
            perTaskReserve:
              type: boolean
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
    MemberDbDto:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        userName:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        role:
          $ref: "#/components/schemas/OrgRole"
    MoabComputeConfig:
      title: Moab configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
    MultiRequestFileSchema:
      type: object
      properties:
        file:
          type: string
          format: binary
    NavbarConfig:
      type: object
      properties:
        menus:
          type: array
          items:
            $ref: "#/components/schemas/NavbarConfig.NavbarMenu"
    NavbarConfig.NavbarMenu:
      type: object
      properties:
        label:
          type: string
        url:
          type: string
    OrgAndWorkspaceDto:
      type: object
      properties:
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        orgLogoUrl:
          type: string
        orgType:
          $ref: "#/components/schemas/OrgType"
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        workspaceFullName:
          type: string
        visibility:
          $ref: "#/components/schemas/Visibility"
        roles:
          type: array
          items:
            type: string
    OrgRole:
      type: string
      enum:
        - owner
        - member
        - collaborator
    OrgType:
      type: string
      enum:
        - academic
        - evaluating
        - pro
        - basic
        - internal
    Organization:
      required:
        - fullName
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          readOnly: true
          x-speakeasy-param-optional: true
        name:
          maxLength: 40
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,38}$"
          type: string
        fullName:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        location:
          maxLength: 100
          type: string
        website:
          pattern: ""
          type: string
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
      x-speakeasy-entity: Orgs
      #x-speakeasy-name-override: orgId
    OrganizationDbDto:
      type: object
      properties:
        paying:
          type: boolean
          deprecated: true
        orgId:
          type: integer
          format: int64
        name:
          type: string
        fullName:
          type: string
        description:
          type: string
        location:
          type: string
        website:
          type: string
        logoId:
          type: string
          x-speakeasy-param-optional: true
        logoUrl:
          type: string
          x-speakeasy-param-optional: true
        memberId:
          type: integer
          format: int64
        memberRole:
          $ref: "#/components/schemas/OrgRole"
        type:
          $ref: "#/components/schemas/OrgType"
      x-speakeasy-entity: Orgs
    OrganizationQuotas:
      type: object
      properties:
        maxWorkspaces:
          type: integer
          format: int64
        maxMembers:
          type: integer
          format: int64
        maxTeams:
          type: integer
          format: int64
        maxPipelinesPerWorkspace:
          type: integer
          format: int64
        maxParticipantsPerWorkspace:
          type: integer
          format: int64
        maxDatasetsPerWorkspace:
          type: integer
          format: int64
        maxVersionsPerDataset:
          type: integer
          format: int64
        maxRuns:
          type: integer
          format: int64
        maxRunHistory:
          type: integer
          format: int64
        maxLabelsPerWorkspace:
          type: integer
          format: int64
        maxDataStudiosRunning:
          type: integer
          format: int64
        maxSeqeraComputeComputeEnvs:
          type: integer
          format: int64
        maxFusionThroughputBytes:
          type: integer
          description: Max Fusion throughput (read and write) in bytes
          format: int64
    ParticipantDbDto:
      type: object
      properties:
        participantId:
          type: integer
          format: int64
        memberId:
          type: integer
          format: int64
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        orgRole:
          $ref: "#/components/schemas/OrgRole"
        teamId:
          type: integer
          format: int64
        teamName:
          type: string
        wspRole:
          $ref: "#/components/schemas/WspRole"
        type:
          $ref: "#/components/schemas/ParticipantType"
        teamAvatarUrl:
          type: string
        userAvatarUrl:
          type: string
    ParticipantType:
      type: string
      enum:
        - MEMBER
        - TEAM
        - COLLABORATOR
    PipelineDbDto:
      type: object
      properties:
        pipelineId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        repository:
          type: string
        userId:
          type: integer
          format: int64
        userName:
          type: string
        userFirstName:
          type: string
        userLastName:
          type: string
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        visibility:
          type: string
        deleted:
          type: boolean
        lastUpdated:
          type: string
          format: date-time
        optimizationId:
          type: string
        optimizationTargets:
          type: string
        optimizationStatus:
          $ref: "#/components/schemas/PipelineOptimizationStatus"
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        computeEnv:
          $ref: "#/components/schemas/ComputeEnvDbDto"
      x-speakeasy-entity: Pipeline
      ## Users
    PipelineInfo:
      type: object
      properties:
        projectName:
          type: string
        simpleName:
          type: string
        repositoryUrl:
          type: string
        cloneUrl:
          type: string
        provider:
          type: string
          x-speakeasy-name-override: repositoryProvider
        configFiles:
          type: array
          items:
            type: string
        workDirs:
          type: array
          items:
            type: string
        revisions:
          type: array
          items:
            type: string
        profiles:
          type: array
          items:
            type: string
        manifest:
          $ref: "#/components/schemas/WfManifest"
        warnings:
          type: array
          items:
            type: string
    PipelineOptimizationStatus:
      type: string
      enum:
        - OPTIMIZED
        - OPTIMIZABLE
        - UNAVAILABLE
    PipelineQueryAttribute:
      type: string
      enum:
        - optimized
        - labels
        - computeEnv
    PipelineSchemaAttributes:
      type: string
      enum:
        - schema
        - params
    PipelineSchemaResponse:
      required:
        - schema
      type: object
      properties:
        schema:
          type: string
        params:
          type: string
    PipelineSecret:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          maxLength: 100
          pattern: "^[a-zA-Z_](?:[0-9A-Za-z]+|(_)(?!\\1)){1,49}$"
          type: string
        lastUsed:
          type: string
          format: date-time
          readOnly: true
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
      x-speakeasy-entity: PipelineSecret
    PlatformMetainfo:
      type: object
      discriminator:
        propertyName: discriminator
        mapping:
          gke-platform: "#/components/schemas/GkePlatformMetaInfo"
          aws-cloud: "#/components/schemas/AwsCloudPlatformMetainfo"
          k8s-platform: "#/components/schemas/K8sPlatformMetaInfo"
          grid: "#/components/schemas/GridPlatformMetainfo"
          aws-batch: "#/components/schemas/AwsBatchPlatformMetainfo"
          local-platform: "#/components/schemas/LocalPlatformMetainfo"
          azure-batch: "#/components/schemas/AzBatchPlatformMetainfo"
          eks-platform: "#/components/schemas/EksPlatformMetaInfo"
      oneOf:
        - $ref: "#/components/schemas/AwsBatchPlatformMetainfo"
        - $ref: "#/components/schemas/AwsCloudPlatformMetainfo"
        - $ref: "#/components/schemas/GooglePlatformMetainfo"
        - $ref: "#/components/schemas/AzBatchPlatformMetainfo"
        - $ref: "#/components/schemas/EksPlatformMetaInfo"
        - $ref: "#/components/schemas/GkePlatformMetaInfo"
        - $ref: "#/components/schemas/K8sPlatformMetaInfo"
        - $ref: "#/components/schemas/GridPlatformMetainfo"
        - $ref: "#/components/schemas/LocalPlatformMetainfo"
    PodCleanupPolicy:
      type: string
      enum:
        - on_success
        - always
        - never
    ProcessLoad:
      required:
        - aborted
        - cached
        - cpuLoad
        - cpuTime
        - cpus
        - failed
        - invCtxSwitch
        - loadCpus
        - loadMemory
        - loadTasks
        - memoryReq
        - memoryRss
        - peakCpus
        - peakMemory
        - peakTasks
        - pending
        - process
        - readBytes
        - running
        - submitted
        - succeeded
        - volCtxSwitch
        - writeBytes
      type: object
      properties:
        pending:
          type: integer
          format: int64
        submitted:
          type: integer
          format: int64
        running:
          type: integer
          format: int64
        succeeded:
          type: integer
          format: int64
        failed:
          type: integer
          format: int64
        cached:
          type: integer
          format: int64
        aborted:
          type: integer
          format: int64
        memoryEfficiency:
          type: number
          format: float
        cpuEfficiency:
          type: number
          format: float
        process:
          type: string
        cpus:
          type: integer
          format: int64
          deprecated: true
        cpuTime:
          type: integer
          format: int64
          deprecated: true
        cpuLoad:
          type: integer
          format: int64
          deprecated: true
        memoryRss:
          type: integer
          format: int64
          deprecated: true
        memoryReq:
          type: integer
          format: int64
          deprecated: true
        readBytes:
          type: integer
          format: int64
          deprecated: true
        writeBytes:
          type: integer
          format: int64
          deprecated: true
        volCtxSwitch:
          type: integer
          format: int64
          deprecated: true
        invCtxSwitch:
          type: integer
          format: int64
          deprecated: true
        loadTasks:
          type: integer
          format: int64
          deprecated: true
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakCpus:
          type: integer
          format: int64
        peakTasks:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    ProgressData:
      type: object
      properties:
        workflowProgress:
          $ref: "#/components/schemas/WorkflowLoad"
        processesProgress:
          type: array
          items:
            $ref: "#/components/schemas/ProcessLoad"
        totalProcesses:
          type: integer
          format: int32
    RandomWorkflowNameResponse:
      type: object
      properties:
        name:
          type: string
    ResourceData:
      type: object
      properties:
        warnings:
          type: array
          items:
            type: string
        mean:
          type: number
          format: float
        min:
          type: number
          format: float
        q1:
          type: number
          format: float
        q2:
          type: number
          format: float
        q3:
          type: number
          format: float
        max:
          type: number
          format: float
        minLabel:
          type: string
        maxLabel:
          type: string
        q1Label:
          type: string
        q2Label:
          type: string
        q3Label:
          type: string
    RunId:
      type: object
      properties:
        run_id:
          type: string
    RunListResponse:
      type: object
      properties:
        runs:
          type: array
          items:
            $ref: "#/components/schemas/RunStatus"
        next_page_token:
          type: string
    RunLog:
      type: object
      properties:
        run_id:
          type: string
        request:
          $ref: "#/components/schemas/RunRequest"
        state:
          $ref: "#/components/schemas/State"
        run_log:
          $ref: "#/components/schemas/Log"
        task_logs:
          type: array
          items:
            $ref: "#/components/schemas/Log"
        outputs:
          type: object
    RunRequest:
      type: object
      properties:
        workflow_params:
          type: string
        workflow_type:
          type: string
        workflow_type_version:
          type: string
        tags:
          type: object
          additionalProperties:
            type: string
        workflow_engine_parameters:
          type: object
          additionalProperties:
            type: string
        workflow_url:
          type: string
    RunStatus:
      type: object
      properties:
        run_id:
          type: string
        state:
          $ref: "#/components/schemas/State"
    SSHSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
        privateKey:
          type: string
          writeOnly: true
        passphrase:
          type: string
          writeOnly: true
    SecurityGroup:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        vpcId:
          type: string
    SecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
      discriminator:
        propertyName: discriminator
        mapping:
          github: "#/components/schemas/GitHubSecurityKeys"
          azurerepos: "#/components/schemas/AzureReposSecurityKeys"
          azure_entra: "#/components/schemas/AzureEntraKeys"
          container-reg: "#/components/schemas/ContainerRegistryKeys"
          tw-agent: "#/components/schemas/AgentSecurityKeys"
          k8s: "#/components/schemas/K8sSecurityKeys"
          ssh: "#/components/schemas/SSHSecurityKeys"
          google: "#/components/schemas/GoogleSecurityKeys"
          bitbucket: "#/components/schemas/BitBucketSecurityKeys"
          gitea: "#/components/schemas/GiteaSecurityKeys"
          seqeracompute: "#/components/schemas/SeqeraComputeSecurityKeys"
          codecommit: "#/components/schemas/CodeCommitSecurityKeys"
          gitlab: "#/components/schemas/GitLabSecurityKeys"
          aws: "#/components/schemas/AwsSecurityKeys"
          azure: "#/components/schemas/AzureSecurityKeys"
      oneOf:
        - $ref: "#/components/schemas/AwsSecurityKeys"
        - $ref: "#/components/schemas/GoogleSecurityKeys"
        - $ref: "#/components/schemas/GitHubSecurityKeys"
        - $ref: "#/components/schemas/GitLabSecurityKeys"
        - $ref: "#/components/schemas/BitBucketSecurityKeys"
        - $ref: "#/components/schemas/GiteaSecurityKeys"
        - $ref: "#/components/schemas/SSHSecurityKeys"
        - $ref: "#/components/schemas/K8sSecurityKeys"
        - $ref: "#/components/schemas/AzureSecurityKeys"
        - $ref: "#/components/schemas/AzureReposSecurityKeys"
        - $ref: "#/components/schemas/ContainerRegistryKeys"
        - $ref: "#/components/schemas/AgentSecurityKeys"
        - $ref: "#/components/schemas/CodeCommitSecurityKeys"
        - $ref: "#/components/schemas/AzureEntraKeys"
        - $ref: "#/components/schemas/SeqeraComputeSecurityKeys"
      x-speakeasy-param-computed: false
    SeqeraComputeConfig:
      title: Seqera Compute configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
      allOf:
        - $ref: "#/components/schemas/AwsBatchConfig"
      required:
        - region
    SeqeraComputeSecurityKeys:
      type: object
      allOf:
        - $ref: "#/components/schemas/AwsSecurityKeys"
        - properties:
            discriminator:
              type: string
    ServiceInfo:
      type: object
      properties:
        version:
          type: string
        apiVersion:
          type: string
        commitId:
          type: string
        authTypes:
          type: array
          items:
            type: string
        loginPath:
          type: string
        navbar:
          $ref: "#/components/schemas/NavbarConfig"
        heartbeatInterval:
          type: integer
          format: int32
        userWorkspaceEnabled:
          type: boolean
        allowInstanceCredentials:
          type: boolean
        landingUrl:
          type: string
        termsOfUseUrl:
          type: string
        contentUrl:
          type: string
        analytics:
          $ref: "#/components/schemas/Analytics"
        allowLocalRepos:
          type: boolean
          deprecated: true
        contentMaxFileSize:
          type: integer
          format: int64
        waveEnabled:
          type: boolean
        groundswellEnabled:
          type: boolean
        groundswellAllowedWorkspaces:
          type: array
          items:
            type: integer
            format: int64
        scmsServerUrl:
          type: string
        forgePrefix:
          type: string
        seqeraCloud:
          type: boolean
        evalWorkspaceIds:
          type: array
          items:
            type: integer
            format: int64
        contactEmail:
          type: string
        allowNextflowCliLogs:
          type: boolean
        logoutUrl:
          type: string
          nullable: true
    ServiceInfoResponse:
      type: object
      properties:
        serviceInfo:
          $ref: "#/components/schemas/ServiceInfo"
    SlurmComputeConfig:
      title: Slurm configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
    State:
      type: string
      enum:
        - UNKNOWN
        - QUEUED
        - INITIALIZING
        - RUNNING
        - PAUSED
        - COMPLETE
        - EXECUTOR_ERROR
        - SYSTEM_ERROR
        - CANCELED
        - CANCELING
    StudioUser:
      required:
        - avatar
        - email
        - id
        - userName
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          type: string
        email:
          type: string
        avatar:
          type: string
    SubmitWorkflowLaunchRequest:
      type: object
      properties:
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
    SubmitWorkflowLaunchResponse:
      type: object
      properties:
        workflowId:
          type: string
    Subnet:
      type: object
      properties:
        id:
          type: string
        zone:
          type: string
        vpcId:
          type: string
    Task:
      required:
        - status
        - taskId
      type: object
      properties:
        hash:
          type: string
        name:
          type: string
        process:
          type: string
        tag:
          type: string
        submit:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        complete:
          type: string
          format: date-time
        module:
          type: array
          items:
            type: string
        container:
          type: string
        attempt:
          type: integer
          format: int32
        script:
          type: string
        scratch:
          type: string
        workdir:
          type: string
        queue:
          type: string
        cpus:
          type: integer
          format: int32
        memory:
          type: integer
          format: int64
        disk:
          type: integer
          format: int64
        time:
          type: integer
          format: int64
        env:
          type: string
        executor:
          type: string
        machineType:
          type: string
        cloudZone:
          type: string
        priceModel:
          $ref: "#/components/schemas/CloudPriceModel"
        cost:
          type: number
        errorAction:
          type: string
        exitStatus:
          type: integer
          format: int32
        duration:
          type: integer
          format: int64
        realtime:
          type: integer
          format: int64
        nativeId:
          type: string
        pcpu:
          type: number
          format: double
        pmem:
          type: number
          format: double
        rss:
          type: integer
          format: int64
        vmem:
          type: integer
          format: int64
        peakRss:
          type: integer
          format: int64
        peakVmem:
          type: integer
          format: int64
        rchar:
          type: integer
          format: int64
        wchar:
          type: integer
          format: int64
        syscr:
          type: integer
          format: int64
        syscw:
          type: integer
          format: int64
        readBytes:
          type: integer
          format: int64
        writeBytes:
          type: integer
          format: int64
        volCtxt:
          type: integer
          format: int64
        invCtxt:
          type: integer
          format: int64
        exit:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
          nullable: true
        taskId:
          type: integer
          format: int64
        status:
          $ref: "#/components/schemas/TaskStatus"
        dateCreated:
          type: string
          format: date-time
          nullable: true
        lastUpdated:
          type: string
          format: date-time
          nullable: true
    TaskStatus:
      type: string
      enum:
        - NEW
        - SUBMITTED
        - RUNNING
        - CACHED
        - COMPLETED
        - FAILED
        - ABORTED
    Team:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          readOnly: true
          x-speakeasy-param-optional: true
          x-speakeasy-name-override: teamId
        name:
          maxLength: 40
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,38}$"
          type: string
        description:
          maxLength: 250
          type: string
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
      x-speakeasy-entity: Teams
    TeamDbDto:
      type: object
      properties:
        teamId:
          type: integer
          format: int64
          x-speakeasy-param-optional: true
          x-speakeasy-name-override: teamId
        name:
          type: string
        description:
          type: string
        avatarUrl:
          type: string
        membersCount:
          type: integer
          format: int64
      x-speakeasy-entity: Teams
    TraceBeginRequest:
      type: object
      properties:
        launchId:
          type: string
          deprecated: true
        workflow:
          $ref: "#/components/schemas/Workflow"
        processNames:
          type: array
          items:
            type: string
        towerLaunch:
          type: boolean
    TraceBeginResponse:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/TraceProcessingStatus"
        workflowId:
          type: string
        watchUrl:
          type: string
    TraceCompleteRequest:
      type: object
      properties:
        workflow:
          $ref: "#/components/schemas/Workflow"
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/WorkflowMetrics"
        progress:
          $ref: "#/components/schemas/TraceProgressData"
    TraceCompleteResponse:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/TraceProcessingStatus"
        workflowId:
          type: string
    TraceCreateRequest:
      type: object
      properties:
        launchId:
          type: string
          deprecated: true
        sessionId:
          type: string
        runName:
          type: string
        projectName:
          type: string
        repository:
          type: string
        workflowId:
          type: string
    TraceCreateResponse:
      type: object
      properties:
        message:
          type: string
        workflowId:
          type: string
    TraceHeartbeatRequest:
      type: object
      properties:
        progress:
          $ref: "#/components/schemas/TraceProgressData"
    TraceHeartbeatResponse:
      type: object
      properties:
        message:
          type: string
    TraceProcessingStatus:
      type: string
      enum:
        - OK
        - KO
    TraceProgressData:
      type: object
      properties:
        pending:
          type: integer
          format: int32
        submitted:
          type: integer
          format: int32
        running:
          type: integer
          format: int32
        succeeded:
          type: integer
          format: int32
        cached:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
        aborted:
          type: integer
          format: int32
        stored:
          type: integer
          format: int32
        ignored:
          type: integer
          format: int32
        retries:
          type: integer
          format: int32
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakRunning:
          type: integer
          format: int32
        peakCpus:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
        processes:
          type: array
          items:
            $ref: "#/components/schemas/TraceProgressDetail"
    TraceProgressDetail:
      type: object
      properties:
        index:
          type: integer
          format: int32
        name:
          type: string
        pending:
          type: integer
          format: int32
        submitted:
          type: integer
          format: int32
        running:
          type: integer
          format: int32
        succeeded:
          type: integer
          format: int32
        cached:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
        aborted:
          type: integer
          format: int32
        stored:
          type: integer
          format: int32
        ignored:
          type: integer
          format: int32
        retries:
          type: integer
          format: int32
        terminated:
          type: boolean
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakRunning:
          type: integer
          format: int32
        peakCpus:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
    TraceProgressRequest:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/Task"
        progress:
          $ref: "#/components/schemas/TraceProgressData"
        containers:
          type: array
          items:
            $ref: "#/components/schemas/ContainerData"
    TraceProgressResponse:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/TraceProcessingStatus"
        workflowId:
          type: string
    UnivaComputeConfig:
      title: Univa Grid Engine configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
    UpdateActionRequest:
      type: object
      properties:
        name:
          type: string
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
    UpdateComputeEnvRequest:
      type: object
      properties:
        name:
          type: string
        credentialsId:
          type: string
    UpdateCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: "#/components/schemas/Credentials"
    UpdateDatasetRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    UpdateLabelRequest:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        isDefault:
          type: boolean
    UpdateLabelResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        isDefault:
          type: boolean
    UpdateMemberRoleRequest:
      type: object
      properties:
        role:
          $ref: "#/components/schemas/OrgRole"
    UpdateOrganizationRequest:
      type: object
      properties:
        fullName:
          type: string
        name:
          type: string
        description:
          type: string
        location:
          type: string
        website:
          type: string
        logoId:
          type: string
        paying:
          type: boolean
          nullable: true
          deprecated: true
        type:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/OrgType"
    UpdateParticipantRoleRequest:
      type: object
      properties:
        role:
          $ref: "#/components/schemas/WspRole"
    UpdatePipelineRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    UpdatePipelineResponse:
      type: object
      properties:
        pipeline:
          $ref: "#/components/schemas/PipelineDbDto"
    UpdatePipelineSecretRequest:
      type: object
      properties:
        value:
          type: string
    UpdateTeamRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        avatarId:
          type: string
    UpdateWorkspaceRequest:
      type: object
      properties:
        name:
          type: string
        fullName:
          type: string
        description:
          type: string
        visibility:
          $ref: "#/components/schemas/Visibility"
    UploadDatasetVersionResponse:
      type: object
      properties:
        version:
          $ref: "#/components/schemas/DatasetVersionDbDto"
    UploadEtag:
      type: object
      properties:
        partNumber:
          type: integer
          format: int32
        eTag:
          type: string
    UserDbDto:
      required:
        - email
        - userName
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          maxLength: 40
          type: string
        email:
          maxLength: 255
          type: string
          format: email
        firstName:
          maxLength: 100
          type: string
        lastName:
          maxLength: 100
          type: string
        organization:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        avatar:
          type: string
        avatarId:
          type: string
        notification:
          type: boolean
        termsOfUseConsent:
          type: boolean
        marketingConsent:
          type: boolean
        lastAccess:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        deleted:
          type: boolean
      x-speakeasy-entity:
        - CurrentUser
        - User
    Visibility:
      type: string
      enum:
        - PRIVATE
        - SHARED
      x-speakeasy-param-optional: false
    Vpc:
      type: object
      properties:
        id:
          type: string
        isDefault:
          type: boolean
    WesErrorResponse:
      type: object
      properties:
        msg:
          type: string
        status_code:
          type: integer
          format: int32
    WfManifest:
      type: object
      properties:
        nextflowVersion:
          maxLength: 20
          type: string
        defaultBranch:
          maxLength: 20
          type: string
        version:
          maxLength: 20
          type: string
        homePage:
          maxLength: 200
          type: string
        gitmodules:
          maxLength: 150
          type: string
        description:
          maxLength: 1024
          type: string
        name:
          maxLength: 150
          type: string
        mainScript:
          maxLength: 100
          type: string
        author:
          maxLength: 150
          type: string
        icon:
          maxLength: 255
          type: string
    WfNextflow:
      type: object
      properties:
        version:
          maxLength: 20
          type: string
        build:
          maxLength: 10
          type: string
        timestamp:
          type: string
          format: date-time
    WfStats:
      type: object
      properties:
        computeTimeFmt:
          maxLength: 50
          type: string
        cachedCount:
          type: integer
          format: int32
        failedCount:
          type: integer
          format: int32
        ignoredCount:
          type: integer
          format: int32
        succeedCount:
          type: integer
          format: int32
        cachedCountFmt:
          type: string
        succeedCountFmt:
          type: string
        failedCountFmt:
          type: string
        ignoredCountFmt:
          type: string
        cachedPct:
          type: number
          format: float
        failedPct:
          type: number
          format: float
        succeedPct:
          type: number
          format: float
        ignoredPct:
          type: number
          format: float
        cachedDuration:
          type: integer
          format: int64
        failedDuration:
          type: integer
          format: int64
        succeedDuration:
          type: integer
          format: int64
    Workflow:
      required:
        - commandLine
        - projectName
        - runName
        - sessionId
        - submit
        - userName
        - workDir
      type: object
      properties:
        requiresAttention:
          type: boolean
        status:
          $ref: "#/components/schemas/WorkflowStatus"
        ownerId:
          type: integer
          format: int64
          readOnly: true
        repository:
          type: string
        id:
          maxLength: 16
          type: string
        submit:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        complete:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        runName:
          maxLength: 80
          type: string
        sessionId:
          maxLength: 36
          type: string
        profile:
          maxLength: 100
          type: string
        workDir:
          type: string
        commitId:
          maxLength: 40
          type: string
        userName:
          maxLength: 40
          type: string
        scriptId:
          maxLength: 40
          type: string
        revision:
          maxLength: 100
          type: string
        commandLine:
          maxLength: 8096
          type: string
        projectName:
          maxLength: 200
          type: string
        scriptName:
          maxLength: 100
          type: string
        launchId:
          maxLength: 22
          type: string
        configFiles:
          type: array
          items:
            type: string
        params:
          type: object
          additionalProperties: true
        configText:
          type: string
        manifest:
          $ref: "#/components/schemas/WfManifest"
        nextflow:
          $ref: "#/components/schemas/WfNextflow"
        stats:
          $ref: "#/components/schemas/WfStats"
        errorMessage:
          type: string
        errorReport:
          type: string
        deleted:
          type: boolean
          readOnly: true
        projectDir:
          type: string
        homeDir:
          type: string
        container:
          type: string
        containerEngine:
          type: string
        scriptFile:
          type: string
        launchDir:
          type: string
        duration:
          type: integer
          format: int64
        exitStatus:
          type: integer
          format: int32
        resume:
          type: boolean
        success:
          type: boolean
        logFile:
          maxLength: 255
          type: string
        outFile:
          maxLength: 255
          type: string
        operationId:
          maxLength: 110
          type: string
    WorkflowDbDto:
      type: object
      properties:
        messages:
          type: array
          items:
            type: string
        id:
          type: string
        ownerId:
          type: integer
          format: int64
        submit:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        complete:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        runName:
          type: string
        sessionId:
          type: string
        profile:
          type: string
        workDir:
          type: string
        commitId:
          type: string
        userName:
          type: string
        scriptId:
          type: string
        revision:
          type: string
        commandLine:
          type: string
        projectName:
          type: string
        scriptName:
          type: string
        launchId:
          type: string
        status:
          $ref: "#/components/schemas/WorkflowStatus"
        requiresAttention:
          type: boolean
        configFiles:
          type: array
          items:
            type: string
        params:
          type: object
          additionalProperties: true
        configText:
          type: string
        manifest:
          $ref: "#/components/schemas/WfManifest"
        nextflow:
          $ref: "#/components/schemas/WfNextflow"
        stats:
          $ref: "#/components/schemas/WfStats"
        errorMessage:
          type: string
        errorReport:
          type: string
        deleted:
          type: boolean
        projectDir:
          type: string
        homeDir:
          type: string
        container:
          type: string
        repository:
          type: string
        containerEngine:
          type: string
        scriptFile:
          type: string
        launchDir:
          type: string
        duration:
          type: integer
          format: int64
        exitStatus:
          type: integer
          format: int32
        resume:
          type: boolean
        success:
          type: boolean
    WorkflowLaunchRequest:
      type: object
      properties:
        computeEnvId:
          type: string
        runName:
          type: string
        pipeline:
          type: string
        workDir:
          type: string
        revision:
          type: string
        sessionId:
          type: string
        configProfiles:
          type: array
          items:
            type: string
        userSecrets:
          type: array
          items:
            type: string
        workspaceSecrets:
          type: array
          items:
            type: string
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        mainScript:
          type: string
        entryName:
          type: string
        schemaName:
          type: string
        resume:
          type: boolean
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        optimizationId:
          type: string
        optimizationTargets:
          type: string
        labelIds:
          type: array
          items:
            type: integer
            format: int64
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        launchContainer:
          type: string
        dateCreated:
          type: string
          format: date-time
      x-speakeasy-entity: Workflows
      required:
        - pipeline
    WorkflowLaunchResponse:
      type: object
      properties:
        id:
          type: string
        computeEnv:
          $ref: "#/components/schemas/ComputeEnv_ComputeConfig_"
        pipeline:
          type: string
        pipelineId:
          type: integer
          format: int64
        workDir:
          type: string
        revision:
          type: string
        sessionId:
          type: string
        configProfiles:
          type: array
          items:
            type: string
        userSecrets:
          type: array
          items:
            type: string
        workspaceSecrets:
          type: array
          items:
            type: string
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        mainScript:
          type: string
        entryName:
          type: string
        schemaName:
          type: string
        resume:
          type: boolean
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        resumeDir:
          type: string
        resumeCommitId:
          type: string
        headJobMemoryMb:
          type: integer
          format: int32
        headJobCpus:
          type: integer
          format: int32
        optimizationId:
          type: string
        optimizationTargets:
          type: string
        dateCreated:
          type: string
          format: date-time
    WorkflowLoad:
      required:
        - aborted
        - cached
        - cpuLoad
        - cpuTime
        - cpus
        - failed
        - invCtxSwitch
        - loadCpus
        - loadMemory
        - loadTasks
        - memoryReq
        - memoryRss
        - peakCpus
        - peakMemory
        - peakTasks
        - pending
        - readBytes
        - running
        - submitted
        - succeeded
        - volCtxSwitch
        - writeBytes
      type: object
      properties:
        pending:
          type: integer
          format: int64
        submitted:
          type: integer
          format: int64
        running:
          type: integer
          format: int64
        succeeded:
          type: integer
          format: int64
        failed:
          type: integer
          format: int64
        cached:
          type: integer
          format: int64
        aborted:
          type: integer
          format: int64
        memoryEfficiency:
          type: number
          format: float
        cpuEfficiency:
          type: number
          format: float
        cpus:
          type: integer
          format: int64
        cpuTime:
          type: integer
          format: int64
        cpuLoad:
          type: integer
          format: int64
        memoryRss:
          type: integer
          format: int64
        memoryReq:
          type: integer
          format: int64
        readBytes:
          type: integer
          format: int64
        writeBytes:
          type: integer
          format: int64
        volCtxSwitch:
          type: integer
          format: int64
        invCtxSwitch:
          type: integer
          format: int64
        cost:
          type: number
        loadTasks:
          type: integer
          format: int64
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakCpus:
          type: integer
          format: int64
        peakTasks:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
        executors:
          type: array
          items:
            type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    WorkflowLogResponse:
      type: object
      properties:
        log:
          $ref: "#/components/schemas/LogPage"
    WorkflowMetrics:
      required:
        - process
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        process:
          maxLength: 255
          type: string
        cpu:
          $ref: "#/components/schemas/ResourceData"
        mem:
          $ref: "#/components/schemas/ResourceData"
        vmem:
          $ref: "#/components/schemas/ResourceData"
        time:
          $ref: "#/components/schemas/ResourceData"
        reads:
          $ref: "#/components/schemas/ResourceData"
        writes:
          $ref: "#/components/schemas/ResourceData"
        cpuUsage:
          $ref: "#/components/schemas/ResourceData"
        memUsage:
          $ref: "#/components/schemas/ResourceData"
        timeUsage:
          $ref: "#/components/schemas/ResourceData"
    WorkflowQueryAttribute:
      type: string
      enum:
        - optimized
        - labels
        - messages
        - minimal
    WorkflowStatus:
      type: string
      enum:
        - SUBMITTED
        - RUNNING
        - SUCCEEDED
        - FAILED
        - CANCELLED
        - UNKNOWN
    Workspace:
      required:
        - fullName
        - name
        - visibility
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          x-speakeasy-param-optional: true
        name:
          maxLength: 40
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,38}$"
          type: string
          x-speakeasy-param-readonly: false
        fullName:
          maxLength: 100
          type: string
          x-speakeasy-param-readonly: false
        description:
          maxLength: 1000
          type: string
          x-speakeasy-param-readonly: false
        visibility:
          $ref: "#/components/schemas/Visibility"
          x-speakeasy-param-readonly: false
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
      x-speakeasy-entity: Workspace
    WorkspaceDbDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        fullName:
          type: string
        description:
          type: string
        visibility:
          $ref: "#/components/schemas/Visibility"
    WspRole:
      type: string
      enum:
        - owner
        - admin
        - maintain
        - launch
        - connect
        - view
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: jwt
tags:
  - name: actions
    description: Pipeline actions
  - name: avatars
    description: Avatars
  - name: compute-envs
    description: Compute environments
  - name: credentials
    description: Credentials
  - name: data-links
    description: Cloud storage directory paths in Data Explorer
  - name: datasets
    description: Pipeline input datasets (samplesheets) in CSV or TSV format
  - name: ga4gh
    description: GA4GH workflow execution service runs
  - name: labels
    description: Labels and resource labels
  - name: launch
    description: Workflow launch events
  - name: orgs
    description: Organizations
  - name: pipelines
    description: Pipelines
  - name: pipeline-secrets
    description: Pipeline secrets in a user or workspace context
  - name: platforms
    description: Computing platforms
  - name: service-info
    description: Seqera Platform API service information
  - name: studios
    description: Studios and Studio sessions
  - name: teams
    description: Teams in an organization context
  - name: tokens
    description: API access tokens
  - name: trace
    description: Workflow execution traces
  - name: users
    description: Users
  - name: workflows
    description: Workflow executions
  - name: workspaces
    description: Workspaces in an organization context
servers:
  - url: https://api.cloud.seqera.io
