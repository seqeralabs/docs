openapi: 3.0.1
info:
  title: Seqera API
  description: Seqera platform services API
  contact:
    url: https://seqera.io
    email: info@seqera.io
  version: 1.54.0
paths:
  /actions:
    get:
      tags:
        - actions
      operationId: ListActions
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ActionQueryAttribute"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListActionsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    post:
      tags:
        - actions
      operationId: CreateAction
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateActionRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateActionResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /actions/labels/add:
    post:
      tags:
        - labels
      operationId: AddLabelsToActions
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateActionLabelsRequest"
        required: true
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /actions/labels/apply:
    post:
      tags:
        - labels
      operationId: ApplyLabelsToActions
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateActionLabelsRequest"
        required: true
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /actions/labels/remove:
    post:
      tags:
        - labels
      operationId: RemoveLabelsFromActions
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateActionLabelsRequest"
        required: true
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /actions/types:
    get:
      tags:
        - actions
      operationId: ListActionTypes
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEventTypesResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /actions/validate:
    get:
      tags:
        - actions
      operationId: ValidateActionName
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /actions/{actionId}:
    get:
      tags:
        - actions
      operationId: DescribeAction
      parameters:
        - name: actionId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ActionQueryAttribute"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeActionResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    put:
      tags:
        - actions
      operationId: UpdateAction
      parameters:
        - name: actionId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateActionRequest"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    delete:
      tags:
        - actions
      operationId: DeleteAction
      parameters:
        - name: actionId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /actions/{actionId}/launch:
    post:
      tags:
        - actions
      operationId: LaunchAction
      parameters:
        - name: actionId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LaunchActionRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LaunchActionResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /actions/{actionId}/pause:
    post:
      tags:
        - actions
      operationId: PauseAction
      parameters:
        - name: actionId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /avatars:
    post:
      tags:
        - avatars
      operationId: CreateAvatar
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
            encoding:
              image:
                contentType: application/octet-stream
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAvatarResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /avatars/{avatarId}:
    get:
      tags:
        - avatars
      operationId: DownloadAvatar
      parameters:
        - name: avatarId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - BearerAuth: []
  /compute-envs:
    get:
      tags:
        - compute-envs
      operationId: ListComputeEnvs
      parameters:
        - name: status
          in: query
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListComputeEnvsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    post:
      tags:
        - compute-envs
      operationId: CreateComputeEnv
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateComputeEnvRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateComputeEnvResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /compute-envs/validate:
    get:
      tags:
        - compute-envs
      operationId: ValidateComputeEnvName
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /compute-envs/{computeEnvId}:
    get:
      tags:
        - compute-envs
      operationId: DescribeComputeEnv
      parameters:
        - name: computeEnvId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ComputeEnvQueryAttribute"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeComputeEnvResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    put:
      tags:
        - compute-envs
      operationId: UpdateComputeEnv
      parameters:
        - name: computeEnvId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateComputeEnvRequest"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    delete:
      tags:
        - compute-envs
      operationId: DeleteComputeEnv
      parameters:
        - name: computeEnvId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /compute-envs/{computeEnvId}/primary:
    post:
      tags:
        - compute-envs
      operationId: UpdateComputeEnvPrimary
      parameters:
        - name: computeEnvId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /credentials:
    get:
      tags:
        - credentials
      operationId: ListCredentials
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: platformId
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCredentialsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    post:
      tags:
        - credentials
      operationId: CreateCredentials
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCredentialsRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCredentialsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /credentials/validate:
    get:
      tags:
        - credentials
      operationId: ValidateCredentialsName
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /credentials/{credentialsId}:
    get:
      tags:
        - credentials
      operationId: DescribeCredentials
      parameters:
        - name: credentialsId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeCredentialsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    put:
      tags:
        - credentials
      operationId: UpdateCredentials
      parameters:
        - name: credentialsId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCredentialsRequest"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    delete:
      tags:
        - credentials
      operationId: DeleteCredentials
      parameters:
        - name: credentialsId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: checked
          in: query
          schema:
            type: boolean
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteCredentialsConflictResponse"
      security:
        - BearerAuth: []
  /data-links:
    get:
      tags:
        - data-links
      operationId: ListDataLinks
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          schema:
            type: string
        - name: search
          in: query
          schema:
            type: string
        - name: max
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: visibility
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinksListResponse"
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinksListResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    post:
      tags:
        - data-links
      operationId: CreateCustomDataLink
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkCreateRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /data-links/cache/refresh:
    get:
      tags:
        - data-links
      operationId: RefreshDataLinkCache
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}:
    get:
      tags:
        - data-links
      operationId: DescribeDataLink
      parameters:
        - name: dataLinkId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    put:
      tags:
        - data-links
      operationId: UpdateCustomDataLink
      parameters:
        - name: dataLinkId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkUpdateRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    delete:
      tags:
        - data-links
      operationId: DeleteCustomDataLink
      parameters:
        - name: dataLinkId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "204":
          description: DeleteCustomDataLink 204 response
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/browse:
    get:
      tags:
        - data-links
      operationId: ExploreDataLink
      parameters:
        - name: dataLinkId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          schema:
            type: string
        - name: search
          in: query
          schema:
            type: string
        - name: nextPageToken
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkContentResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/browse-tree:
    get:
      tags:
        - data-links
      summary: Explore a data-link tree
      description: Provides a list of all files in the provided paths (including files in sub-paths).
      operationId: ExploreDataLinkTree
      parameters:
        - name: dataLinkId
          in: path
          description: Datalink identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Optional credentials identifier
          schema:
            type: string
        - name: paths
          in: query
          description: List of paths
          schema:
            type: array
            items:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkContentTreeListResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the workspace, credentials or data link are not found or when the api is disabled for the workspace"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/browse/{path}:
    get:
      tags:
        - data-links
      operationId: ExploreDataLink_1
      parameters:
        - name: dataLinkId
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          schema:
            type: string
        - name: search
          in: query
          schema:
            type: string
        - name: nextPageToken
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkContentResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/content:
    delete:
      tags:
        - data-links
      summary: Delete a data-link file
      operationId: DeleteDataLinkItem
      parameters:
        - name: dataLinkId
          in: path
          description: Datalink identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Optional credentials identifier
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkDeleteItemRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDeleteItemResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the workspace, credentials or data link are not found or when the api is disabled for the workspace"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/download/{filePath}:
    get:
      tags:
        - data-links
      summary: Download a data-link file
      operationId: DownloadDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Datalink identifier
          required: true
          schema:
            type: string
        - name: filePath
          in: path
          description: File path to download
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Optional credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the API is disabled or the file does not exist or data link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/generate-download-url:
    get:
      tags:
        - data-links
      summary: Generate the URL to download a data-link file
      operationId: GenerateDownloadUrlDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Datalink identifier
          required: true
          schema:
            type: string
        - name: filePath
          in: query
          description: File path to download
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Optional credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: preview
          in: query
          description: "Whether to generate the URL for preview purposes or direct download (default: false)"
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDownloadUrlResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the API is disabled or data link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/script/download:
    get:
      tags:
        - data-links
      summary: Generate download script
      operationId: GenerateDownloadScript
      parameters:
        - name: dataLinkId
          in: path
          description: Datalink identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Optional credentials identifier
          schema:
            type: string
        - name: dirs
          in: query
          description: List of paths to directories to download
          schema:
            type: array
            items:
              type: object
        - name: files
          in: query
          description: List of paths to files to download
          schema:
            type: array
            items:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDownloadScriptResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the workspace, credentials or data link are not found or when the api is disabled for the workspace"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload:
    post:
      tags:
        - data-links
      summary: Generate the URL to upload a data-link file
      description: |-
        Generates a URL that can be used to upload a file or multiple files.
        For DataLinks where the provider is AWS, an additional follow up request needs to be sent after your file upload has completed (or encountered an error) to finalize the upload - see the `/upload/finish` endpoint.
      operationId: GenerateDataLinkUploadUrl
      parameters:
        - name: dataLinkId
          in: path
          description: Datalink identifier
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Optional credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: Origin
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkMultiPartUploadRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkMultiPartUploadResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the API is disabled or the file does not exist, or data link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload/finish:
    post:
      tags:
        - data-links
      summary: Finish upload of a data-link file
      description: Finish upload of a data-link file. This is necessary for DataLinks where the provider is AWS (DataLinkProvider=aws) in either the event of finalizing a successful file upload or aborting an upload if an error was encountered while uploading a file using the generated upload URL - see the `/upload` endpoint.
      operationId: FinishDataLinkUpload
      parameters:
        - name: dataLinkId
          in: path
          description: Datalink identifier
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Optional credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkFinishMultiPartUploadRequest"
        required: true
      responses:
        "202":
          description: No content
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the API is disabled or the file does not exist, or data link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "200":
          description: FinishDataLinkUpload 200 response
          content:
            application/json:
              schema:
                type: object
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload/finish/{dirPath}:
    post:
      tags:
        - data-links
      summary: Finish upload of a data-link file
      description: "Finish upload of a data-link file. This is necessary for DataLinks where the provider is AWS (DataLinkProvider=aws) in either the event of finalizing a successful file upload or aborting an upload if an error was encountered while uploading a file using the generated upload URL - see the `/upload/{+dirPath}` endpoint."
      operationId: FinishDataLinkUpload_1
      parameters:
        - name: dataLinkId
          in: path
          description: Datalink identifier
          required: true
          schema:
            type: string
        - name: dirPath
          in: path
          description: Path to the destination directory
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Optional credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkFinishMultiPartUploadRequest"
        required: true
      responses:
        "202":
          description: No content
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the API is disabled or the file does not exist, or data link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "200":
          description: FinishDataLinkUpload_1 200 response
          content:
            application/json:
              schema:
                type: object
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload/{dirPath}:
    post:
      tags:
        - data-links
      summary: Generate the URL to upload a data-link file
      description: |-
        Generates a URL that can be used to upload a file or multiple files.
        For DataLinks where the provider is AWS, an additional follow up request needs to be sent after your file upload has completed (or encountered an error) to finalize the upload - see the `/upload/finish/{+dirPath}` endpoint.
      operationId: GenerateDataLinkUploadUrl_1
      parameters:
        - name: dataLinkId
          in: path
          description: Datalink identifier
          required: true
          schema:
            type: string
        - name: dirPath
          in: path
          description: Path to the destination directory
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Optional credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: Origin
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkMultiPartUploadRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkMultiPartUploadResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the API is disabled or the file does not exist or data link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /datasets:
    get:
      tags:
        - datasets
      operationId: ListDatasetsV2
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    post:
      tags:
        - datasets
      operationId: CreateDatasetV2
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasetRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDatasetResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /datasets/versions:
    get:
      tags:
        - datasets
      operationId: ListLatestDatasetVersionsV2
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: mimeType
          in: query
          schema:
            type: string
            nullable: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /datasets/{datasetId}:
    put:
      tags:
        - datasets
      operationId: UpdateDatasetV2
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDatasetRequest"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    delete:
      tags:
        - datasets
      operationId: DeleteDatasetV2
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /datasets/{datasetId}/metadata:
    get:
      tags:
        - datasets
      operationId: DescribeDatasetV2
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDatasetResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /datasets/{datasetId}/upload:
    post:
      tags:
        - datasets
      operationId: UploadDatasetV2
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          required: true
          schema:
            type: string
        - name: header
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MultiRequestFileSchema"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadDatasetVersionResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /datasets/{datasetId}/v/{version}/n/{fileName}:
    get:
      tags:
        - datasets
      operationId: DownloadDatasetV2
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
        - name: fileName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /datasets/{datasetId}/versions:
    get:
      tags:
        - datasets
      operationId: ListDatasetVersionsV2
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          required: true
          schema:
            type: string
        - name: mimeType
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /ga4gh/wes/v1/runs:
    get:
      tags:
        - ga4gh
      operationId: Ga4ghRunList
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
            format: int32
        - name: page_token
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunListResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Forbidden
    post:
      tags:
        - ga4gh
      operationId: Ga4ghRunCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RunRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunId"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Forbidden
  /ga4gh/wes/v1/runs/{run_id}:
    get:
      tags:
        - ga4gh
      operationId: Ga4ghRunDescribe
      parameters:
        - name: run_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunLog"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Forbidden
  /ga4gh/wes/v1/runs/{run_id}/cancel:
    post:
      tags:
        - ga4gh
      operationId: Ga4ghRunCancel
      parameters:
        - name: run_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunId"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Forbidden
  /ga4gh/wes/v1/runs/{run_id}/status:
    get:
      tags:
        - ga4gh
      operationId: Ga4ghRunStatus
      parameters:
        - name: run_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunStatus"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Forbidden
  /ga4gh/wes/v1/service-info:
    get:
      tags:
        - ga4gh
      operationId: Ga4ghServiceInfo
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceInfo"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Forbidden
  /labels:
    get:
      tags:
        - labels
      operationId: ListLabels
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            $ref: "#/components/schemas/LabelType"
        - name: isDefault
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLabelsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    post:
      tags:
        - labels
      operationId: CreateLabel
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLabelRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLabelResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /labels/dynamic/allowed:
    get:
      tags:
        - labels
      operationId: GetAllowedDynamicLabels
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllowedDynamicLabelsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /labels/{labelId}:
    put:
      tags:
        - labels
      operationId: UpdateLabel
      parameters:
        - name: labelId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLabelRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLabelResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    delete:
      tags:
        - labels
      operationId: DeleteLabel
      parameters:
        - name: labelId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /launch/{launchId}:
    get:
      tags:
        - launch
      operationId: DescribeLaunch
      parameters:
        - name: launchId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLaunchResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /launch/{launchId}/datasets:
    get:
      tags:
        - datasets
      operationId: ListLaunchDatasetVersions
      parameters:
        - name: launchId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLaunchResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs:
    get:
      tags:
        - orgs
      operationId: ListOrganizations
      parameters:
        - name: role
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrganizationsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    post:
      tags:
        - orgs
      operationId: CreateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrganizationRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrganizationResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/validate:
    get:
      tags:
        - orgs
      operationId: ValidateOrganizationName
      parameters:
        - name: name
          in: query
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}:
    get:
      tags:
        - orgs
      operationId: DescribeOrganization
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOrganizationResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    put:
      tags:
        - orgs
      operationId: UpdateOrganization
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrganizationRequest"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    delete:
      tags:
        - orgs
      operationId: DeleteOrganization
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/collaborators:
    get:
      tags:
        - orgs
      operationId: ListOrganizationCollaborators
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMembersResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/members:
    get:
      tags:
        - orgs
      operationId: ListOrganizationMembers
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMembersResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/add:
    put:
      tags:
        - orgs
      operationId: CreateOrganizationMember
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddMemberRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddMemberResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/leave:
    delete:
      tags:
        - orgs
      operationId: LeaveOrganization
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/{memberId}:
    delete:
      tags:
        - orgs
      operationId: DeleteOrganizationMember
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: memberId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/{memberId}/role:
    put:
      tags:
        - orgs
      operationId: UpdateOrganizationMemberRole
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: memberId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMemberRoleRequest"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/quotas:
    get:
      tags:
        - orgs
      operationId: DescribeOrganizationQuotas
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: include
          in: query
          schema:
            type: array
            items:
              type: object
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOrganizationQuotasResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams:
    get:
      tags:
        - teams
      operationId: ListOrganizationTeams
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTeamResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    post:
      tags:
        - teams
      operationId: CreateOrganizationTeam
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTeamRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTeamResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/validate:
    get:
      tags:
        - teams
      operationId: ValidateTeamName
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}:
    get:
      tags:
        - teams
      operationId: DescribeOrganizationTeam
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTeamResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    put:
      tags:
        - teams
      operationId: UpdateOrganizationTeam
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTeamRequest"
        required: true
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "204":
          description: UpdateOrganizationTeam 204 response
      security:
        - BearerAuth: []
    delete:
      tags:
        - teams
      operationId: DeleteOrganizationTeam
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}/members:
    get:
      tags:
        - teams
      operationId: ListOrganizationTeamMembers
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
        - name: search
          in: query
          schema:
            type: string
            nullable: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMembersResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    post:
      tags:
        - teams
      operationId: CreateOrganizationTeamMember
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTeamMemberRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddTeamMemberResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}/members/{memberId}/delete:
    delete:
      tags:
        - teams
      operationId: DeleteOrganizationTeamMember
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: memberId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}/workspaces:
    get:
      tags:
        - teams
      operationId: ListWorkspacesByTeam
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkspacesResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces:
    get:
      tags:
        - workspaces
      operationId: ListWorkspaces
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkspacesResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    post:
      tags:
        - workspaces
      operationId: CreateWorkspace
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWorkspaceRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkspaceResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/validate:
    get:
      tags:
        - workspaces
      operationId: WorkspaceValidate
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}:
    get:
      tags:
        - workspaces
      operationId: DescribeWorkspace
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkspaceResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    put:
      tags:
        - workspaces
      operationId: UpdateWorkspace
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkspaceRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkspaceResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    delete:
      tags:
        - workspaces
      operationId: DeleteWorkspace
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants:
    get:
      tags:
        - workspaces
      operationId: ListWorkspaceParticipants
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListParticipantsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    delete:
      tags:
        - workspaces
      operationId: LeaveWorkspaceParticipant
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants/add:
    put:
      tags:
        - workspaces
      operationId: CreateWorkspaceParticipant
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddParticipantRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddParticipantResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants/{participantId}:
    delete:
      tags:
        - workspaces
      operationId: DeleteWorkspaceParticipant
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: participantId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants/{participantId}/role:
    put:
      tags:
        - workspaces
      operationId: UpdateWorkspaceParticipantRole
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: participantId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateParticipantRoleRequest"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/settings/studios:
    get:
      tags:
        - workspaces
      operationId: FindDataStudiosWorkspaceSettings
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkspaceRequest"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioWorkspaceSettingsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    put:
      tags:
        - workspaces
      operationId: UpdateDataStudiosWorkspaceSettings
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkspaceRequest"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: UpdateDataStudiosWorkspaceSettings 200 response
          content:
            application/json:
              schema:
                type: object
      security:
        - BearerAuth: []
  /pipeline-secrets:
    get:
      tags:
        - pipeline-secrets
      operationId: ListPipelineSecrets
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPipelineSecretsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    post:
      tags:
        - pipeline-secrets
      operationId: CreatePipelineSecret
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePipelineSecretRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePipelineSecretResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /pipeline-secrets/validate:
    get:
      tags:
        - pipeline-secrets
      operationId: ValidatePipelineSecretName
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /pipeline-secrets/{secretId}:
    get:
      tags:
        - pipeline-secrets
      operationId: DescribePipelineSecret
      parameters:
        - name: secretId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePipelineSecretResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    put:
      tags:
        - pipeline-secrets
      operationId: UpdatePipelineSecret
      parameters:
        - name: secretId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePipelineSecretRequest"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    delete:
      tags:
        - pipeline-secrets
      operationId: DeletePipelineSecret
      parameters:
        - name: secretId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /pipelines:
    get:
      tags:
        - pipelines
      operationId: ListPipelines
      parameters:
        - name: attributes
          in: query
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PipelineQueryAttribute"
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          schema:
            type: string
        - name: visibility
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPipelinesResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    post:
      tags:
        - pipelines
      operationId: CreatePipeline
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePipelineRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePipelineResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /pipelines/info:
    get:
      tags:
        - pipelines
      operationId: DescribePipelineRepository
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: revision
          in: query
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: mainScript
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePipelineInfoResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /pipelines/labels/add:
    post:
      tags:
        - labels
      operationId: AddLabelsToPipelines
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociatePipelineLabelsRequest"
        required: true
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /pipelines/labels/apply:
    post:
      tags:
        - labels
      operationId: ApplyLabelsToPipelines
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociatePipelineLabelsRequest"
        required: true
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /pipelines/labels/remove:
    post:
      tags:
        - labels
      operationId: RemoveLabelsFromPipelines
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociatePipelineLabelsRequest"
        required: true
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /pipelines/repositories:
    get:
      tags:
        - pipelines
      operationId: ListPipelineRepositories
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPipelineInfoResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /pipelines/validate:
    get:
      tags:
        - pipelines
      operationId: ValidatePipelineName
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: orgId
          in: query
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /pipelines/{pipelineId}:
    get:
      tags:
        - pipelines
      operationId: DescribePipeline
      parameters:
        - name: pipelineId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PipelineQueryAttribute"
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: sourceWorkspaceId
          in: query
          required: false
          schema:
            type: integer
            format: int64
            nullable: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePipelineResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    put:
      tags:
        - pipelines
      operationId: UpdatePipeline
      parameters:
        - name: pipelineId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePipelineRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePipelineResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    delete:
      tags:
        - pipelines
      operationId: DeletePipeline
      parameters:
        - name: pipelineId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /pipelines/{pipelineId}/launch:
    get:
      tags:
        - pipelines
      operationId: DescribePipelineLaunch
      parameters:
        - name: pipelineId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: sourceWorkspaceId
          in: query
          required: false
          schema:
            type: integer
            format: int64
            nullable: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLaunchResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /pipelines/{pipelineId}/schema:
    get:
      tags:
        - pipelines
      operationId: DescribePipelineSchema
      parameters:
        - name: pipelineId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: sourceWorkspaceId
          in: query
          required: false
          schema:
            type: integer
            format: int64
            nullable: true
        - name: attributes
          in: query
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PipelineSchemaAttributes"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PipelineSchemaResponse"
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /platforms:
    get:
      tags:
        - platforms
      operationId: ListPlatforms
      parameters:
        - name: orgId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPlatformsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /platforms/{platformId}:
    get:
      tags:
        - platforms
      operationId: DescribePlatform
      parameters:
        - name: platformId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: regionId
          in: query
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePlatformResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /platforms/{platformId}/regions:
    get:
      tags:
        - platforms
      operationId: ListPlatformRegions
      parameters:
        - name: platformId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRegionsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /service-info:
    get:
      tags:
        - service-info
      operationId: Info
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceInfoResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /studios:
    get:
      tags:
        - studios
      operationId: ListDataStudios
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: search
          in: query
          schema:
            type: string
        - name: max
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: attributes
          in: query
          schema:
            type: array
            items:
              $ref: "#/components/schemas/DataStudioQueryAttribute"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioListResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    post:
      tags:
        - studios
      operationId: CreateDataStudio
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: autoStart
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataStudioCreateRequest"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCreateResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "200":
          description: CreateDataStudio 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCreateResponse"
      security:
        - BearerAuth: []
  /studios/data-links:
    get:
      tags:
        - studios
      operationId: ListMountedDataLinkIds
      parameters:
        - name: orgId
          in: query
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          schema:
            type: string
        - name: exclude
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioMountedLinksResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /studios/templates:
    get:
      tags:
        - studios
      operationId: ListDataStudioTemplates
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioTemplatesListResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /studios/validate:
    get:
      tags:
        - studios
      operationId: ValidateDataStudioName
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /studios/{sessionId}:
    get:
      tags:
        - studios
      operationId: DescribeDataStudio
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioDto"
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    delete:
      tags:
        - studios
      operationId: DeleteDataStudio
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /studios/{sessionId}/checkpoints:
    get:
      tags:
        - studios
      operationId: ListDataStudioCheckpoints
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: search
          in: query
          schema:
            type: string
        - name: max
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioListCheckpointsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /studios/{sessionId}/checkpoints/{checkpointId}:
    get:
      tags:
        - studios
      operationId: GetDataStudioCheckpoint
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
        - name: checkpointId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCheckpointDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    put:
      tags:
        - studios
      operationId: UpdateDataStudioCheckpoint
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
        - name: checkpointId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataStudioCheckpointUpdateRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCheckpointDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /studios/{sessionId}/lifespan:
    post:
      tags:
        - studios
      operationId: ExtendDataStudioLifespan
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /studios/{sessionId}/start:
    put:
      tags:
        - studios
      operationId: StartDataStudio
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataStudioStartRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioStartResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /studios/{sessionId}/stop:
    put:
      tags:
        - studios
      operationId: StopDataStudio
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioStopResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /tokens:
    get:
      tags:
        - tokens
      operationId: TokenList
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAccessTokensResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    post:
      tags:
        - tokens
      operationId: CreateToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccessTokenRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccessTokenResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /tokens/delete-all:
    delete:
      tags:
        - tokens
      operationId: DeleteAllTokens
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /tokens/{tokenId}:
    delete:
      tags:
        - tokens
      operationId: DeleteToken
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /trace/create:
    post:
      tags:
        - trace
      operationId: CreateTrace
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceCreateRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceCreateResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /trace/{workflowId}/begin:
    put:
      tags:
        - trace
      operationId: UpdateTraceBegin
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceBeginRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceBeginResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /trace/{workflowId}/complete:
    put:
      tags:
        - trace
      operationId: UpdateTraceComplete
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceCompleteRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceCompleteResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /trace/{workflowId}/heartbeat:
    put:
      tags:
        - trace
      operationId: UpdateTraceHeartbeat
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceHeartbeatRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceHeartbeatResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /trace/{workflowId}/progress:
    put:
      tags:
        - trace
      operationId: UpdateTraceProgress
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceProgressRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceProgressResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /user-info:
    get:
      tags:
        - users
      operationId: UserInfo
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeUserResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /user/{userId}/workspaces:
    get:
      tags:
        - workspaces
      operationId: ListWorkspacesUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkspacesAndOrgResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /users/validate:
    get:
      tags:
        - users
      operationId: ValidateUserName
      parameters:
        - name: name
          in: query
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /users/{userId}:
    get:
      tags:
        - users
      operationId: DescribeUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeUserResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      deprecated: true
      security:
        - BearerAuth: []
    post:
      tags:
        - users
      operationId: UpdateUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDbDto"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    delete:
      tags:
        - users
      operationId: DeleteUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow:
    get:
      tags:
        - workflows
      operationId: ListWorkflows
      parameters:
        - name: attributes
          in: query
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/WorkflowQueryAttribute"
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkflowsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/delete:
    post:
      tags:
        - workflows
      operationId: DeleteWorkflowMany
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: force
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteWorkflowsRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteWorkflowsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/labels/add:
    post:
      tags:
        - labels
      operationId: AddLabelsToWorkflows
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateWorkflowLabelsRequest"
        required: true
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/labels/apply:
    post:
      tags:
        - labels
      operationId: ApplyLabelsToWorkflows
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateWorkflowLabelsRequest"
        required: true
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/labels/remove:
    post:
      tags:
        - labels
      operationId: RemoveLabelsFromWorkflows
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateWorkflowLabelsRequest"
        required: true
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/launch:
    post:
      tags:
        - workflows
      operationId: CreateWorkflowLaunch
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: sourceWorkspaceId
          in: query
          required: false
          schema:
            type: integer
            format: int64
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitWorkflowLaunchRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmitWorkflowLaunchResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/random-name:
    get:
      tags:
        - workflows
      operationId: GenerateRandomWorkflowName
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RandomWorkflowNameResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/validate:
    get:
      tags:
        - workflows
      operationId: ValidateWorkflowConstraints
      parameters:
        - name: runName
          in: query
          schema:
            type: string
        - name: sessionId
          in: query
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/{workflowId}:
    get:
      tags:
        - workflows
      operationId: DescribeWorkflow
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/WorkflowQueryAttribute"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkflowResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
    delete:
      tags:
        - workflows
      operationId: DeleteWorkflow
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: force
          in: query
          schema:
            type: boolean
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/{workflowId}/cancel:
    post:
      tags:
        - workflows
      operationId: CancelWorkflow
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/{workflowId}/download:
    get:
      tags:
        - workflows
      operationId: DownloadWorkflowLog
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: fileName
          in: query
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/{workflowId}/download/{taskId}:
    get:
      tags:
        - workflows
      operationId: DownloadWorkflowTaskLog
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fileName
          in: query
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/{workflowId}/launch:
    get:
      tags:
        - workflows
      operationId: DescribeWorkflowLaunch
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkflowLaunchResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /workflow/{workflowId}/log:
    get:
      tags:
        - workflows
      operationId: WorkflowLogs
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: next
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowLogResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/{workflowId}/log/{taskId}:
    get:
      tags:
        - workflows
      operationId: GetWorkflowTaskLog
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: next
          in: query
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowLogResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/{workflowId}/metrics:
    get:
      tags:
        - workflows
      operationId: DescribeWorkflowMetrics
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWorkflowMetricsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/{workflowId}/progress:
    get:
      tags:
        - workflows
      operationId: DescribeWorkflowProgress
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProgressResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/{workflowId}/star:
    get:
      tags:
        - workflows
      operationId: DescribeWorkflowStar
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkflowStarResponse"
        "403":
          description: Forbidden
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - workflows
      operationId: CreateWorkflowStar
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkflowStarResponse"
        "403":
          description: Forbidden
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - workflows
      operationId: DeleteWorkflowStar
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkflowStarResponse"
        "403":
          description: Forbidden
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /workflow/{workflowId}/task/{taskId}:
    get:
      tags:
        - workflows
      operationId: DescribeWorkflowTask
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTaskResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workflow/{workflowId}/tasks:
    get:
      tags:
        - workflows
      operationId: ListWorkflowTasks
      parameters:
        - name: workflowId
          in: path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          schema:
            type: string
        - name: sortDir
          in: query
          schema:
            type: string
        - name: search
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTasksResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets:
    get:
      tags:
        - datasets
      operationId: ListDatasets
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      deprecated: true
      security:
        - BearerAuth: []
    post:
      tags:
        - datasets
      operationId: CreateDataset
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasetRequest"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDatasetResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/versions:
    get:
      tags:
        - datasets
      operationId: ListWorkspaceDatasetVersions
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: mimeType
          in: query
          schema:
            type: string
            nullable: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}:
    put:
      tags:
        - datasets
      operationId: UpdateDataset
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDatasetRequest"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      deprecated: true
      security:
        - BearerAuth: []
    delete:
      tags:
        - datasets
      operationId: DeleteDataset
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/metadata:
    get:
      tags:
        - datasets
      operationId: DescribeDataset
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDatasetResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/upload:
    post:
      tags:
        - datasets
      operationId: UploadDataset
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          required: true
          schema:
            type: string
        - name: header
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MultiRequestFileSchema"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadDatasetVersionResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/v/{version}/n/{fileName}:
    get:
      tags:
        - datasets
      operationId: DownloadDataset
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
        - name: fileName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/versions:
    get:
      tags:
        - datasets
      operationId: ListDatasetVersions
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          required: true
          schema:
            type: string
        - name: mimeType
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
      deprecated: true
      security:
        - BearerAuth: []
components:
  schemas:
    AbstractGridConfig:
      type: object
      properties:
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        nextflowConfig:
          type: string
        launchDir:
          type: string
        userName:
          type: string
        hostName:
          type: string
        port:
          type: integer
          format: int32
        headQueue:
          type: string
        computeQueue:
          type: string
        maxQueueSize:
          type: integer
          format: int32
        headJobOptions:
          type: string
        propagateHeadJobOptions:
          type: boolean
    AccessToken:
      required:
        - name
      type: object
      properties:
        basicAuth:
          type: string
          deprecated: true
        id:
          type: integer
          format: int64
          nullable: true
        name:
          maxLength: 50
          minLength: 1
          type: string
        lastUsed:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
      description: |
        Represents an API access token for authentication.
        Contains token metadata, permissions, and expiration information
        for secure API access to platform resources.
    Action.ConfigType:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
      discriminator:
        propertyName: discriminator
        mapping:
          github: "#/components/schemas/GithubActionConfig"
          tower: "#/components/schemas/Action.TowerActionConfig"
      oneOf:
        - $ref: "#/components/schemas/Action.TowerActionConfig"
        - $ref: "#/components/schemas/GithubActionConfig"
    Action.EventType:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
      discriminator:
        propertyName: discriminator
        mapping:
          github: "#/components/schemas/GithubActionEvent"
          tower: "#/components/schemas/Action.TowerActionEvent"
      oneOf:
        - $ref: "#/components/schemas/GithubActionEvent"
        - $ref: "#/components/schemas/Action.TowerActionEvent"
    Action.Source:
      type: string
      enum:
        - github
        - tower
    Action.Status:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - ERROR
        - PAUSED
    Action.TowerActionConfig:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
    Action.TowerActionEvent:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
        workflowId:
          type: string
    ActionQueryAttribute:
      type: string
      enum:
        - labels
    ActionResponseDto:
      type: object
      properties:
        id:
          type: string
        launch:
          $ref: "#/components/schemas/Launch"
        name:
          type: string
        hookId:
          type: string
        hookUrl:
          type: string
        message:
          type: string
        source:
          $ref: "#/components/schemas/Action.Source"
        status:
          $ref: "#/components/schemas/Action.Status"
        config:
          $ref: "#/components/schemas/Action.ConfigType"
        event:
          $ref: "#/components/schemas/Action.EventType"
        lastSeen:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
      description: |
        Represents a pipeline action in the Seqera Platform.
        Contains action configuration, triggers, and execution settings
        for automated pipeline workflows.
    ActiveConnection:
      type: object
      allOf:
        - $ref: "#/components/schemas/StudioUser"
        - required:
            - lastActive
          properties:
            lastActive:
              type: string
              format: date-time
    AddMemberRequest:
      type: object
      properties:
        user:
          type: string
    AddMemberResponse:
      type: object
      properties:
        member:
          $ref: "#/components/schemas/MemberDbDto"
    AddParticipantRequest:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        teamId:
          type: integer
          format: int64
        userNameOrEmail:
          type: string
    AddParticipantResponse:
      type: object
      properties:
        participant:
          $ref: "#/components/schemas/ParticipantDbDto"
    AddTeamMemberResponse:
      type: object
      properties:
        member:
          $ref: "#/components/schemas/MemberDbDto"
    AgentSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        connectionId:
          type: string
        workDir:
          type: string
        shared:
          type: boolean
    AllowedDynamicLabelsResponse:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
    AltairPbsComputeConfig:
      title: Altair PBS configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              readOnly: true
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
      required:
        - workDir
    Analytics:
      type: object
      properties:
        hubspotId:
          type: string
        posthogApiKey:
          type: string
        posthogApiHost:
          type: string
    AssociateActionLabelsRequest:
      type: object
      properties:
        actionIds:
          type: array
          items:
            type: string
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    AssociatePipelineLabelsRequest:
      type: object
      properties:
        pipelineIds:
          type: array
          items:
            type: integer
            format: int64
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    AssociateWorkflowLabelsRequest:
      type: object
      properties:
        workflowIds:
          type: array
          items:
            type: string
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    Avatar:
      type: object
      properties:
        id:
          maxLength: 22
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    AwsBatchConfig:
      title: AWS Batch configuration
      type: object
      properties:
        storageType:
          type: string
          deprecated: true
        lustreId:
          type: string
          deprecated: true
        volumes:
          type: array
          items:
            type: string
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        region:
          type: string
        computeQueue:
          type: string
        dragenQueue:
          type: string
        dragenInstanceType:
          type: string
        computeJobRole:
          type: string
        executionRole:
          type: string
        headQueue:
          type: string
        headJobRole:
          type: string
        cliPath:
          type: string
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
        fusion2Enabled:
          type: boolean
        nvnmeStorageEnabled:
          type: boolean
        logGroup:
          type: string
        nextflowConfig:
          type: string
        fusionSnapshots:
          type: boolean
        forge:
          $ref: "#/components/schemas/ForgeConfig"
        forgedResources:
          type: array
          items:
            type: object
            additionalProperties: true
      required:
        - region
        - forge
    AwsBatchPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        jobQueues:
          type: array
          items:
            $ref: "#/components/schemas/JobQueue"
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/Bucket"
        fileSystems:
          type: array
          items:
            $ref: "#/components/schemas/FsxFileSystem"
        efsFileSystems:
          type: array
          items:
            $ref: "#/components/schemas/EfsFileSystem"
        keyPairs:
          type: array
          items:
            type: string
        vpcs:
          type: array
          items:
            $ref: "#/components/schemas/Vpc"
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
        securityGroups:
          type: array
          items:
            $ref: "#/components/schemas/SecurityGroup"
        subnets:
          type: array
          items:
            $ref: "#/components/schemas/Subnet"
        instanceFamilies:
          type: array
          items:
            type: string
        allocStrategy:
          type: array
          items:
            type: string
    AwsCloudConfig:
      title: AWS Cloud configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        allowBuckets:
          type: array
          items:
            type: string
        region:
          type: string
        instanceType:
          type: string
        imageId:
          type: string
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        nextflowConfig:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
        fusion2Enabled:
          type: boolean
        logGroup:
          type: string
        arm64Enabled:
          type: boolean
        gpuEnabled:
          type: boolean
        ec2KeyPair:
          type: string
        ebsBootSize:
          type: integer
          format: int32
        instanceProfileArn:
          type: string
        subnetId:
          type: string
        securityGroups:
          type: array
          items:
            type: string
        forgedResources:
          type: array
          items:
            type: object
            additionalProperties: true
      required:
        - region
    AwsCloudPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/Bucket"
        keyPairs:
          type: array
          items:
            type: string
        vpcs:
          type: array
          items:
            $ref: "#/components/schemas/Vpc"
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
        securityGroups:
          type: array
          items:
            $ref: "#/components/schemas/SecurityGroup"
        subnets:
          type: array
          items:
            $ref: "#/components/schemas/Subnet"
        instanceTypes:
          type: array
          items:
            $ref: "#/components/schemas/InstanceType"
    AwsSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        accessKey:
          type: string
        secretKey:
          type: string
          writeOnly: true
        assumeRoleArn:
          type: string
    AzBatchConfig:
      title: Azure batch configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        region:
          type: string
        headPool:
          type: string
        autoPoolMode:
          type: boolean
          deprecated: true
        forge:
          $ref: "#/components/schemas/AzBatchForgeConfig"
        tokenDuration:
          type: string
        deleteJobsOnCompletion:
          $ref: "#/components/schemas/JobCleanupPolicy"
        deletePoolsOnCompletion:
          type: boolean
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
        fusion2Enabled:
          type: boolean
        nextflowConfig:
          type: string
        managedIdentityClientId:
          type: string
          nullable: true
      required:
        - region
        - forge
    AzBatchForgeConfig:
      type: object
      properties:
        vmType:
          type: string
        vmCount:
          type: integer
          format: int32
        autoScale:
          type: boolean
        disposeOnDeletion:
          type: boolean
        containerRegIds:
          type: array
          items:
            type: string
      required:
        - vmCount
    AzBatchPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        pools:
          type: array
          items:
            type: string
        containers:
          type: array
          items:
            type: string
        vmTypes:
          type: array
          items:
            type: string
    AzCloudConfig:
      title: Azure Cloud configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
        fusion2Enabled:
          type: boolean
        nextflowConfig:
          type: string
        instanceType:
          type: string
        region:
          type: string
        resourceGroup:
          type: string
        networkId:
          type: string
        subscriptionId:
          type: string
        managedIdentityId:
          type: string
        managedIdentityClientId:
          type: string
        logWorkspaceId:
          type: string
        logTableName:
          type: string
        dataCollectionEndpoint:
          type: string
        dataCollectionRuleId:
          type: string
        forgedResources:
          type: array
          items:
            $ref: "#/components/schemas/Map.Entry_String.String_"
    AzureEntraKeys:
      type: object
      allOf:
        - $ref: "#/components/schemas/AzureSecurityKeys"
        - properties:
            discriminator:
              type: string
              readOnly: true
            tenantId:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
              writeOnly: true
    AzureReposSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
    AzureSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        batchName:
          type: string
        storageName:
          type: string
        batchKey:
          type: string
          writeOnly: true
        storageKey:
          type: string
          writeOnly: true
    BitBucketSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
    Bucket:
      type: object
      properties:
        path:
          type: string
    CloudPriceModel:
      type: string
      enum:
        - standard
        - spot
    CodeCommitSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
    ComputeConfig:
      type: object
      properties:
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        nextflowConfig:
          type: string
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
      discriminator:
        propertyName: discriminator
        mapping:
          moab-platform: "#/components/schemas/MoabComputeConfig"
          aws-batch: "#/components/schemas/AwsBatchConfig"
          google-cloud: "#/components/schemas/GoogleCloudConfig"
          azure-cloud: "#/components/schemas/AzCloudConfig"
          gke-platform: "#/components/schemas/GkeComputeConfig"
          google-batch: "#/components/schemas/GoogleBatchConfig"
          aws-cloud: "#/components/schemas/AwsCloudConfig"
          slurm-platform: "#/components/schemas/SlurmComputeConfig"
          k8s-platform: "#/components/schemas/K8sComputeConfig"
          altair-platform: "#/components/schemas/AltairPbsComputeConfig"
          lsf-platform: "#/components/schemas/LsfComputeConfig"
          azure-batch: "#/components/schemas/AzBatchConfig"
          seqeracompute-platform: "#/components/schemas/SeqeraComputeConfig"
          eks-platform: "#/components/schemas/EksComputeConfig"
          google-lifesciences: "#/components/schemas/GoogleLifeSciencesConfig"
          uge-platform: "#/components/schemas/UnivaComputeConfig"
      oneOf:
        - $ref: "#/components/schemas/AwsBatchConfig"
        - $ref: "#/components/schemas/AwsCloudConfig"
        - $ref: "#/components/schemas/SeqeraComputeConfig"
        - $ref: "#/components/schemas/GoogleLifeSciencesConfig"
        - $ref: "#/components/schemas/GoogleBatchConfig"
        - $ref: "#/components/schemas/AzBatchConfig"
        - $ref: "#/components/schemas/LsfComputeConfig"
        - $ref: "#/components/schemas/SlurmComputeConfig"
        - $ref: "#/components/schemas/K8sComputeConfig"
        - $ref: "#/components/schemas/EksComputeConfig"
        - $ref: "#/components/schemas/GkeComputeConfig"
        - $ref: "#/components/schemas/UnivaComputeConfig"
        - $ref: "#/components/schemas/AltairPbsComputeConfig"
        - $ref: "#/components/schemas/MoabComputeConfig"
      description: |
        Configuration settings for compute environments including work directories,
        pre/post run scripts, and environment-specific parameters.
    ComputeEnv.Status:
      type: string
      readOnly: true
      enum:
        - CREATING
        - AVAILABLE
        - ERRORED
        - INVALID
    ComputeEnvDbDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        platform:
          type: string
        region:
          type: string
    ComputeEnvQueryAttribute:
      type: string
      enum:
        - labels
    ComputeEnvResponseDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        platform:
          type: string
          enum:
            - aws-batch
            - aws-cloud
            - seqeracompute-platform
            - google-lifesciences
            - google-batch
            - azure-batch
            - k8s-platform
            - eks-platform
            - gke-platform
            - uge-platform
            - slurm-platform
            - lsf-platform
            - altair-platform
        config:
          $ref: "#/components/schemas/ComputeConfig"
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        lastUsed:
          type: string
          format: date-time
        deleted:
          type: boolean
        status:
          $ref: "#/components/schemas/ComputeEnv.Status"
        message:
          type: string
        primary:
          type: boolean
        credentialsId:
          type: string
        managedIdentityId:
          type: string
        orgId:
          type: integer
          format: int64
        workspaceId:
          type: integer
          format: int64
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
    ComputeEnv_ComputeConfig_:
      required:
        - config
        - name
        - platform
      type: object
      properties:
        credentialsId:
          type: string
        orgId:
          type: integer
          format: int64
          readOnly: true
        workspaceId:
          type: integer
          format: int64
          readOnly: true
        id:
          maxLength: 22
          type: string
          readOnly: true
        name:
          maxLength: 100
          type: string
        description:
          maxLength: 2000
          type: string
        platform:
          maxLength: 25
          type: string
          enum:
            - aws-batch
            - aws-cloud
            - google-lifesciences
            - google-batch
            - google-cloud
            - azure-batch
            - azure-cloud
            - k8s-platform
            - eks-platform
            - gke-platform
            - uge-platform
            - slurm-platform
            - lsf-platform
            - altair-platform
            - moab-platform
            - local-platform
            - seqeracompute-platform
        config:
          $ref: "#/components/schemas/ComputeConfig"
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        lastUsed:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
          readOnly: true
        status:
          allOf:
            - $ref: "#/components/schemas/ComputeEnv.Status"
            - type: string
              readOnly: true
        message:
          maxLength: 4096
          type: string
        primary:
          type: boolean
          readOnly: true
    ComputePlatform:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        credentialsProviders:
          type: array
          items:
            type: string
    ComputePlatformDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ComputeRegion:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ConfigEnvVariable:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        head:
          type: boolean
        compute:
          type: boolean
    ContainerData:
      required:
        - targetImage
      type: object
      properties:
        requestId:
          type: string
        sourceImage:
          type: string
        targetImage:
          type: string
        buildId:
          type: string
        scanId:
          type: string
        mirrorId:
          type: string
        cached:
          type: boolean
        freeze:
          type: boolean
        requestTime:
          type: string
          format: date-time
    ContainerRegistryKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        userName:
          type: string
        password:
          type: string
          writeOnly: true
        registry:
          type: string
    CreateAccessTokenRequest:
      type: object
      properties:
        name:
          type: string
    CreateAccessTokenResponse:
      type: object
      properties:
        accessKey:
          type: string
        token:
          $ref: "#/components/schemas/AccessToken"
    CreateActionRequest:
      type: object
      properties:
        name:
          type: string
        source:
          $ref: "#/components/schemas/Action.Source"
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
    CreateActionResponse:
      type: object
      properties:
        actionId:
          type: string
    CreateAvatarResponse:
      type: object
      properties:
        avatar:
          $ref: "#/components/schemas/Avatar"
        url:
          type: string
    CreateComputeEnvRequest:
      type: object
      properties:
        computeEnv:
          $ref: "#/components/schemas/ComputeEnv_ComputeConfig_"
        labelIds:
          type: array
          items:
            type: integer
            format: int64
      required:
        - name
        - credentialsId
        - platform
        - config
    CreateComputeEnvResponse:
      type: object
      properties:
        computeEnvId:
          type: string
    CreateCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: "#/components/schemas/Credentials"
    CreateCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    CreateDatasetRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    CreateDatasetResponse:
      type: object
      properties:
        dataset:
          $ref: "#/components/schemas/Dataset"
    CreateLabelRequest:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
        isDefault:
          type: boolean
    CreateLabelResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
        isDefault:
          type: boolean
    CreateOrganizationRequest:
      type: object
      properties:
        organization:
          $ref: "#/components/schemas/Organization"
        logoId:
          type: string
    CreateOrganizationResponse:
      type: object
      properties:
        organization:
          $ref: "#/components/schemas/OrganizationDbDto"
    CreatePipelineRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
        labelIds:
          type: array
          items:
            type: integer
            format: int64
      required:
        - name
        - launch
    CreatePipelineResponse:
      type: object
      properties:
        pipeline:
          $ref: "#/components/schemas/PipelineDbDto"
    CreatePipelineSecretRequest:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    CreatePipelineSecretResponse:
      type: object
      properties:
        secretId:
          type: integer
          format: int64
    CreateTeamMemberRequest:
      type: object
      properties:
        userNameOrEmail:
          type: string
    CreateTeamRequest:
      type: object
      properties:
        team:
          $ref: "#/components/schemas/Team"
        avatarId:
          type: string
    CreateTeamResponse:
      type: object
      properties:
        team:
          $ref: "#/components/schemas/TeamDbDto"
    CreateWorkflowStarResponse:
      type: object
      properties:
        workflowId:
          type: string
    CreateWorkspaceRequest:
      type: object
      properties:
        workspace:
          $ref: "#/components/schemas/Workspace"
    CreateWorkspaceResponse:
      type: object
      properties:
        workspace:
          $ref: "#/components/schemas/Workspace"
    Credentials:
      required:
        - name
        - provider
      type: object
      properties:
        id:
          maxLength: 22
          type: string
        name:
          maxLength: 100
          type: string
        description:
          type: string
        provider:
          maxLength: 16
          type: string
          enum:
            - aws
            - azure
            - azure_entra
            - google
            - github
            - gitlab
            - bitbucket
            - ssh
            - k8s
            - container-reg
            - tw-agent
            - codecommit
            - gitea
            - azurerepos
            - seqeracompute
        baseUrl:
          maxLength: 200
          pattern: ""
          type: string
        category:
          maxLength: 20
          type: string
        deleted:
          type: boolean
          readOnly: true
        lastUsed:
          type: string
          format: date-time
          readOnly: true
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        keys:
          $ref: "#/components/schemas/SecurityKeys"
      description: |
        Represents credentials used for authentication with various platforms and services.
        Contains authentication information for accessing cloud providers, Git repositories,
        and other external services within the Seqera Platform.
    DataLink.Status:
      type: string
      readOnly: true
      enum:
        - VALID
        - INVALID
    DataLinkContentResponse:
      type: object
      properties:
        originalPath:
          type: string
        objects:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkItem"
        nextPageToken:
          type: string
    DataLinkContentTreeListResponse:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkSimpleItem"
    DataLinkCreateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          $ref: "#/components/schemas/DataLinkType"
        provider:
          $ref: "#/components/schemas/DataLinkProvider"
        resourceRef:
          type: string
        publicAccessible:
          type: boolean
        credentialsId:
          type: string
    DataLinkCredentials:
      required:
        - id
        - name
        - provider
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        provider:
          $ref: "#/components/schemas/DataLinkProvider"
    DataLinkDeleteItemRequest:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
        dirs:
          type: array
          items:
            type: string
    DataLinkDeleteItemResponse:
      type: object
      properties:
        deletionFailures:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkItemDeletionFailure"
    DataLinkDownloadScriptResponse:
      type: object
      properties:
        script:
          type: string
    DataLinkDownloadUrlResponse:
      type: object
      properties:
        url:
          type: string
    DataLinkDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        resourceRef:
          type: string
        type:
          $ref: "#/components/schemas/DataLinkType"
        provider:
          $ref: "#/components/schemas/DataLinkProvider"
        region:
          type: string
        credentials:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkCredentials"
        publicAccessible:
          type: boolean
        hidden:
          type: boolean
        status:
          allOf:
            - $ref: "#/components/schemas/DataLink.Status"
            - type: string
              readOnly: true
        message:
          type: string
      description: |
        Represents a data link connection to external storage systems.
        Provides access to cloud storage, file systems, and data repositories
        for pipeline input/output operations.
    DataLinkFinishMultiPartUploadRequest:
      type: object
      properties:
        uploadId:
          type: string
        fileName:
          type: string
        tags:
          type: array
          items:
            $ref: "#/components/schemas/UploadEtag"
        withError:
          type: boolean
    DataLinkItem:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/DataLinkItemType"
        name:
          type: string
        size:
          type: integer
          format: int64
        mimeType:
          type: string
    DataLinkItemDeletionFailure:
      required:
        - dataLinkItem
        - errorMessage
      type: object
      properties:
        dataLinkItem:
          $ref: "#/components/schemas/DataLinkItem"
        errorMessage:
          type: string
    DataLinkItemType:
      type: string
      enum:
        - FOLDER
        - FILE
    DataLinkMultiPartUploadRequest:
      type: object
      properties:
        fileName:
          type: string
        contentLength:
          type: integer
          format: int64
        contentType:
          type: string
    DataLinkMultiPartUploadResponse:
      type: object
      properties:
        uploadId:
          type: string
        uploadUrls:
          type: array
          items:
            type: string
    DataLinkProvider:
      type: string
      enum:
        - aws
        - google
        - azure
        - azure_entra
        - seqeracompute
    DataLinkResponse:
      type: object
      properties:
        dataLink:
          $ref: "#/components/schemas/DataLinkDto"
    DataLinkSimpleItem:
      required:
        - path
        - size
      type: object
      properties:
        path:
          type: string
        size:
          type: integer
          format: int64
    DataLinkType:
      type: string
      enum:
        - bucket
    DataLinkUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        credentialsId:
          type: string
    DataLinksListResponse:
      type: object
      properties:
        dataLinks:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkDto"
        totalSize:
          type: integer
          format: int64
    DataStudioCheckpointDto:
      required:
        - author
        - dateCreated
        - dateSaved
        - id
        - name
        - path
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateSaved:
          type: string
          format: date-time
        author:
          $ref: "#/components/schemas/StudioUser"
        path:
          type: string
    DataStudioCheckpointUpdateRequest:
      type: object
      properties:
        name:
          type: string
    DataStudioComputeEnvDto:
      type: object
      allOf:
        - $ref: "#/components/schemas/ComputeEnvDbDto"
        - properties:
            credentialsId:
              type: string
            workDir:
              type: string
    DataStudioConfiguration:
      type: object
      properties:
        gpu:
          minimum: 0
          type: integer
          format: int32
        cpu:
          minimum: 0
          type: integer
          format: int32
        memory:
          minimum: 0
          type: integer
          format: int32
        mountData:
          type: array
          items:
            type: string
        environment:
          type: object
          additionalProperties:
            type: string
          nullable: true
        condaEnvironment:
          maxLength: 2048
          type: string
        lifespanHours:
          minimum: 0
          type: integer
          format: int32
    DataStudioCreateRequest:
      required:
        - computeEnvId
        - dataStudioToolUrl
        - name
      type: object
      properties:
        name:
          maxLength: 80
          minLength: 1
          type: string
        description:
          maxLength: 2048
          type: string
        dataStudioToolUrl:
          minLength: 1
          type: string
        computeEnvId:
          minLength: 1
          type: string
        initialCheckpointId:
          type: integer
          format: int64
        configuration:
          $ref: "#/components/schemas/DataStudioConfiguration"
        isPrivate:
          type: boolean
        labelIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
        spot:
          type: boolean
          nullable: true
    DataStudioCreateResponse:
      type: object
      properties:
        studio:
          $ref: "#/components/schemas/DataStudioDto"
    DataStudioDto:
      type: object
      properties:
        sessionId:
          type: string
        workspaceId:
          type: integer
          format: int64
        parentCheckpoint:
          $ref: "#/components/schemas/DataStudioDto.ParentCheckpoint"
        user:
          $ref: "#/components/schemas/StudioUser"
        name:
          type: string
        description:
          type: string
        studioUrl:
          type: string
        computeEnv:
          $ref: "#/components/schemas/DataStudioComputeEnvDto"
        template:
          $ref: "#/components/schemas/DataStudioTemplate"
        configuration:
          $ref: "#/components/schemas/DataStudioConfiguration"
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        lastStarted:
          type: string
          format: date-time
        effectiveLifespanHours:
          type: integer
          format: int32
        activeConnections:
          type: array
          items:
            $ref: "#/components/schemas/ActiveConnection"
        statusInfo:
          $ref: "#/components/schemas/DataStudioStatusInfo"
        waveBuildUrl:
          type: string
        baseImage:
          type: string
        customImage:
          type: boolean
        isPrivate:
          type: boolean
        mountedDataLinks:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkDto"
        progress:
          type: array
          items:
            $ref: "#/components/schemas/DataStudioProgressStep"
        labels:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/LabelDbDto"
      description: |
        Represents a Studio session for interactive data analysis.
        Contains configuration and runtime information for Jupyter-based
        computational environments.
    DataStudioDto.ParentCheckpoint:
      type: object
      properties:
        checkpointId:
          type: integer
          format: int64
        checkpointName:
          type: string
        sessionId:
          type: string
        studioName:
          type: string
    DataStudioListCheckpointsResponse:
      required:
        - checkpoints
        - totalSize
      type: object
      properties:
        checkpoints:
          type: array
          items:
            $ref: "#/components/schemas/DataStudioCheckpointDto"
        totalSize:
          type: integer
          format: int64
    DataStudioListResponse:
      required:
        - studios
        - totalSize
      type: object
      properties:
        studios:
          type: array
          items:
            $ref: "#/components/schemas/DataStudioDto"
        totalSize:
          type: integer
          format: int64
    DataStudioMountedLinksResponse:
      type: object
      properties:
        dataLinkIds:
          type: array
          items:
            type: string
    DataStudioProgressStep:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/DataStudioProgressStep.Status"
        message:
          type: string
        warnings:
          type: array
          items:
            type: string
    DataStudioProgressStep.Status:
      type: string
      enum:
        - pending
        - in-progress
        - succeeded
        - errored
    DataStudioQueryAttribute:
      type: string
      enum:
        - labels
    DataStudioStartRequest:
      type: object
      properties:
        configuration:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/DataStudioConfiguration"
        description:
          type: string
          nullable: true
        labelIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
        spot:
          type: boolean
          nullable: true
    DataStudioStartResponse:
      required:
        - jobSubmitted
        - sessionId
        - statusInfo
      type: object
      properties:
        jobSubmitted:
          type: boolean
        sessionId:
          type: string
        statusInfo:
          $ref: "#/components/schemas/DataStudioStatusInfo"
    DataStudioStatus:
      type: string
      enum:
        - starting
        - running
        - stopping
        - stopped
        - errored
        - building
        - buildFailed
    DataStudioStatusInfo:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/DataStudioStatus"
        message:
          type: string
        lastUpdate:
          type: string
          format: date-time
    DataStudioStopResponse:
      required:
        - jobSubmitted
        - sessionId
        - statusInfo
      type: object
      properties:
        jobSubmitted:
          type: boolean
        sessionId:
          type: string
        statusInfo:
          $ref: "#/components/schemas/DataStudioStatusInfo"
    DataStudioTemplate:
      type: object
      properties:
        repository:
          type: string
        icon:
          type: string
        status:
          $ref: "#/components/schemas/DataStudioVersionStatus"
        tool:
          type: string
    DataStudioTemplatesListResponse:
      required:
        - templates
        - totalSize
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: "#/components/schemas/DataStudioTemplate"
        totalSize:
          type: integer
          format: int64
    DataStudioVersionStatus:
      type: string
      enum:
        - recommended
        - deprecated
        - experimental
        - unsupported
    DataStudioWorkspaceSettingsResponse:
      required:
        - lifespanHours
        - orgId
        - wspId
      type: object
      properties:
        orgId:
          type: integer
          format: int64
        wspId:
          type: integer
          format: int64
        lifespanHours:
          type: integer
          format: int32
    Dataset:
      required:
        - name
      type: object
      properties:
        id:
          maxLength: 22
          type: string
        name:
          maxLength: 100
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,98}$"
          type: string
        description:
          maxLength: 1000
          type: string
        mediaType:
          maxLength: 80
          type: string
        deleted:
          type: boolean
          readOnly: true
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
      description: |
        Represents a dataset in the Seqera Platform.
        Contains dataset metadata, versioning information, and access
        controls for data management and sharing.
    DatasetVersionDbDto:
      type: object
      properties:
        datasetId:
          type: string
        datasetName:
          type: string
        datasetDescription:
          type: string
        hasHeader:
          type: boolean
        version:
          type: integer
          format: int64
        lastUpdated:
          type: string
          format: date-time
        fileName:
          type: string
        mediaType:
          type: string
        url:
          type: string
    DeleteCredentialsConflictResponse:
      type: object
      properties:
        credentialsId:
          type: string
        conflicts:
          type: array
          items:
            $ref: "#/components/schemas/DeleteCredentialsConflictResponse.Conflict"
    DeleteCredentialsConflictResponse.Conflict:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
        name:
          type: string
        url:
          type: string
    DeleteWorkflowsRequest:
      type: object
      properties:
        workflowIds:
          type: array
          items:
            type: string
    DeleteWorkflowsResponse:
      type: object
      properties:
        failedWorkflowIds:
          type: array
          items:
            type: string
    DescribeActionResponse:
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ActionResponseDto"
    DescribeComputeEnvResponse:
      type: object
      properties:
        computeEnv:
          $ref: "#/components/schemas/ComputeEnvResponseDto"
    DescribeCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: "#/components/schemas/Credentials"
    DescribeDatasetResponse:
      type: object
      properties:
        dataset:
          $ref: "#/components/schemas/Dataset"
    DescribeLaunchResponse:
      type: object
      properties:
        launch:
          $ref: "#/components/schemas/Launch"
    DescribeOrganizationQuotasResponse:
      type: object
      properties:
        quotas:
          $ref: "#/components/schemas/OrganizationQuotas"
    DescribeOrganizationResponse:
      type: object
      properties:
        organization:
          $ref: "#/components/schemas/OrganizationDbDto"
    DescribePipelineInfoResponse:
      type: object
      properties:
        pipelineInfo:
          $ref: "#/components/schemas/PipelineInfo"
    DescribePipelineResponse:
      type: object
      properties:
        pipeline:
          $ref: "#/components/schemas/PipelineDbDto"
    DescribePipelineSecretResponse:
      type: object
      properties:
        pipelineSecret:
          $ref: "#/components/schemas/PipelineSecret"
    DescribePlatformResponse:
      type: object
      properties:
        metainfo:
          $ref: "#/components/schemas/PlatformMetainfo"
    DescribeTaskResponse:
      type: object
      properties:
        task:
          $ref: "#/components/schemas/Task"
    DescribeTeamResponse:
      type: object
      properties:
        team:
          $ref: "#/components/schemas/TeamDbDto"
    DescribeUserResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserDbDto"
        needConsent:
          type: boolean
        defaultWorkspaceId:
          type: integer
          format: int64
    DescribeWorkflowLaunchResponse:
      type: object
      properties:
        launch:
          $ref: "#/components/schemas/WorkflowLaunchResponse"
    DescribeWorkflowResponse:
      type: object
      properties:
        workflow:
          $ref: "#/components/schemas/Workflow"
        progress:
          $ref: "#/components/schemas/ProgressData"
        platform:
          $ref: "#/components/schemas/ComputePlatformDto"
        jobInfo:
          $ref: "#/components/schemas/JobInfoDto"
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        optimized:
          type: boolean
        messages:
          type: array
          items:
            type: string
    DescribeWorkspaceResponse:
      type: object
      properties:
        workspace:
          $ref: "#/components/schemas/Workspace"
    EfsFileSystem:
      type: object
      properties:
        id:
          type: string
    EksComputeConfig:
      title: Amazon EKS cluster configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/K8sComputeConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              readOnly: true
            workDir:
              type: string
            preRunScript:
              type: string
            postRunScript:
              type: string
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
            nextflowConfig:
              type: string
            region:
              type: string
            clusterName:
              type: string
            waveEnabled:
              type: boolean
            fusion2Enabled:
              type: boolean
      required:
        - region
        - clusterName
    EksPlatformMetaInfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        clusters:
          type: array
          items:
            type: string
    EmptyBodyRequest:
      type: object
    ErrorResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
    EventType:
      type: object
      properties:
        source:
          type: string
        display:
          type: string
        description:
          type: string
        enabled:
          type: boolean
    ForgeConfig:
      type: object
      properties:
        type:
          type: string
          enum:
            - SPOT
            - EC2
        minCpus:
          type: integer
          format: int32
        maxCpus:
          type: integer
          format: int32
        gpuEnabled:
          type: boolean
        ebsAutoScale:
          type: boolean
        instanceTypes:
          type: array
          items:
            type: string
        allocStrategy:
          type: string
          enum:
            - BEST_FIT
            - BEST_FIT_PROGRESSIVE
            - SPOT_CAPACITY_OPTIMIZED
            - SPOT_PRICE_CAPACITY_OPTIMIZED
        imageId:
          type: string
        vpcId:
          type: string
        subnets:
          type: array
          items:
            type: string
        securityGroups:
          type: array
          items:
            type: string
        fsxMount:
          type: string
        fsxName:
          type: string
        fsxSize:
          type: integer
          format: int32
        disposeOnDeletion:
          type: boolean
        ec2KeyPair:
          type: string
        allowBuckets:
          type: array
          items:
            type: string
        ebsBlockSize:
          type: integer
          format: int32
        fusionEnabled:
          type: boolean
        bidPercentage:
          type: integer
          format: int32
        efsCreate:
          type: boolean
        efsId:
          type: string
        efsMount:
          type: string
        dragenEnabled:
          type: boolean
        dragenAmiId:
          type: string
        ebsBootSize:
          type: integer
          format: int32
        ecsConfig:
          type: string
        fargateHeadEnabled:
          type: boolean
        arm64Enabled:
          type: boolean
        dragenInstanceType:
          type: string
      required:
        - type
        - minCpus
        - MaxCpus
    FsxFileSystem:
      type: object
      properties:
        id:
          type: string
        dns:
          type: string
        mount:
          type: string
    GetProgressResponse:
      type: object
      properties:
        progress:
          $ref: "#/components/schemas/ProgressData"
    GetWorkflowMetricsResponse:
      type: object
      properties:
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/WorkflowMetrics"
    GitHubSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
    GitLabSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
    GiteaSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
    GithubActionConfig:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        events:
          type: array
          items:
            type: string
    GithubActionEvent:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        ref:
          type: string
        commitId:
          type: string
        commitMessage:
          type: string
        pusherName:
          type: string
        pusherEmail:
          type: string
        timestamp:
          type: string
          format: date-time
    GkeComputeConfig:
      title: Google GKE cluster configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/K8sComputeConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              readOnly: true
            workDir:
              type: string
            preRunScript:
              type: string
            postRunScript:
              type: string
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
            nextflowConfig:
              type: string
            region:
              type: string
            clusterName:
              type: string
            fusion2Enabled:
              type: boolean
            waveEnabled:
              type: boolean
      required:
        - region
        - clusterName
    GkePlatformMetaInfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        clusters:
          type: array
          items:
            type: string
    GoogleBatchConfig:
      title: Google Batch service configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        location:
          type: string
        workDir:
          type: string
        spot:
          type: boolean
        bootDiskSizeGb:
          type: integer
          format: int32
        cpuPlatform:
          type: string
        machineType:
          type: string
        projectId:
          type: string
        sshDaemon:
          type: boolean
        sshImage:
          type: string
        debugMode:
          type: integer
          format: int32
        copyImage:
          type: string
        usePrivateAddress:
          type: boolean
        labels:
          type: object
          additionalProperties:
            type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        nextflowConfig:
          type: string
        nfsTarget:
          type: string
        nfsMount:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
        fusion2Enabled:
          type: boolean
        serviceAccount:
          type: string
        network:
          type: string
        subnetwork:
          type: string
        headJobInstanceTemplate:
          type: string
        computeJobsInstanceTemplate:
          type: string
    GoogleBucket:
      type: object
      properties:
        path:
          type: string
    GoogleCloudConfig:
      title: Google Cloud configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        preRunScript:
          type: string
        postRunScript:
          type: string
        workDir:
          type: string
        nextflowConfig:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
        fusion2Enabled:
          type: boolean
        projectId:
          type: string
        region:
          type: string
        zone:
          type: string
        serviceAccountEmail:
          type: string
        instanceType:
          type: string
        imageId:
          type: string
        arm64Enabled:
          type: boolean
        gpuEnabled:
          type: boolean
        bootDiskSizeGb:
          type: integer
          format: int32
        forgedResources:
          type: array
          items:
            type: object
            additionalProperties: true
    GoogleCloudPlatformMetaInfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        zones:
          type: array
          items:
            type: string
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/GoogleBucket"
        instanceTypes:
          type: array
          items:
            $ref: "#/components/schemas/GoogleInstanceType"
        images:
          type: array
          items:
            $ref: "#/components/schemas/GoogleImage"
    GoogleImage:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        arch:
          type: string
    GoogleInstanceType:
      type: object
      properties:
        id:
          type: string
        arch:
          type: string
    GoogleLifeSciencesConfig:
      title: Google life sciences configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        region:
          type: string
        zones:
          type: array
          items:
            type: string
        location:
          type: string
        workDir:
          type: string
        preemptible:
          type: boolean
        bootDiskSizeGb:
          type: integer
          format: int32
        projectId:
          type: string
        sshDaemon:
          type: boolean
        sshImage:
          type: string
        debugMode:
          type: integer
          format: int32
        copyImage:
          type: string
        usePrivateAddress:
          type: boolean
        labels:
          type: object
          additionalProperties:
            type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        nextflowConfig:
          type: string
        nfsTarget:
          type: string
        nfsMount:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
    GooglePlatformMetainfo:
      type: object
      properties:
        locations:
          type: array
          items:
            type: string
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        zones:
          type: array
          items:
            type: string
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/GooglePlatformMetainfo.Bucket"
        filestores:
          type: array
          items:
            $ref: "#/components/schemas/GooglePlatformMetainfo.Filestore"
    GooglePlatformMetainfo.Bucket:
      type: object
      properties:
        path:
          type: string
    GooglePlatformMetainfo.Filestore:
      type: object
      properties:
        target:
          type: string
        name:
          type: string
        location:
          type: string
    GoogleSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        data:
          type: string
          writeOnly: true
    GridPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
    Image:
      required:
        - arch
        - description
        - id
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        arch:
          type: string
    InstanceType:
      required:
        - arch
      type: object
      properties:
        id:
          type: string
        arch:
          type: string
    Iterator_String_:
      type: object
    JobCleanupPolicy:
      type: string
      enum:
        - on_success
        - always
        - never
    JobInfoDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        operationId:
          type: string
        message:
          type: string
        status:
          type: string
        exitCode:
          type: integer
          format: int32
    JobQueue:
      required:
        - name
        - state
      type: object
      properties:
        name:
          type: string
        state:
          type: string
    K8sComputeConfig:
      title: Kubernetes compute configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        server:
          type: string
        sslCert:
          type: string
        namespace:
          type: string
        computeServiceAccount:
          type: string
        headServiceAccount:
          type: string
        storageClaimName:
          type: string
        storageMountPath:
          type: string
        podCleanup:
          $ref: "#/components/schemas/PodCleanupPolicy"
        headPodSpec:
          type: string
        servicePodSpec:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        nextflowConfig:
          type: string
      required:
        - server
        - namespace
        - sslCert
        - headServiceAccount
        - storageClaimName
    K8sPlatformMetaInfo:
      type: object
      properties:
        discriminator:
          type: string
    K8sSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        certificate:
          type: string
        privateKey:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
    LabelDbDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
        isDefault:
          type: boolean
        isDynamic:
          type: boolean
        isInterpolated:
          type: boolean
        dateCreated:
          type: string
          format: date-time
      description: |
        Represents a label for organizing and categorizing resources.
        Provides metadata tagging capabilities for pipelines, workflows,
        and other platform resources.
    LabelType:
      type: string
      enum:
        - simple
        - resource
        - all
    Launch:
      required:
        - dateCreated
        - pipeline
      type: object
      properties:
        id:
          maxLength: 22
          type: string
        computeEnv:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/ComputeEnv_ComputeConfig_"
        pipeline:
          maxLength: 200
          type: string
        workDir:
          type: string
        revision:
          maxLength: 100
          type: string
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        mainScript:
          maxLength: 200
          type: string
        entryName:
          maxLength: 80
          type: string
        schemaName:
          maxLength: 100
          pattern: "[\\p{Graph}&&[^/]]\\p{Graph}+"
          type: string
        resume:
          type: boolean
        resumeLaunchId:
          maxLength: 22
          type: string
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        sessionId:
          maxLength: 36
          type: string
        runName:
          maxLength: 80
          type: string
        configProfiles:
          type: array
          items:
            type: string
        userSecrets:
          type: array
          items:
            type: string
        workspaceSecrets:
          type: array
          items:
            type: string
        optimizationId:
          maxLength: 32
          type: string
        optimizationTargets:
          type: string
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        launchContainer:
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    LaunchActionRequest:
      type: object
      properties:
        params:
          type: object
          additionalProperties: true
    LaunchActionResponse:
      type: object
      properties:
        workflowId:
          type: string
    ListAccessTokensResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: "#/components/schemas/AccessToken"
    ListActionsResponse:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: "#/components/schemas/ListActionsResponse.ActionInfo"
    ListActionsResponse.ActionInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pipeline:
          type: string
        source:
          $ref: "#/components/schemas/Action.Source"
        status:
          $ref: "#/components/schemas/Action.Status"
        lastSeen:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        event:
          $ref: "#/components/schemas/Action.EventType"
        endpoint:
          type: string
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        usageCmd:
          type: string
    ListComputeEnvsResponse:
      type: object
      properties:
        computeEnvs:
          type: array
          items:
            $ref: "#/components/schemas/ListComputeEnvsResponse.Entry"
    ListComputeEnvsResponse.Entry:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        platform:
          type: string
        status:
          $ref: "#/components/schemas/ComputeEnv.Status"
        message:
          type: string
        lastUsed:
          type: string
          format: date-time
        primary:
          type: boolean
        workspaceName:
          type: string
        visibility:
          type: string
        workDir:
          type: string
        credentialsId:
          type: string
        region:
          type: string
    ListCredentialsResponse:
      type: object
      properties:
        credentials:
          type: array
          items:
            $ref: "#/components/schemas/Credentials"
    ListDatasetVersionsResponse:
      type: object
      properties:
        versions:
          type: array
          items:
            $ref: "#/components/schemas/DatasetVersionDbDto"
    ListDatasetsResponse:
      type: object
      properties:
        datasets:
          type: array
          items:
            $ref: "#/components/schemas/Dataset"
    ListEventTypesResponse:
      type: object
      properties:
        eventTypes:
          type: array
          items:
            $ref: "#/components/schemas/EventType"
    ListLabelsResponse:
      type: object
      properties:
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        totalSize:
          type: integer
          format: int64
    ListMembersResponse:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: "#/components/schemas/MemberDbDto"
        totalSize:
          type: integer
          format: int64
    ListOrganizationsResponse:
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationDbDto"
        totalSize:
          type: integer
          format: int32
    ListParticipantsResponse:
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: "#/components/schemas/ParticipantDbDto"
        totalSize:
          type: integer
          format: int64
    ListPipelineInfoResponse:
      type: object
      properties:
        pipelines:
          type: array
          items:
            type: string
    ListPipelineSecretsResponse:
      type: object
      properties:
        pipelineSecrets:
          type: array
          items:
            $ref: "#/components/schemas/PipelineSecret"
        totalSize:
          type: integer
          format: int64
    ListPipelinesResponse:
      type: object
      properties:
        pipelines:
          type: array
          items:
            $ref: "#/components/schemas/PipelineDbDto"
        totalSize:
          type: integer
          format: int64
    ListPlatformsResponse:
      type: object
      properties:
        platforms:
          type: array
          items:
            $ref: "#/components/schemas/ComputePlatform"
    ListRegionsResponse:
      type: object
      properties:
        regions:
          type: array
          items:
            $ref: "#/components/schemas/ComputeRegion"
    ListTasksResponse:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/DescribeTaskResponse"
        total:
          type: integer
          format: int64
    ListTeamResponse:
      type: object
      properties:
        teams:
          type: array
          items:
            $ref: "#/components/schemas/TeamDbDto"
        totalSize:
          type: integer
          format: int64
    ListWorkflowsResponse:
      type: object
      properties:
        workflows:
          type: array
          items:
            $ref: "#/components/schemas/ListWorkflowsResponse.ListWorkflowsElement"
        totalSize:
          type: integer
          format: int64
    ListWorkflowsResponse.ListWorkflowsElement:
      type: object
      properties:
        workflow:
          $ref: "#/components/schemas/WorkflowDbDto"
        progress:
          $ref: "#/components/schemas/ProgressData"
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        starred:
          type: boolean
        optimized:
          type: boolean
    ListWorkspacesAndOrgResponse:
      type: object
      properties:
        orgsAndWorkspaces:
          type: array
          items:
            $ref: "#/components/schemas/OrgAndWorkspaceDto"
    ListWorkspacesResponse:
      type: object
      properties:
        workspaces:
          type: array
          items:
            $ref: "#/components/schemas/WorkspaceDbDto"
    LocalPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
    Log:
      type: object
      properties:
        name:
          type: string
        cmd:
          type: array
          items:
            type: string
        start_time:
          type: string
        end_time:
          type: string
        stdout:
          type: string
        stderr:
          type: string
        exit_code:
          type: integer
          format: int32
    LogPage:
      type: object
      properties:
        truncated:
          type: boolean
        entries:
          $ref: "#/components/schemas/Iterator_String_"
        rewindToken:
          type: string
        forwardToken:
          type: string
        pending:
          type: boolean
        message:
          type: string
        downloads:
          type: array
          items:
            $ref: "#/components/schemas/LogPage.Download"
    LogPage.Download:
      type: object
      properties:
        saveName:
          type: string
        fileName:
          type: string
        displayText:
          type: string
    LsfComputeConfig:
      title: IBM LSF configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              readOnly: true
            unitForLimits:
              type: string
            perJobMemLimit:
              type: boolean
            perTaskReserve:
              type: boolean
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
      required:
        - workDir
    Map.Entry_String.String_:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    MemberDbDto:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        userName:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        role:
          $ref: "#/components/schemas/OrgRole"
    MoabComputeConfig:
      title: Moab configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              readOnly: true
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
      required:
        - workDir
    MultiRequestFileSchema:
      type: object
      properties:
        file:
          type: string
          format: binary
    NavbarConfig:
      type: object
      properties:
        menus:
          type: array
          items:
            $ref: "#/components/schemas/NavbarConfig.NavbarMenu"
    NavbarConfig.NavbarMenu:
      type: object
      properties:
        label:
          type: string
        url:
          type: string
    OrgAndWorkspaceDto:
      type: object
      properties:
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        orgLogoUrl:
          type: string
        orgType:
          $ref: "#/components/schemas/OrgType"
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        workspaceFullName:
          type: string
        visibility:
          $ref: "#/components/schemas/Visibility"
        roles:
          type: array
          items:
            type: string
    OrgRole:
      type: string
      enum:
        - owner
        - member
        - collaborator
    OrgType:
      type: string
      enum:
        - academic
        - evaluating
        - pro
        - basic
        - internal
    Organization:
      required:
        - fullName
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          readOnly: true
        name:
          maxLength: 40
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,38}$"
          type: string
        fullName:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        location:
          maxLength: 100
          type: string
        website:
          pattern: ""
          type: string
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
    OrganizationDbDto:
      type: object
      properties:
        paying:
          type: boolean
          deprecated: true
        orgId:
          type: integer
          format: int64
        name:
          type: string
        fullName:
          type: string
        description:
          type: string
        location:
          type: string
        website:
          type: string
        logoId:
          type: string
        logoUrl:
          type: string
        memberId:
          type: integer
          format: int64
        memberRole:
          $ref: "#/components/schemas/OrgRole"
        type:
          $ref: "#/components/schemas/OrgType"
      description: |
        Represents an organization in the Seqera Platform.
        Contains organizational metadata, settings, and member management
        information for multi-tenant environments.
    OrganizationQuotas:
      type: object
      properties:
        maxWorkspaces:
          type: integer
          format: int64
        maxMembers:
          type: integer
          format: int64
        maxTeams:
          type: integer
          format: int64
        maxPipelinesPerWorkspace:
          type: integer
          format: int64
        maxParticipantsPerWorkspace:
          type: integer
          format: int64
        maxDatasetsPerWorkspace:
          type: integer
          format: int64
        maxVersionsPerDataset:
          type: integer
          format: int64
        maxRuns:
          type: integer
          format: int64
        maxRunHistory:
          type: integer
          format: int64
        maxLabelsPerWorkspace:
          type: integer
          format: int64
        maxDataStudiosRunning:
          type: integer
          format: int64
        maxSeqeraComputeComputeEnvs:
          type: integer
          format: int64
        maxFusionThroughputBytes:
          type: integer
          format: int64
    ParticipantDbDto:
      type: object
      properties:
        participantId:
          type: integer
          format: int64
        memberId:
          type: integer
          format: int64
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        orgRole:
          $ref: "#/components/schemas/OrgRole"
        teamId:
          type: integer
          format: int64
        teamName:
          type: string
        wspRole:
          $ref: "#/components/schemas/WspRole"
        type:
          $ref: "#/components/schemas/ParticipantType"
        teamAvatarUrl:
          type: string
        userAvatarUrl:
          type: string
    ParticipantType:
      type: string
      enum:
        - MEMBER
        - TEAM
        - COLLABORATOR
    PipelineDbDto:
      type: object
      properties:
        pipelineId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        repository:
          type: string
        userId:
          type: integer
          format: int64
        userName:
          type: string
        userFirstName:
          type: string
        userLastName:
          type: string
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        visibility:
          type: string
        deleted:
          type: boolean
        lastUpdated:
          type: string
          format: date-time
        optimizationId:
          type: string
        optimizationTargets:
          type: string
        optimizationStatus:
          $ref: "#/components/schemas/PipelineOptimizationStatus"
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        computeEnv:
          $ref: "#/components/schemas/ComputeEnvDbDto"
      description: |
        Represents a pipeline configuration in the Seqera Platform.
        Contains pipeline metadata, configuration settings, and execution parameters
        for Nextflow workflows.
    PipelineInfo:
      type: object
      properties:
        projectName:
          type: string
        simpleName:
          type: string
        repositoryUrl:
          type: string
        cloneUrl:
          type: string
        provider:
          type: string
        configFiles:
          type: array
          items:
            type: string
        workDirs:
          type: array
          items:
            type: string
        revisions:
          type: array
          items:
            type: string
        profiles:
          type: array
          items:
            type: string
        manifest:
          $ref: "#/components/schemas/WfManifest"
        warnings:
          type: array
          items:
            type: string
    PipelineOptimizationStatus:
      type: string
      enum:
        - OPTIMIZED
        - OPTIMIZABLE
        - UNAVAILABLE
    PipelineQueryAttribute:
      type: string
      enum:
        - optimized
        - labels
        - computeEnv
    PipelineSchemaAttributes:
      type: string
      enum:
        - schema
        - params
    PipelineSchemaResponse:
      required:
        - schema
      type: object
      properties:
        schema:
          type: string
        params:
          type: string
    PipelineSecret:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          maxLength: 100
          pattern: "^[a-zA-Z_](?:[0-9A-Za-z]+|(_)(?!\\1)){1,49}$"
          type: string
        lastUsed:
          type: string
          format: date-time
          readOnly: true
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
      description: |
        Represents a secure secret for pipeline execution.
        Contains encrypted sensitive data such as API keys, passwords,
        and configuration values used in workflows.
    PlatformMetainfo:
      type: object
      discriminator:
        propertyName: discriminator
        mapping:
          gke-platform: "#/components/schemas/GkePlatformMetaInfo"
          aws-cloud: "#/components/schemas/AwsCloudPlatformMetainfo"
          seqeracompute: "#/components/schemas/SeqeraComputePlatformMetainfo"
          k8s-platform: "#/components/schemas/K8sPlatformMetaInfo"
          grid: "#/components/schemas/GridPlatformMetainfo"
          aws-batch: "#/components/schemas/AwsBatchPlatformMetainfo"
          google-cloud: "#/components/schemas/GoogleCloudPlatformMetaInfo"
          local-platform: "#/components/schemas/LocalPlatformMetainfo"
          azure-batch: "#/components/schemas/AzBatchPlatformMetainfo"
          eks-platform: "#/components/schemas/EksPlatformMetaInfo"
      oneOf:
        - $ref: "#/components/schemas/AwsBatchPlatformMetainfo"
        - $ref: "#/components/schemas/AwsCloudPlatformMetainfo"
        - $ref: "#/components/schemas/GooglePlatformMetainfo"
        - $ref: "#/components/schemas/GoogleCloudPlatformMetaInfo"
        - $ref: "#/components/schemas/AzBatchPlatformMetainfo"
        - $ref: "#/components/schemas/EksPlatformMetaInfo"
        - $ref: "#/components/schemas/GkePlatformMetaInfo"
        - $ref: "#/components/schemas/K8sPlatformMetaInfo"
        - $ref: "#/components/schemas/GridPlatformMetainfo"
        - $ref: "#/components/schemas/SeqeraComputePlatformDescriber"
        - $ref: "#/components/schemas/LocalPlatformMetainfo"
    PodCleanupPolicy:
      type: string
      enum:
        - on_success
        - always
        - never
    ProcessLoad:
      required:
        - aborted
        - cached
        - cpuLoad
        - cpuTime
        - cpus
        - failed
        - invCtxSwitch
        - loadCpus
        - loadMemory
        - loadTasks
        - memoryReq
        - memoryRss
        - peakCpus
        - peakMemory
        - peakTasks
        - pending
        - process
        - readBytes
        - running
        - submitted
        - succeeded
        - volCtxSwitch
        - writeBytes
      type: object
      properties:
        pending:
          type: integer
          format: int64
        submitted:
          type: integer
          format: int64
        running:
          type: integer
          format: int64
        succeeded:
          type: integer
          format: int64
        failed:
          type: integer
          format: int64
        cached:
          type: integer
          format: int64
        aborted:
          type: integer
          format: int64
        memoryEfficiency:
          type: number
          format: float
        cpuEfficiency:
          type: number
          format: float
        process:
          type: string
        cpus:
          type: integer
          format: int64
          deprecated: true
        cpuTime:
          type: integer
          format: int64
          deprecated: true
        cpuLoad:
          type: integer
          format: int64
          deprecated: true
        memoryRss:
          type: integer
          format: int64
          deprecated: true
        memoryReq:
          type: integer
          format: int64
          deprecated: true
        readBytes:
          type: integer
          format: int64
          deprecated: true
        writeBytes:
          type: integer
          format: int64
          deprecated: true
        volCtxSwitch:
          type: integer
          format: int64
          deprecated: true
        invCtxSwitch:
          type: integer
          format: int64
          deprecated: true
        loadTasks:
          type: integer
          format: int64
          deprecated: true
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakCpus:
          type: integer
          format: int64
        peakTasks:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    ProgressData:
      type: object
      properties:
        workflowProgress:
          $ref: "#/components/schemas/WorkflowLoad"
        processesProgress:
          type: array
          items:
            $ref: "#/components/schemas/ProcessLoad"
        totalProcesses:
          type: integer
          format: int32
    RandomWorkflowNameResponse:
      type: object
      properties:
        name:
          type: string
    ResourceData:
      type: object
      properties:
        warnings:
          type: array
          items:
            type: string
        mean:
          type: number
          format: float
        min:
          type: number
          format: float
        q1:
          type: number
          format: float
        q2:
          type: number
          format: float
        q3:
          type: number
          format: float
        max:
          type: number
          format: float
        minLabel:
          type: string
        maxLabel:
          type: string
        q1Label:
          type: string
        q2Label:
          type: string
        q3Label:
          type: string
    RunId:
      type: object
      properties:
        run_id:
          type: string
    RunListResponse:
      type: object
      properties:
        runs:
          type: array
          items:
            $ref: "#/components/schemas/RunStatus"
        next_page_token:
          type: string
    RunLog:
      type: object
      properties:
        run_id:
          type: string
        request:
          $ref: "#/components/schemas/RunRequest"
        state:
          $ref: "#/components/schemas/State"
        run_log:
          $ref: "#/components/schemas/Log"
        task_logs:
          type: array
          items:
            $ref: "#/components/schemas/Log"
        outputs:
          type: object
    RunRequest:
      type: object
      properties:
        workflow_params:
          type: string
        workflow_type:
          type: string
        workflow_type_version:
          type: string
        tags:
          type: object
          additionalProperties:
            type: string
        workflow_engine_parameters:
          type: object
          additionalProperties:
            type: string
        workflow_url:
          type: string
    RunStatus:
      type: object
      properties:
        run_id:
          type: string
        state:
          $ref: "#/components/schemas/State"
    SSHSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        privateKey:
          type: string
          writeOnly: true
        passphrase:
          type: string
          writeOnly: true
    SecurityGroup:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        vpcId:
          type: string
    SecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
      discriminator:
        propertyName: discriminator
        mapping:
          github: "#/components/schemas/GitHubSecurityKeys"
          azurerepos: "#/components/schemas/AzureReposSecurityKeys"
          azure_entra: "#/components/schemas/AzureEntraKeys"
          container-reg: "#/components/schemas/ContainerRegistryKeys"
          tw-agent: "#/components/schemas/AgentSecurityKeys"
          k8s: "#/components/schemas/K8sSecurityKeys"
          ssh: "#/components/schemas/SSHSecurityKeys"
          google: "#/components/schemas/GoogleSecurityKeys"
          bitbucket: "#/components/schemas/BitBucketSecurityKeys"
          gitea: "#/components/schemas/GiteaSecurityKeys"
          seqeracompute: "#/components/schemas/SeqeraComputeSecurityKeys"
          codecommit: "#/components/schemas/CodeCommitSecurityKeys"
          gitlab: "#/components/schemas/GitLabSecurityKeys"
          aws: "#/components/schemas/AwsSecurityKeys"
          azure: "#/components/schemas/AzureSecurityKeys"
      oneOf:
        - $ref: "#/components/schemas/AwsSecurityKeys"
        - $ref: "#/components/schemas/GoogleSecurityKeys"
        - $ref: "#/components/schemas/GitHubSecurityKeys"
        - $ref: "#/components/schemas/GitLabSecurityKeys"
        - $ref: "#/components/schemas/BitBucketSecurityKeys"
        - $ref: "#/components/schemas/GiteaSecurityKeys"
        - $ref: "#/components/schemas/SSHSecurityKeys"
        - $ref: "#/components/schemas/K8sSecurityKeys"
        - $ref: "#/components/schemas/AzureSecurityKeys"
        - $ref: "#/components/schemas/AzureReposSecurityKeys"
        - $ref: "#/components/schemas/ContainerRegistryKeys"
        - $ref: "#/components/schemas/AgentSecurityKeys"
        - $ref: "#/components/schemas/CodeCommitSecurityKeys"
        - $ref: "#/components/schemas/AzureEntraKeys"
        - $ref: "#/components/schemas/SeqeraComputeSecurityKeys"
    SeqeraComputeConfig:
      title: Seqera Compute configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        region:
          type: string
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        nextflowConfig:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
      required:
        - region
    SeqeraComputePlatformDescriber:
      type: object
    SeqeraComputePlatformMetainfo:
      type: object
      properties:
        warnings:
          type: array
          items:
            type: string
        jobQueues:
          type: array
          items:
            $ref: "#/components/schemas/JobQueue"
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/Bucket"
        fileSystems:
          type: array
          items:
            $ref: "#/components/schemas/FsxFileSystem"
        efsFileSystems:
          type: array
          items:
            $ref: "#/components/schemas/EfsFileSystem"
        keyPairs:
          type: array
          items:
            type: string
        vpcs:
          type: array
          items:
            $ref: "#/components/schemas/Vpc"
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
        securityGroups:
          type: array
          items:
            $ref: "#/components/schemas/SecurityGroup"
        subnets:
          type: array
          items:
            $ref: "#/components/schemas/Subnet"
        instanceFamilies:
          type: array
          items:
            type: string
        allocStrategy:
          type: array
          items:
            type: string
        instanceTypes:
          type: array
          items:
            $ref: "#/components/schemas/InstanceType"
        discriminator:
          type: string
    SeqeraComputeSecurityKeys:
      type: object
      allOf:
        - $ref: "#/components/schemas/AwsSecurityKeys"
        - properties:
            discriminator:
              type: string
              readOnly: true
    ServiceInfo:
      type: object
      properties:
        version:
          type: string
        apiVersion:
          type: string
        commitId:
          type: string
        authTypes:
          type: array
          items:
            type: string
        loginPath:
          type: string
        navbar:
          $ref: "#/components/schemas/NavbarConfig"
        heartbeatInterval:
          type: integer
          format: int32
        userWorkspaceEnabled:
          type: boolean
        allowInstanceCredentials:
          type: boolean
        landingUrl:
          type: string
        termsOfUseUrl:
          type: string
        contentUrl:
          type: string
        analytics:
          $ref: "#/components/schemas/Analytics"
        allowLocalRepos:
          type: boolean
          deprecated: true
        contentMaxFileSize:
          type: integer
          format: int64
        waveEnabled:
          type: boolean
        groundswellEnabled:
          type: boolean
        groundswellAllowedWorkspaces:
          type: array
          items:
            type: integer
            format: int64
        scmsServerUrl:
          type: string
        forgePrefix:
          type: string
        seqeraCloud:
          type: boolean
        evalWorkspaceIds:
          type: array
          items:
            type: integer
            format: int64
        contactEmail:
          type: string
        allowNextflowCliLogs:
          type: boolean
        logoutUrl:
          type: string
          nullable: true
    ServiceInfoResponse:
      type: object
      properties:
        serviceInfo:
          $ref: "#/components/schemas/ServiceInfo"
    SlurmComputeConfig:
      title: Slurm configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              readOnly: true
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
      required:
        - workDir
    State:
      type: string
      enum:
        - UNKNOWN
        - QUEUED
        - INITIALIZING
        - RUNNING
        - PAUSED
        - COMPLETE
        - EXECUTOR_ERROR
        - SYSTEM_ERROR
        - CANCELED
        - CANCELING
    StudioUser:
      required:
        - avatar
        - email
        - id
        - userName
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          type: string
        email:
          type: string
        avatar:
          type: string
    SubmitWorkflowLaunchRequest:
      type: object
      properties:
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
    SubmitWorkflowLaunchResponse:
      type: object
      properties:
        workflowId:
          type: string
    Subnet:
      type: object
      properties:
        id:
          type: string
        zone:
          type: string
        vpcId:
          type: string
    Task:
      required:
        - status
        - taskId
      type: object
      properties:
        hash:
          type: string
        name:
          type: string
        process:
          type: string
        tag:
          type: string
        submit:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        complete:
          type: string
          format: date-time
        module:
          type: array
          items:
            type: string
        container:
          type: string
        attempt:
          type: integer
          format: int32
        script:
          type: string
        scratch:
          type: string
        workdir:
          type: string
        queue:
          type: string
        cpus:
          type: integer
          format: int32
        memory:
          type: integer
          format: int64
        disk:
          type: integer
          format: int64
        time:
          type: integer
          format: int64
        env:
          type: string
        executor:
          type: string
        machineType:
          type: string
        cloudZone:
          type: string
        priceModel:
          $ref: "#/components/schemas/CloudPriceModel"
        cost:
          type: number
        errorAction:
          type: string
        exitStatus:
          type: integer
          format: int32
        duration:
          type: integer
          format: int64
        realtime:
          type: integer
          format: int64
        nativeId:
          type: string
        pcpu:
          type: number
          format: double
        pmem:
          type: number
          format: double
        rss:
          type: integer
          format: int64
        vmem:
          type: integer
          format: int64
        peakRss:
          type: integer
          format: int64
        peakVmem:
          type: integer
          format: int64
        rchar:
          type: integer
          format: int64
        wchar:
          type: integer
          format: int64
        syscr:
          type: integer
          format: int64
        syscw:
          type: integer
          format: int64
        readBytes:
          type: integer
          format: int64
        writeBytes:
          type: integer
          format: int64
        volCtxt:
          type: integer
          format: int64
        invCtxt:
          type: integer
          format: int64
        exit:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
          nullable: true
        taskId:
          type: integer
          format: int64
        status:
          $ref: "#/components/schemas/TaskStatus"
        dateCreated:
          type: string
          format: date-time
          nullable: true
        lastUpdated:
          type: string
          format: date-time
          nullable: true
    TaskStatus:
      type: string
      enum:
        - NEW
        - SUBMITTED
        - RUNNING
        - CACHED
        - COMPLETED
        - FAILED
        - ABORTED
    Team:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          readOnly: true
        name:
          maxLength: 40
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,38}$"
          type: string
        description:
          maxLength: 250
          type: string
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
    TeamDbDto:
      type: object
      properties:
        teamId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        avatarUrl:
          type: string
        membersCount:
          type: integer
          format: int64
      description: |-
        Represents a team within an organization.
        Contains team membership, permissions, and access controls
        for collaborative workspace management.
    TraceBeginRequest:
      type: object
      properties:
        launchId:
          type: string
          deprecated: true
        workflow:
          $ref: "#/components/schemas/Workflow"
        processNames:
          type: array
          items:
            type: string
        towerLaunch:
          type: boolean
      description: |
        Represents workflow execution trace information.
        Contains metadata and progress tracking data for monitoring
        pipeline execution and performance metrics.
    TraceBeginResponse:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/TraceProcessingStatus"
        workflowId:
          type: string
        watchUrl:
          type: string
    TraceCompleteRequest:
      type: object
      properties:
        workflow:
          $ref: "#/components/schemas/Workflow"
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/WorkflowMetrics"
        progress:
          $ref: "#/components/schemas/TraceProgressData"
    TraceCompleteResponse:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/TraceProcessingStatus"
        workflowId:
          type: string
    TraceCreateRequest:
      type: object
      properties:
        launchId:
          type: string
          deprecated: true
        sessionId:
          type: string
        runName:
          type: string
        projectName:
          type: string
        repository:
          type: string
        workflowId:
          type: string
    TraceCreateResponse:
      type: object
      properties:
        message:
          type: string
        workflowId:
          type: string
    TraceHeartbeatRequest:
      type: object
      properties:
        progress:
          $ref: "#/components/schemas/TraceProgressData"
    TraceHeartbeatResponse:
      type: object
      properties:
        message:
          type: string
    TraceProcessingStatus:
      type: string
      enum:
        - OK
        - KO
    TraceProgressData:
      type: object
      properties:
        pending:
          type: integer
          format: int32
        submitted:
          type: integer
          format: int32
        running:
          type: integer
          format: int32
        succeeded:
          type: integer
          format: int32
        cached:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
        aborted:
          type: integer
          format: int32
        stored:
          type: integer
          format: int32
        ignored:
          type: integer
          format: int32
        retries:
          type: integer
          format: int32
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakRunning:
          type: integer
          format: int32
        peakCpus:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
        processes:
          type: array
          items:
            $ref: "#/components/schemas/TraceProgressDetail"
    TraceProgressDetail:
      type: object
      properties:
        index:
          type: integer
          format: int32
        name:
          type: string
        pending:
          type: integer
          format: int32
        submitted:
          type: integer
          format: int32
        running:
          type: integer
          format: int32
        succeeded:
          type: integer
          format: int32
        cached:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
        aborted:
          type: integer
          format: int32
        stored:
          type: integer
          format: int32
        ignored:
          type: integer
          format: int32
        retries:
          type: integer
          format: int32
        terminated:
          type: boolean
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakRunning:
          type: integer
          format: int32
        peakCpus:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
    TraceProgressRequest:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/Task"
        progress:
          $ref: "#/components/schemas/TraceProgressData"
        containers:
          type: array
          items:
            $ref: "#/components/schemas/ContainerData"
    TraceProgressResponse:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/TraceProcessingStatus"
        workflowId:
          type: string
    UnivaComputeConfig:
      title: Univa Grid Engine configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              readOnly: true
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
      required:
        - workDir
    UpdateActionRequest:
      type: object
      properties:
        name:
          type: string
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
    UpdateComputeEnvRequest:
      type: object
      properties:
        name:
          type: string
        credentialsId:
          type: string
    UpdateCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: "#/components/schemas/Credentials"
    UpdateDatasetRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    UpdateLabelRequest:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        isDefault:
          type: boolean
    UpdateLabelResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        isDefault:
          type: boolean
    UpdateMemberRoleRequest:
      type: object
      properties:
        role:
          $ref: "#/components/schemas/OrgRole"
    UpdateOrganizationRequest:
      type: object
      properties:
        fullName:
          type: string
        name:
          type: string
        description:
          type: string
        location:
          type: string
        website:
          type: string
        logoId:
          type: string
        paying:
          type: boolean
          nullable: true
          deprecated: true
        type:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/OrgType"
    UpdateParticipantRoleRequest:
      type: object
      properties:
        role:
          $ref: "#/components/schemas/WspRole"
    UpdatePipelineRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    UpdatePipelineResponse:
      type: object
      properties:
        pipeline:
          $ref: "#/components/schemas/PipelineDbDto"
    UpdatePipelineSecretRequest:
      type: object
      properties:
        value:
          type: string
    UpdateTeamRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        avatarId:
          type: string
    UpdateWorkspaceRequest:
      type: object
      properties:
        name:
          type: string
        fullName:
          type: string
        description:
          type: string
        visibility:
          $ref: "#/components/schemas/Visibility"
    UploadDatasetVersionResponse:
      type: object
      properties:
        version:
          $ref: "#/components/schemas/DatasetVersionDbDto"
    UploadEtag:
      type: object
      properties:
        partNumber:
          type: integer
          format: int32
        eTag:
          type: string
    UserDbDto:
      required:
        - email
        - userName
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          maxLength: 40
          type: string
        email:
          maxLength: 255
          type: string
          format: email
        firstName:
          maxLength: 100
          type: string
        lastName:
          maxLength: 100
          type: string
        organization:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        avatar:
          type: string
        avatarId:
          type: string
        notification:
          type: boolean
        termsOfUseConsent:
          type: boolean
        marketingConsent:
          type: boolean
        lastAccess:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        deleted:
          type: boolean
    Visibility:
      type: string
      enum:
        - PRIVATE
        - SHARED
    Vpc:
      type: object
      properties:
        id:
          type: string
        isDefault:
          type: boolean
    WesErrorResponse:
      type: object
      properties:
        msg:
          type: string
        status_code:
          type: integer
          format: int32
    WfFusionMeta:
      type: object
      properties:
        enabled:
          type: boolean
        version:
          maxLength: 20
          type: string
    WfManifest:
      type: object
      properties:
        nextflowVersion:
          maxLength: 20
          type: string
        defaultBranch:
          maxLength: 20
          type: string
        version:
          maxLength: 20
          type: string
        homePage:
          maxLength: 200
          type: string
        gitmodules:
          maxLength: 150
          type: string
        description:
          maxLength: 1024
          type: string
        name:
          maxLength: 150
          type: string
        mainScript:
          maxLength: 100
          type: string
        author:
          maxLength: 150
          type: string
        icon:
          maxLength: 255
          type: string
    WfNextflow:
      type: object
      properties:
        version:
          maxLength: 20
          type: string
        build:
          maxLength: 10
          type: string
        timestamp:
          type: string
          format: date-time
    WfStats:
      type: object
      properties:
        computeTimeFmt:
          maxLength: 50
          type: string
        cachedCount:
          type: integer
          format: int32
        failedCount:
          type: integer
          format: int32
        ignoredCount:
          type: integer
          format: int32
        succeedCount:
          type: integer
          format: int32
        cachedCountFmt:
          type: string
        succeedCountFmt:
          type: string
        failedCountFmt:
          type: string
        ignoredCountFmt:
          type: string
        cachedPct:
          type: number
          format: float
        failedPct:
          type: number
          format: float
        succeedPct:
          type: number
          format: float
        ignoredPct:
          type: number
          format: float
        cachedDuration:
          type: integer
          format: int64
        failedDuration:
          type: integer
          format: int64
        succeedDuration:
          type: integer
          format: int64
    WfWaveMeta:
      type: object
      properties:
        enabled:
          type: boolean
    Workflow:
      required:
        - commandLine
        - projectName
        - runName
        - sessionId
        - submit
        - userName
        - workDir
      type: object
      properties:
        requiresAttention:
          type: boolean
        status:
          $ref: "#/components/schemas/WorkflowStatus"
        ownerId:
          type: integer
          format: int64
          readOnly: true
        repository:
          type: string
        id:
          maxLength: 16
          type: string
        submit:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        complete:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        runName:
          maxLength: 80
          type: string
        sessionId:
          maxLength: 36
          type: string
        profile:
          maxLength: 100
          type: string
        workDir:
          type: string
        commitId:
          maxLength: 40
          type: string
        userName:
          maxLength: 40
          type: string
        scriptId:
          maxLength: 40
          type: string
        revision:
          maxLength: 100
          type: string
        commandLine:
          maxLength: 8096
          type: string
        projectName:
          maxLength: 200
          type: string
        scriptName:
          maxLength: 100
          type: string
        launchId:
          maxLength: 22
          type: string
        configFiles:
          type: array
          items:
            type: string
        params:
          type: object
          additionalProperties: true
        configText:
          type: string
        manifest:
          $ref: "#/components/schemas/WfManifest"
        nextflow:
          $ref: "#/components/schemas/WfNextflow"
        stats:
          $ref: "#/components/schemas/WfStats"
        fusion:
          $ref: "#/components/schemas/WfFusionMeta"
        wave:
          $ref: "#/components/schemas/WfWaveMeta"
        errorMessage:
          type: string
        errorReport:
          type: string
        deleted:
          type: boolean
          readOnly: true
        projectDir:
          type: string
        homeDir:
          type: string
        container:
          type: string
        containerEngine:
          type: string
        scriptFile:
          type: string
        launchDir:
          type: string
        duration:
          type: integer
          format: int64
        exitStatus:
          type: integer
          format: int32
        resume:
          type: boolean
        success:
          type: boolean
        logFile:
          maxLength: 255
          type: string
        outFile:
          maxLength: 255
          type: string
        operationId:
          maxLength: 110
          type: string
    WorkflowDbDto:
      type: object
      properties:
        messages:
          type: array
          items:
            type: string
        id:
          type: string
        ownerId:
          type: integer
          format: int64
        submit:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        complete:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        runName:
          type: string
        sessionId:
          type: string
        profile:
          type: string
        workDir:
          type: string
        commitId:
          type: string
        userName:
          type: string
        scriptId:
          type: string
        revision:
          type: string
        commandLine:
          type: string
        projectName:
          type: string
        scriptName:
          type: string
        launchId:
          type: string
        status:
          $ref: "#/components/schemas/WorkflowStatus"
        requiresAttention:
          type: boolean
        configFiles:
          type: array
          items:
            type: string
        params:
          type: object
          additionalProperties: true
        configText:
          type: string
        manifest:
          $ref: "#/components/schemas/WfManifest"
        nextflow:
          $ref: "#/components/schemas/WfNextflow"
        stats:
          $ref: "#/components/schemas/WfStats"
        errorMessage:
          type: string
        errorReport:
          type: string
        deleted:
          type: boolean
        projectDir:
          type: string
        homeDir:
          type: string
        container:
          type: string
        repository:
          type: string
        containerEngine:
          type: string
        scriptFile:
          type: string
        launchDir:
          type: string
        duration:
          type: integer
          format: int64
        exitStatus:
          type: integer
          format: int32
        resume:
          type: boolean
        success:
          type: boolean
      description: |
        Represents a workflow execution record.
        Contains execution status, metadata, and results from pipeline
        runs including logs and performance metrics.
    WorkflowLaunchRequest:
      type: object
      properties:
        id:
          type: string
        computeEnvId:
          type: string
        runName:
          type: string
        pipeline:
          type: string
        workDir:
          type: string
        revision:
          type: string
        sessionId:
          type: string
        configProfiles:
          type: array
          items:
            type: string
        userSecrets:
          type: array
          items:
            type: string
        workspaceSecrets:
          type: array
          items:
            type: string
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        mainScript:
          type: string
        entryName:
          type: string
        schemaName:
          type: string
        resume:
          type: boolean
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        optimizationId:
          type: string
        optimizationTargets:
          type: string
        labelIds:
          type: array
          items:
            type: integer
            format: int64
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        launchContainer:
          type: string
        dateCreated:
          type: string
          format: date-time
      required:
        - pipeline
    WorkflowLaunchResponse:
      type: object
      properties:
        id:
          type: string
        computeEnv:
          $ref: "#/components/schemas/ComputeEnv_ComputeConfig_"
        pipeline:
          type: string
        pipelineId:
          type: integer
          format: int64
        workDir:
          type: string
        revision:
          type: string
        sessionId:
          type: string
        configProfiles:
          type: array
          items:
            type: string
        userSecrets:
          type: array
          items:
            type: string
        workspaceSecrets:
          type: array
          items:
            type: string
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        mainScript:
          type: string
        entryName:
          type: string
        schemaName:
          type: string
        resume:
          type: boolean
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        resumeDir:
          type: string
        resumeCommitId:
          type: string
        headJobMemoryMb:
          type: integer
          format: int32
        headJobCpus:
          type: integer
          format: int32
        optimizationId:
          type: string
        optimizationTargets:
          type: string
        dateCreated:
          type: string
          format: date-time
    WorkflowLoad:
      required:
        - aborted
        - cached
        - cpuLoad
        - cpuTime
        - cpus
        - failed
        - invCtxSwitch
        - loadCpus
        - loadMemory
        - loadTasks
        - memoryReq
        - memoryRss
        - peakCpus
        - peakMemory
        - peakTasks
        - pending
        - readBytes
        - running
        - submitted
        - succeeded
        - volCtxSwitch
        - writeBytes
      type: object
      properties:
        pending:
          type: integer
          format: int64
        submitted:
          type: integer
          format: int64
        running:
          type: integer
          format: int64
        succeeded:
          type: integer
          format: int64
        failed:
          type: integer
          format: int64
        cached:
          type: integer
          format: int64
        aborted:
          type: integer
          format: int64
        memoryEfficiency:
          type: number
          format: float
        cpuEfficiency:
          type: number
          format: float
        cpus:
          type: integer
          format: int64
        cpuTime:
          type: integer
          format: int64
        cpuLoad:
          type: integer
          format: int64
        memoryRss:
          type: integer
          format: int64
        memoryReq:
          type: integer
          format: int64
        readBytes:
          type: integer
          format: int64
        writeBytes:
          type: integer
          format: int64
        volCtxSwitch:
          type: integer
          format: int64
        invCtxSwitch:
          type: integer
          format: int64
        cost:
          type: number
        netCpus:
          type: integer
          format: int64
        netCpuTime:
          type: integer
          format: int64
        netCpuLoad:
          type: integer
          format: int64
        netMemoryRss:
          type: integer
          format: int64
        netMemoryReq:
          type: integer
          format: int64
        netMemoryConsumption:
          type: number
        netReadBytes:
          type: integer
          format: int64
        netWriteBytes:
          type: integer
          format: int64
        netVolCtxSwitch:
          type: integer
          format: int64
        netInvCtxSwitch:
          type: integer
          format: int64
        netCost:
          type: number
        loadTasks:
          type: integer
          format: int64
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakCpus:
          type: integer
          format: int64
        peakTasks:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
        executors:
          type: array
          items:
            type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    WorkflowLogResponse:
      type: object
      properties:
        log:
          $ref: "#/components/schemas/LogPage"
    WorkflowMetrics:
      required:
        - process
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        process:
          maxLength: 255
          type: string
        cpu:
          $ref: "#/components/schemas/ResourceData"
        mem:
          $ref: "#/components/schemas/ResourceData"
        vmem:
          $ref: "#/components/schemas/ResourceData"
        time:
          $ref: "#/components/schemas/ResourceData"
        reads:
          $ref: "#/components/schemas/ResourceData"
        writes:
          $ref: "#/components/schemas/ResourceData"
        cpuUsage:
          $ref: "#/components/schemas/ResourceData"
        memUsage:
          $ref: "#/components/schemas/ResourceData"
        timeUsage:
          $ref: "#/components/schemas/ResourceData"
    WorkflowQueryAttribute:
      type: string
      enum:
        - optimized
        - labels
        - messages
        - minimal
    WorkflowStatus:
      type: string
      enum:
        - SUBMITTED
        - RUNNING
        - SUCCEEDED
        - FAILED
        - CANCELLED
        - UNKNOWN
    Workspace:
      required:
        - fullName
        - name
        - visibility
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          maxLength: 40
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,38}$"
          type: string
        fullName:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        visibility:
          $ref: "#/components/schemas/Visibility"
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    WorkspaceDbDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        fullName:
          type: string
        description:
          type: string
        visibility:
          $ref: "#/components/schemas/Visibility"
      description: |
        Represents a workspace in the Seqera Platform.
        Contains workspace configuration, member permissions, and resource
        isolation settings for project organization.
    WspRole:
      type: string
      enum:
        - owner
        - admin
        - maintain
        - launch
        - connect
        - view
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: jwt
