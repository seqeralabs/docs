openapi: 3.0.1
info:
  title: Seqera API
  description: Seqera Platform services API
  contact:
    url: https://seqera.io
    email: info@seqera.io
  version: 1.66.0
servers:
  - url: https://api.cloud.seqera.io
    description: Seqera Platform Cloud API
tags:
  - name: actions
    description: Pipeline actions
  - name: avatars
    description: Avatars
  - name: compute-envs
    description: Compute environments
  - name: credentials
    description: Credentials
  - name: data-links
    description: Cloud storage directory paths in Data Explorer
  - name: datasets
    description: Pipeline input datasets (samplesheets) in CSV or TSV format
  - name: ga4gh
    description: GA4GH workflow execution service runs
  - name: labels
    description: Labels and resource labels
  - name: launch
    description: Workflow launch events
  - name: orgs
    description: Organizations
  - name: pipelines
    description: Pipelines
  - name: pipeline-secrets
    description: Pipeline secrets in a user or workspace context
  - name: platforms
    description: Computing platforms
  - name: service-info
    description: Seqera Platform API service information
  - name: studios
    description: Studios and Studio sessions
  - name: teams
    description: Teams in an organization context
  - name: tokens
    description: API access tokens
  - name: trace
    description: Workflow execution traces
  - name: users
    description: Users
  - name: workflows
    description: Workflow executions
  - name: workspaces
    description: Workspaces in an organization context
paths:
  /actions:
    get:
      tags:
        - actions
      summary: List actions
      description: "Lists all available actions in a user context, enriched by `attributes`. Append `?workspaceId` to list actions in a workspace context."
      operationId: ListActions
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`). Returns an empty value (`labels: null`) if omitted."
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ActionQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListActionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      tags:
        - actions
      summary: Create action
      description: Creates a new pipeline action. Append `?workspaceId` to associate the action with the given workspace.
      operationId: CreateAction
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Action create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateActionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateActionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/labels/add:
    post:
      tags:
        - labels
      summary: Add labels to actions
      description: Adds the given list of labels to the given pipeline actions. Existing labels are preserved.
      operationId: AddLabelsToActions
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels add request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateActionLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/labels/apply:
    post:
      tags:
        - labels
      summary: Replace action labels
      description: Applies the given list of labels to the given pipeline actions. Existing labels are replaced â€” include labels to be preserved in `labelIds`.
      operationId: ApplyLabelsToActions
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels apply request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateActionLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/labels/remove:
    post:
      tags:
        - labels
      summary: Remove labels from actions
      description: Removes the given list of labels from the given pipeline actions.
      operationId: RemoveLabelsFromActions
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels remove request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateActionLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/types:
    get:
      tags:
        - actions
      summary: List action event types
      description: Lists the supported event types that trigger a pipeline action. Append `?workspaceId` to list event types in a workspace context.
      operationId: ListActionTypes
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEventTypesResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/validate:
    get:
      tags:
        - actions
      summary: Validate action name
      description: Confirms the validity of the given action name. Append `?name=<your_action_name>`.
      operationId: ValidateActionName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Action name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /actions/{actionId}:
    get:
      tags:
        - actions
      summary: Describe action
      description: Retrieves the details of the action identified by the given `actionId`.
      operationId: DescribeAction
      parameters:
        - name: actionId
          in: path
          description: Action string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`). Returns an empty value (`labels: null`) if omitted."
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ActionQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeActionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    put:
      tags:
        - actions
      summary: Update action
      description: Updates the details of the action identified by the given `actionId`. The `source` of an existing action cannot be changed.
      operationId: UpdateAction
      parameters:
        - name: actionId
          in: path
          description: Action string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Action update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateActionRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      tags:
        - actions
      summary: Delete action
      description: Deletes the pipeline action identified by the given `actionId`.
      operationId: DeleteAction
      parameters:
        - name: actionId
          in: path
          description: Action string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/{actionId}/launch:
    post:
      tags:
        - actions
      summary: Trigger Tower Launch action
      description: Triggers the execution of the Tower Launch action identified by the given `actionId`.
      operationId: LaunchAction
      parameters:
        - name: actionId
          in: path
          description: Action string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Action launch request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LaunchActionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LaunchActionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/{actionId}/pause:
    post:
      tags:
        - actions
      summary: Pause or resume action
      description: Pauses or resumes the pipeline action identified by the given `actionId`.
      operationId: PauseAction
      parameters:
        - name: actionId
          in: path
          description: Action string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /avatars:
    post:
      tags:
        - avatars
      summary: Create the avatar image
      operationId: CreateAvatar
      requestBody:
        description: Image file request
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
            encoding:
              image:
                contentType: application/octet-stream
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAvatarResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /avatars/{avatarId}:
    get:
      tags:
        - avatars
      summary: Download the avatar image
      operationId: DownloadAvatar
      parameters:
        - name: avatarId
          in: path
          description: Avatar string identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found element
      security:
        - BearerAuth: []
  /compute-envs:
    get:
      tags:
        - compute-envs
      summary: List compute environments
      description: "Lists all available compute environments in a user context. Append `?workspaceId` to list compute environments in a workspace context, and `?status` to filter by compute environment status."
      operationId: ListComputeEnvs
      parameters:
        - name: status
          in: query
          description: Filter by compute environment status.
          schema:
            type: string
            enum: ["CREATING", "AVAILABLE", "ERRORED", "INVALID", "CREATING", "AVAILABLE", "ERRORED", "INVALID"]
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. If omitted, lists compute environments in a user context.
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListComputeEnvsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      tags:
        - compute-envs
      summary: Create compute environment
      description: Creates a new compute environment. Append `?workspaceId` to create the environment in a workspace context.
      operationId: CreateComputeEnv
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. If omitted, creates compute environment in a user context.
          schema:
            type: integer
            format: int64
      requestBody:
        description: Compute environment create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateComputeEnvRequest"
            examples:
              AwsBatchForge:
                description: "A minimal AWS Batch Forge compute environment with Wave and Fusion enabled."
                value:
                  computeEnv:
                    name: "aws-batch-ce"
                    platform: "aws-batch"
                    credentialsId: "your-aws-credentials-id"
                    description: "Minimal AWS Batch Forge compute environment with Wave, Fusion, and fast instance storage enabled"
                    config:
                      region: "eu-west-2"
                      forge:
                        type: "SPOT"
                        minCpus: "0"
                        maxCpus: "100"
                      workDir: "s3://your-bucket/work"
                      waveEnabled: "true"
                      fusion2Enabled: "true"
                      nvnmeStorageEnabled: "true"
              AwsCloud:
                description: "Minimal AWS Cloud compute environment with default instance type and AMI"
                value:
                  computeEnv:
                    name: "aws-cloud-ce"
                    description: "Minimal AWS Cloud compute environment with default instance type and AMI"
                    platform: "aws-cloud"
                    credentialsId: "your-aws-credentials-id"
                    config:
                      region: "eu-west-2"
                      workDir: "s3://your-bucket/work"
              GoogleBatch:
                description: "Minimal Google Cloud Batch compute environment with Wave and Fusion enabled"
                value:
                  computeEnv:
                    name: "google-batch-ce"
                    description: "Minimal Google Cloud Batch compute environment with Wave and Fusion enabled"
                    platform: "google-batch"
                    credentialsId: "your-google-credentials-id"
                    config:
                      location: "europe-west2"
                      workDir: "gs://your-bucket/work"
                      spot: true
                      waveEnabled: true
                      fusion2Enabled: true
              GoogleCloud:
                description: "Minimal Google Cloud compute environment with default instance type and image ID"
                value:
                  computeEnv:
                    name: "google-cloud-ce"
                    description: "Minimal Google Cloud compute environment with default instance type and image ID"
                    platform: "google-cloud"
                    credentialsId: "your-google-credentials-id"
                    config:
                      region: "europe-west2"
                      workDir: "gs://your-bucket/work"
              AzureBatchForge:
                description: "Minimal Azure Batch Forge compute environment with Wave and Fusion enabled"
                value:
                  computeEnv:
                    name: "azure-batch-ce"
                    description: "Minimal Azure Batch Forge compute environment with Wave and Fusion enabled"
                    platform: "azure-batch"
                    credentialsId: "your-azure-credentials-id"
                    config:
                      region: "eastus"
                      workDir: "az://your-storage-account/work"
                      forge:
                        vmCount: 50
                        autoScale: true
                      waveEnabled: true
                      fusion2Enabled: true
              AwsEks:
                description: "Minimal AWS EKS compute environment with Fusion storage"
                value:
                  computeEnv:
                    name: "aws-eks-ce"
                    description: "Minimal AWS EKS compute environment with Fusion storage"
                    platform: "eks-platform"
                    credentialsId: "your-aws-credentials-id"
                    config:
                      region: "eu-west-2"
                      workDir: "s3://your-bucket/work"
                      clusterName: "your-cluster-name"
                      namespace: "your-namespace"
                      headServiceAccount: "your-service-account"
                      waveEnabled: "true"
                      fusion2Enabled: "true"
              GoogleGke:
                description: "Minimal Google Kubernetes Engine compute environment with Fusion storage"
                value:
                  computeEnv:
                    name: "gke-ce"
                    description: "Minimal Google Kubernetes Engine compute environment with Fusion storage"
                    platform: "gke-platform"
                    credentialsId: "your-google-credentials-id"
                    config:
                      region: "europe-west2"
                      workDir: "gs://your-bucket/work"
                      clusterName: "your-cluster-name"
                      namespace: "your-namespace"
                      headServiceAccount: "your-service-account"
                      waveEnabled: "true"
                      fusion2Enabled: "true"
              Kubernetes:
                description: "Minimal Kubernetes compute environment with persistent volume storage"
                value:
                  computeEnv:
                    name: "k8s-ce"
                    description: "Minimal Kubernetes compute environment with persistent volume storage"
                    platform: "k8s-platform"
                    credentialsId: "your-k8s-credentials-id"
                    config:
                      workDir: "/workspace"
                      server: "https://your-k8s-api-server:6443"
                      sslCert: "-----BEGIN CERTIFICATE-----\nYOUR_CERTIFICATE\n-----END CERTIFICATE-----"
                      namespace: "your-namespace"
                      headServiceAccount: "your-service-account"
                      storageClaimName: "your-storage-claim"
                      storageMountPath: "/workspace"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateComputeEnvResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /compute-envs/validate:
    get:
      tags:
        - compute-envs
      summary: Validate compute environment name
      description: Confirms the validity of the given compute environment name in a user context. Append `?name=<your_ce_name>`.
      operationId: ValidateComputeEnvName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. If omitted, validates compute environment name in a user context.
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Compute environment name to validate for uniqueness and format.
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /compute-envs/{computeEnvId}:
    get:
      tags:
        - compute-envs
      summary: Describe compute environment
      description: Retrieves the details of the compute environment identified by the given `computeEnvId`.
      operationId: DescribeComputeEnv
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment alphanumeric identifier.
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response. Returns `labels: null` if omitted."
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ComputeEnvQueryAttribute"
              type: string
              enum: ["labels", "labels"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeComputeEnvResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    put:
      tags:
        - compute-envs
      summary: Update compute environment
      description: Updates the details of the compute environment identified by the given `computeEnvId`.
      operationId: UpdateComputeEnv
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment alphanumeric identifier.
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
      requestBody:
        description: Compute environment update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateComputeEnvRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    delete:
      tags:
        - compute-envs
      summary: Delete compute environment
      description: Deletes the compute environment identified by the given `computeEnvId`.
      operationId: DeleteComputeEnv
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment alphanumeric identifier.
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Conflicting deletion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /compute-envs/{computeEnvId}/primary:
    post:
      tags:
        - compute-envs
      summary: Define primary compute environment
      description: Selects the compute environment identified by the given `computeEnvId` as the primary compute environment in the given workspace context.
      operationId: UpdateComputeEnvPrimary
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment alphanumeric identifier.
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /credentials:
    get:
      tags:
        - credentials
      summary: List credentials
      description: "Lists all available credentials in a user context. Append `?workspaceId` to list credentials in a workspace context, and `?platformId` to filter credentials by computing platform."
      operationId: ListCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: platformId
          in: query
          description: Platform string identifier
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCredentialsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      tags:
        - credentials
      summary: Create credentials
      description: Creates new credentials in a user context. Append `?workspaceId` to create the credentials in a workspace context.
      operationId: CreateCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Credentials create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCredentialsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCredentialsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /credentials/validate:
    get:
      tags:
        - credentials
      summary: Validate credential name
      description: Validates the given credentials name. Append `?name=<your_credential_name>`.
      operationId: ValidateCredentialsName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Credentials name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /credentials/{credentialsId}:
    get:
      tags:
        - credentials
      summary: Describe credentials
      description: Retrieves the details of the credentials identified by the given `credentialsId`.
      operationId: DescribeCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeCredentialsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    put:
      tags:
        - credentials
      summary: Update credentials
      description: Updates the details of the credentials identified by the given `credentialsId`.
      operationId: UpdateCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Credentials update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCredentialsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      tags:
        - credentials
      summary: Delete credentials
      description: Deletes the credentials identified by the given `credentialsId`.
      operationId: DeleteCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: checked
          in: query
          description: If set credentials deletion will be blocked by running jobs that depend on them
          schema:
            type: boolean
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Running jobs block the deletion of this credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteCredentialsConflictResponse"
      security:
        - BearerAuth: []
  /data-links:
    get:
      tags:
        - data-links
      summary: List data-links
      description: |
        Retrieves all available data-links in a user context. Append `?workspaceId={your-workspace-id}` to retrieve data-links in a workspace context.
      operationId: ListDataLinks
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: search
          in: query
          description: "Free text search criteria â€” data-link name and keywords: `region`, `provider`."
          schema:
            type: string
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: visibility
          in: query
          description: Filter results by visibility
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinksListResponse"
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinksListResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, or the API is disabled in the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      tags:
        - data-links
      summary: Create data-link
      description: Creates a new data-link in a user context. Append `?workspaceId=` to create the data-link in a workspace context.
      operationId: CreateCustomDataLink
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Data-link creation request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkCreateRequest"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDto"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled in the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/cache/refresh:
    get:
      tags:
        - data-links
      summary: Refresh data-link cache
      description: Refreshes the data-link cache for the given `workspaceId` or `credentialsId`. Forces immediate re-discovery of available cloud storage resources.
      operationId: RefreshDataLinkCache
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. If omitted, refreshes cache in a user context.
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials string identifier. Filters cache refresh to data-links accessible with the specified credentials.
          schema:
            type: string
      responses:
        "200":
          description: OK
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}:
    get:
      tags:
        - data-links
      summary: Describe data-link
      description: Retrieves the details of the data-link associated with the given `dataLinkId`, including provider information, credentials, and access status.
      operationId: DescribeDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier.
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. Optional.
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials string identifier. Required for accessing private data-links.
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    put:
      tags:
        - data-links
      summary: Update data-link
      description: Updates the data-link associated with the given `dataLinkId`. Allows modification of name, description, and associated credentials.
      operationId: UpdateCustomDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier.
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. Optional.
          schema:
            type: integer
            format: int64
      requestBody:
        description: Data-link update request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkUpdateRequest"
        required: true
      responses:
        "200":
          description: Success â€” Data-link updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDto"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      tags:
        - data-links
      summary: Delete data-link
      description: Deletes the data-link associated with the given `dataLinkId`. The underlying cloud storage resource is not affected.
      operationId: DeleteCustomDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier.
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. Optional.
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success â€” Data-link deleted
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "204":
          description: DeleteCustomDataLink 204 response
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/browse:
    get:
      tags:
        - data-links
      summary: Explore data-link path
      description: "Retrieves the content of the data-link associated with the given `dataLinkId`, at the given `path`."
      operationId: ExploreDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: path
          in: path
          description: Content path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials string identifier
          schema:
            type: string
        - name: search
          in: query
          description: Prefix search of data-link content
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Token used to fetch the next page of items
          schema:
            type: string
        - name: pageSize
          in: query
          description: "Number of items to return per page. If omitted, a default maximum value is returned."
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkContentResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/browse-tree:
    get:
      tags:
        - data-links
      summary: Explore data-link tree
      description: Retrieves a list of all files in the data-link associated with the given `dataLinkId`, including files in sub-paths. Useful for retrieving complete directory structures.
      operationId: ExploreDataLinkTree
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier.
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. Optional.
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials string identifier. Required for accessing private data-links.
          schema:
            type: string
        - name: paths
          in: query
          description: List of paths to explore. Returns all files within the specified paths, including sub-paths.
          schema:
            type: array
            items:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkContentTreeListResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/browse/{path}:
    get:
      tags:
        - data-links
      summary: Explore data-link path
      description: "Retrieves the content of the data-link associated with the given `dataLinkId`, at the given `path`."
      operationId: ExploreDataLink_1
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: path
          in: path
          description: Content path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials string identifier
          schema:
            type: string
        - name: search
          in: query
          description: Prefix search of data-link content
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Token used to fetch the next page of items
          schema:
            type: string
        - name: pageSize
          in: query
          description: "Number of items to return per page. If ommitted, a default maximum value is returned."
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkContentResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/content:
    delete:
      tags:
        - data-links
      summary: Delete data-link content
      description: Deletes the content of the data-link associated with the given `dataLinkId`. The data-link itself is preserved, but files and directories within it are removed.
      operationId: DeleteDataLinkItem
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier.
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. Optional.
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials string identifier. Required for deleting content from private data-links.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkDeleteItemRequest"
        required: true
        description: "Data-link content deletion request specifying files and directories to delete."
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDeleteItemResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/download:
    get:
      tags:
        - data-links
      summary: Download data-link file at path
      description: Downloads the content at the given `filePath` in the data-link associated with the given `dataLinkId`.
      operationId: DownloadDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: filePath
          in: path
          description: File path to download
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials string identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/generate-download-url:
    get:
      tags:
        - data-links
      summary: Generate download URL
      description: Returns a pre-signed URL to download files from the data-link associated with the given `dataLinkId`. The URL can be used for direct downloads or preview purposes.
      operationId: GenerateDownloadUrlDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier.
          required: true
          schema:
            type: string
        - name: filePath
          in: query
          description: File path to download within the data-link (e.g., `folder/subfolder/object`).
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials string identifier. Required for generating download URLs for private data-links.
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. Optional.
          schema:
            type: integer
            format: int64
        - name: preview
          in: query
          description: "If `true`, generates a URL for preview purposes. If `false`, generates a URL for direct download. Default: `false`."
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDownloadUrlResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/script/download:
    get:
      tags:
        - data-links
      summary: Generate download script
      description: Creates a script to download files from the data-link associated with the given `dataLinkId`. Append `?dirs` or `?files` to specify a list of files or paths to download within the data-link.
      operationId: GenerateDownloadScript
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier.
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. Optional.
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials string identifier. Required for generating download scripts for private data-links.
          schema:
            type: string
        - name: dirs
          in: query
          description: List of directory paths to include in the download script.
          schema:
            type: array
            items:
              type: object
        - name: files
          in: query
          description: List of file paths to include in the download script.
          schema:
            type: array
            items:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDownloadScriptResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload:
    post:
      tags:
        - data-links
      summary: Generate data-link file upload URL (to given path)
      description: |-
        Creates a URL to upload files to the data-link associated with the given `dataLinkId`, specifying a file path (`dirPath`).
        For AWS S3 data-links, an additional follow-up request must be sent after your file upload has completed (or encountered an error) to finalize the upload - see the `/upload/finish` endpoint.
      operationId: GenerateDataLinkUploadUrl
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: dirPath
          in: path
          description: Path to the destination directory
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials string identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: Origin
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkMultiPartUploadRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkMultiPartUploadResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload/finish:
    post:
      tags:
        - data-links
      summary: Finish data-link file upload to given path
      description: "Finish upload of a data-link file, specifying a file path (`dirPath`). This is necessary for AWS S3 data-links (`DataLinkProvider=aws`) to finalize a successful file upload, or abort an upload if an error was encountered while uploading a file using an upload URL from the `/upload` endpoint."
      operationId: FinishDataLinkUpload
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: dirPath
          in: path
          description: Path to the destination directory
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials string identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkFinishMultiPartUploadRequest"
        required: true
      responses:
        "202":
          description: No content
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "200":
          description: FinishDataLinkUpload 200 response
          content:
            application/json:
              schema:
                type: object
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload/finish/{dirPath}:
    post:
      tags:
        - data-links
      summary: Finish data-link file upload to given path
      description: "Finish upload of a data-link file, specifying a file path (`dirPath`). This is necessary for AWS S3 data-links (`DataLinkProvider=aws`) to finalize a successful file upload, or abort an upload if an error was encountered while uploading a file using an upload URL from the `/upload` endpoint."
      operationId: FinishDataLinkUpload_1
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: dirPath
          in: path
          description: Path to the destination directory
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials string identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkFinishMultiPartUploadRequest"
        required: true
      responses:
        "202":
          description: No content
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "200":
          description: FinishDataLinkUpload_1 200 response
          content:
            application/json:
              schema:
                type: object
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload/{dirPath}:
    post:
      tags:
        - data-links
      summary: Generate data-link file upload URL (to given path)
      description: |-
        Creates a URL to upload files to the data-link associated with the given `dataLinkId`, specifying a file path (`dirPath`).
        For AWS S3 data-links, an additional follow-up request must be sent after your file upload has completed (or encountered an error) to finalize the upload - see the `/upload/finish` endpoint.
      operationId: GenerateDataLinkUploadUrl_1
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: dirPath
          in: path
          description: Path to the destination directory
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials string identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: Origin
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkMultiPartUploadRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkMultiPartUploadResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /datasets:
    get:
      tags:
        - datasets
      summary: List datasets
      description: Lists all available datasets in a user context. Append `?workspaceId` to list datasets in a workspace context. Results can be filtered by search query, sorted, and paginated.
      operationId: ListDatasetsV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. If omitted, lists datasets in a user context.
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      tags:
        - datasets
      summary: Create dataset
      description: Creates a new dataset in the user context. Include the dataset name and description in your request body. Append `?workspaceId` to create the dataset in a workspace context.
      operationId: CreateDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. If omitted, creates dataset in a user context.
          schema:
            type: integer
            format: int64
      requestBody:
        description: Dataset create request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasetRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDatasetResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /datasets/versions:
    get:
      tags:
        - datasets
      summary: List latest dataset versions
      description: Lists the latest version of each dataset in the user context. Append `?workspaceId` to list latest versions in a workspace context. Filter by MIME type and search query.
      operationId: ListLatestDatasetVersionsV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. If omitted, lists dataset versions in a user context.
          schema:
            type: integer
            format: int64
        - name: mimeType
          in: query
          description: Dataset MIME type filter (e.g., `text/csv`, `text/tab-separated-values`).
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /datasets/{datasetId}:
    put:
      tags:
        - datasets
      summary: Update dataset
      description: Updates the name and description of the dataset identified by the given `datasetId`.
      operationId: UpdateDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier.
          required: true
          schema:
            type: string
      requestBody:
        description: Dataset update request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDatasetRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    delete:
      tags:
        - datasets
      summary: Delete dataset
      description: Deletes the dataset identified by the given `datasetId`, including all associated versions.
      operationId: DeleteDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier.
          required: true
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /datasets/{datasetId}/metadata:
    get:
      tags:
        - datasets
      summary: Describe dataset
      description: Retrieves the metadata of the dataset identified by the given `datasetId`. Append `?attributes=labels` to include label information in response.
      operationId: DescribeDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDatasetResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /datasets/{datasetId}/upload:
    post:
      tags:
        - datasets
      summary: Upload new dataset version
      description: Uploads CSV or TSV content to create a new version of the dataset identified by the given `datasetId`. Each upload increments the version number.
      operationId: UploadDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier.
          required: true
          schema:
            type: string
        - name: header
          in: query
          description: 'Indicates whether the uploaded file contains a header row. Default: `true`.'
          schema:
            type: boolean
      requestBody:
        description: Dataset file request
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MultiRequestFileSchema"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadDatasetVersionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /datasets/{datasetId}/v/{version}/n/{fileName}:
    get:
      tags:
        - datasets
      summary: Download dataset content
      description: Downloads the content of the dataset version identified by the given `datasetId` and `version`. The `fileName` must match the original uploaded filename.
      operationId: DownloadDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier.
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: Dataset version number.
          required: true
          schema:
            type: string
        - name: fileName
          in: path
          description: File name for the downloaded dataset content. Must match the original uploaded filename.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /datasets/{datasetId}/versions:
    get:
      tags:
        - datasets
      summary: List all dataset versions
      description: Lists all versions of the dataset identified by the given `datasetId`. Filter by MIME type to retrieve specific file format versions.
      operationId: ListDatasetVersionsV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier.
          required: true
          schema:
            type: string
        - name: mimeType
          in: query
          description: Optional MIME type filter (e.g., `text/csv`, `text/tab-separated-values`).
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /ga4gh/wes/v1/runs:
    get:
      tags:
        - ga4gh
      summary: "GA4GH: List runs"
      description: Uses the GA4GH workflow execution service API to list all run records.
      operationId: Ga4ghRunList
      parameters:
        - name: page_size
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: page_token
          in: query
          description: Page token
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunListResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
    post:
      tags:
        - ga4gh
      summary: "GA4GH: Launch run"
      description: "Uses the GA4GH workflow execution service API to launch a new run. Runs are launched in the user workspace context by default. To launch in an organization workspace context, include the `workspaceId` in `workflow_engine_parameters`. Runs are launched with the workspace primary compute environment by default. To launch with a different compute environment, include the `computeEnvId` in `workflow_engine_parameters`."
      operationId: Ga4ghRunCreate
      requestBody:
        description: Run request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RunRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunId"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/runs/{run_id}:
    get:
      tags:
        - ga4gh
      summary: "GA4GH: Describe run"
      description: Uses the GA4GH workflow execution service API to retrieve the details of the run assoiated with the given `run_id`.
      operationId: Ga4ghRunDescribe
      parameters:
        - name: run_id
          in: path
          description: Run string identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunLog"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/runs/{run_id}/cancel:
    post:
      tags:
        - ga4gh
      summary: "GA4GH: Cancel run"
      description: Uses the GA4GH workflow execution service API to cancel the run associated with the given `run_id`.
      operationId: Ga4ghRunCancel
      parameters:
        - name: run_id
          in: path
          description: Run string identifier
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunId"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/runs/{run_id}/status:
    get:
      tags:
        - ga4gh
      summary: "GA4GH: Retrieve run status"
      description: Uses the GA4GH workflow execution service API to retrieve the status of the run associated with the given `run_id`.
      operationId: Ga4ghRunStatus
      parameters:
        - name: run_id
          in: path
          description: Run string identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunStatus"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/service-info:
    get:
      tags:
        - ga4gh
      summary: GA4GH workflow execution service API info
      operationId: Ga4ghServiceInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceInfo"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
  /identities:
    get:
      tags:
        - identities
      summary: List managed identities
      description: Lists all available managed identities in an organization context. To list the managed identities for an organization other than the requester's default, append an `?orgId`. Only organizations accessible to the requester's access token can be queried.
      operationId: ListManagedIdentities
      parameters:
        - name: orgId
          in: query
          description: Organization numeric identifier. Append to list managed identities within an organization other than the requester's default.
          schema:
            type: integer
            format: int64
        - name: search
          in: query
          description: "Filter search parameter. Supports free text search on name and keywords: `platform:`."
          schema:
            type: string
            nullable: true
        - name: max
          in: query
          description: 'Maximum number of results to return. Default: `20`.'
          schema:
            type: integer
            format: int32
            nullable: true
        - name: offset
          in: query
          description: 'Number of results to skip for pagination. Default: `0`.'
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListManagedIdentitiesResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      tags:
        - identities
      summary: Create managed identity
      description: Creates a new managed identity in an organization context. Managed identities enable centralized credential management for HPC environments.
      operationId: CreateManagedIdentity
      parameters:
        - name: orgId
          in: query
          description: Organization numeric identifier. Append to create managed identity within an organization other than the requester's default.
          schema:
            type: integer
            format: int64
      requestBody:
        description: Managed identity create request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateManagedIdentityRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateManagedIdentityResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /identities/{managedIdentityId}:
    get:
      tags:
        - identities
      summary: Describe managed identity
      description: Retrieves the details of the managed identity associated with the given `managedIdentityId`.
      operationId: DescribeManagedIdentity
      parameters:
        - name: managedIdentityId
          in: path
          description: Managed identity numeric identifier.
          required: true
          schema:
            type: integer
            format: int64
        - name: orgId
          in: query
          description: Organization numeric identifier.
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateManagedIdentityResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    put:
      tags:
        - identities
      summary: Update managed identity
      description: Updates the details of the managed identity associated with the given `managedIdentityId`.
      operationId: UpdateManagedIdentity
      parameters:
        - name: orgId
          in: query
          description: Organization numeric identifier.
          schema:
            type: integer
            format: int64
        - name: managedIdentityId
          in: path
          description: Managed identity numeric identifier.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Managed identity update request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateManagedIdentityRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      tags:
        - identities
      summary: Delete managed identity
      description: Deletes the managed identity associated with the given `managedIdentityId`. To optionally check whether the deletion will be blocked by running jobs that depend on associated managed credentials, append `?checked=true`.
      operationId: DeleteManagedIdentity
      parameters:
        - name: managedIdentityId
          in: path
          description: Managed identity numeric identifier.
          required: true
          schema:
            type: integer
            format: int64
        - name: orgId
          in: query
          description: Organization numeric identifier.
          schema:
            type: integer
            format: int64
        - name: checked
          in: query
          description: 'If `true`, deletion is blocked if running jobs depend on associated managed credentials. Default: `false`.'
          schema:
            type: boolean
            nullable: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Running jobs block the deletion of this Managed Identity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteManagedCredentialsConflictResponse"
      security:
        - BearerAuth: []
  /identities/{managedIdentityId}/credentials:
    get:
      tags:
        - identities
      summary: List managed credentials
      description: Lists all managed credentials associated with the given `managedIdentityId`. Filter by user with `?userId`.
      operationId: ListManagedCredentials
      parameters:
        - name: managedIdentityId
          in: path
          description: Managed identity numeric identifier.
          required: true
          schema:
            type: integer
            format: int64
        - name: orgId
          in: query
          description: Organization numeric identifier.
          schema:
            type: integer
            format: int64
        - name: userId
          in: query
          description: User numeric identifier. Filter managed credentials by specific user.
          schema:
            type: integer
            format: int64
            nullable: true
        - name: search
          in: query
          description: "Filter search parameter. Supports free text search on `userName`, `firstName + lastName`, and keywords: `is:missing`, `is:added`."
          schema:
            type: string
        - name: max
          in: query
          description: 'Maximum number of results to return. Default: `20`.'
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: 'Number of results to skip for pagination. Default: `0`.'
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListManagedCredentialsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      tags:
        - identities
      summary: Create managed credentials
      description: Creates new managed credentials for the given `managedIdentityId`. To associate the credentials with a user other than the requester, append the `?userId`.
      operationId: CreateManagedCredentials
      parameters:
        - name: managedIdentityId
          in: path
          description: Managed identity numeric identifier.
          required: true
          schema:
            type: integer
            format: int64
        - name: orgId
          in: query
          description: Organization numeric identifier.
          schema:
            type: integer
            format: int64
        - name: userId
          in: query
          description: User numeric identifier. Append to associate managed credentials with a user other than the requester.
          schema:
            type: integer
            format: int64
            nullable: true
      requestBody:
        description: Managed credentials create request, including provider type and authentication details.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateManagedCredentialsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateManagedCredentialsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /identities/{managedIdentityId}/credentials/{managedCredentialsId}:
    put:
      tags:
        - identities
      summary: Update managed credentials
      description: Updates the managed credentials identified by the given `managedCredentialsId` within the given `managedIdentityId`.
      operationId: UpdateManagedCredentials
      parameters:
        - name: managedIdentityId
          in: path
          description: Managed identity numeric identifier.
          required: true
          schema:
            type: integer
            format: int64
        - name: managedCredentialsId
          in: path
          description: Managed credentials numeric identifier.
          required: true
          schema:
            type: integer
            format: int64
        - name: orgId
          in: query
          description: Organization numeric identifier.
          schema:
            type: integer
            format: int64
      requestBody:
        description: Managed credentials update request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateManagedCredentialsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      tags:
        - identities
      summary: Delete managed credentials
      description: Deletes the managed credentials identified by the given `managedCredentialsId` from the associated `managedIdentityId`. To optionally check whether the deletion will be blocked by running jobs that depend on the managed credentials, append `?checked=true`.
      operationId: DeleteManagedCredentials
      parameters:
        - name: managedIdentityId
          in: path
          description: Managed identity numeric identifier.
          required: true
          schema:
            type: integer
            format: int64
        - name: managedCredentialsId
          in: path
          description: Managed credentials numeric identifier.
          required: true
          schema:
            type: integer
            format: int64
            nullable: true
        - name: orgId
          in: query
          description: Organization numeric identifier.
          schema:
            type: integer
            format: int64
        - name: checked
          in: query
          description: 'If `true`, deletion is blocked if running jobs depend on the given managed credentials. Default: `false`.'
          schema:
            type: boolean
            nullable: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Running jobs block the deletion of this Managed Credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteManagedCredentialsConflictResponse"
      security:
        - BearerAuth: []
  /labels:
    get:
      tags:
        - labels
      summary: List labels
      description: Lists all available labels in a user context. Append `?workspaceId` to list labels in a workspace context.
      operationId: ListLabels
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
        - name: type
          in: query
          description: Label type
          schema:
            $ref: "#/components/schemas/LabelType"
        - name: isDefault
          in: query
          description: Label default flag
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLabelsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      tags:
        - labels
      summary: Create label
      description: "Creates a new label or returns an existing label based on name/value. By default the operation works in a user context, append `?workspaceId` to create/retrieve a label in a workspace context. Resource labels include `resource: true` and a `value`."
      operationId: CreateLabel
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: "Provide a label `name`. Set `resource: true` for resource labels. Only resource labels have a `value` â€” if `resource: true`, include a `value`. Else, omit `value` from your request body."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLabelRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLabelResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /labels/dynamic/allowed:
    get:
      tags:
        - labels
      operationId: GetAllowedDynamicLabels
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllowedDynamicLabelsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /labels/{labelId}:
    put:
      tags:
        - labels
      summary: Update label
      description: Updates the label identified by the given `labelId`.
      operationId: UpdateLabel
      parameters:
        - name: labelId
          in: path
          description: Label numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Label update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLabelRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLabelResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      tags:
        - labels
      summary: Delete label
      description: Deletes the label identified by the given `labelId`.
      operationId: DeleteLabel
      parameters:
        - name: labelId
          in: path
          description: Label numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /launch/{launchId}:
    get:
      tags:
        - launch
      summary: Describe Launch record
      description: Retrieves the details of the launch identified by the given `launchId`.
      operationId: DescribeLaunch
      parameters:
        - name: launchId
          in: path
          description: Launch string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLaunchResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /launch/{launchId}/datasets:
    get:
      tags:
        - datasets
      summary: Describe launch datasets
      description: Retrieves the details of the datasets used in the launch identified by the given `launchId`.
      operationId: ListLaunchDatasetVersions
      parameters:
        - name: launchId
          in: path
          description: Launch string identifier.
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLaunchResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs:
    get:
      tags:
        - orgs
      summary: List organizations
      description: Lists all available organizations in a user context.
      operationId: ListOrganizations
      parameters:
        - name: role
          in: query
          description: Organization user role identifier
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrganizationsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      tags:
        - orgs
      summary: Create organization
      description: Creates a new organization.
      operationId: CreateOrganization
      requestBody:
        description: Organization create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrganizationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrganizationResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/validate:
    get:
      tags:
        - orgs
      summary: Validate organization name
      description: Confirms the validity of the given organization name. Append `?name=<your_org_name>`.
      operationId: ValidateOrganizationName
      parameters:
        - name: name
          in: query
          description: Organization name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}:
    get:
      tags:
        - orgs
      summary: Describe organization
      description: Retrieves the details of the organization identified by the given `orgId`.
      operationId: DescribeOrganization
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOrganizationResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    put:
      tags:
        - orgs
      summary: Update organization
      description: Updates the details of the organization identified by the given `orgId`.
      operationId: UpdateOrganization
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Organization update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrganizationRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    delete:
      tags:
        - orgs
      summary: Delete organization
      description: Deletes the organization identified by the given `orgId`.
      operationId: DeleteOrganization
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/collaborators:
    get:
      tags:
        - orgs
      summary: List organization collaborators
      description: Lists the collaborators of the organization identified by the given `orgId`.
      operationId: ListOrganizationCollaborators
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMembersResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/members:
    get:
      tags:
        - orgs
      summary: List organization members
      description: Lists the members of the organization identified by the given `orgId`.
      operationId: ListOrganizationMembers
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMembersResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/add:
    put:
      tags:
        - orgs
      summary: Add organization member
      description: Adds a new member to the organization identified by the given `orgId`.
      operationId: CreateOrganizationMember
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Member addition request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddMemberRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddMemberResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/leave:
    delete:
      tags:
        - orgs
      summary: Leave organization
      description: Removes the requesting user from the organization identified by the given `orgId`.
      operationId: LeaveOrganization
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/{memberId}:
    delete:
      tags:
        - orgs
      summary: Delete member
      description: Deletes the member identified by the given `memberId`.
      operationId: DeleteOrganizationMember
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: memberId
          in: path
          description: Organization member numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/{memberId}/role:
    put:
      tags:
        - orgs
      summary: Update member role
      description: Updates the role of the member identified by the given `memberId`.
      operationId: UpdateOrganizationMemberRole
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: memberId
          in: path
          description: Organization member numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Member role update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMemberRoleRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/quotas:
    get:
      tags:
        - orgs
      summary: Describe organization quotas
      description: Retrieves the details of the organization quotas identified by the given `orgId`.
      operationId: DescribeOrganizationQuotas
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: include
          in: query
          description: Optional list of quota names to include
          schema:
            type: array
            items:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOrganizationQuotasResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams:
    get:
      tags:
        - teams
      summary: List organization teams
      description: Lists all teams in the organization identified by the given `orgId`.
      operationId: ListOrganizationTeams
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTeamResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      tags:
        - teams
      summary: Create team
      description: Creates a new team in the organization identified by the given `orgId`.
      operationId: CreateOrganizationTeam
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Team create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTeamRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTeamResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/validate:
    get:
      tags:
        - teams
      summary: Validate team name
      description: Confirms the validity of the given team name. Append `?name=<your_team_name>`.
      operationId: ValidateTeamName
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Team name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}:
    get:
      tags:
        - teams
      summary: Describe team
      description: Retrieves the details of the team identified by the given `teamId`.
      operationId: DescribeOrganizationTeam
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTeamResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    put:
      tags:
        - teams
      summary: Update team
      description: Updates the details of the team identified by the given `teamId`.
      operationId: UpdateOrganizationTeam
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Team update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTeamRequest"
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "204":
          description: UpdateOrganizationTeam 204 response
      security:
        - BearerAuth: []
    delete:
      tags:
        - teams
      summary: Delete team
      description: Deletes the team identified by the given `teamId`.
      operationId: DeleteOrganizationTeam
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}/members:
    get:
      tags:
        - teams
      summary: List team members
      description: Lists the team members associated with the given `teamId`.
      operationId: ListOrganizationTeamMembers
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          schema:
            type: string
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMembersResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      tags:
        - teams
      summary: Create team member
      description: Adds a new member to the team identified by the given `teamId`.
      operationId: CreateOrganizationTeamMember
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Team create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTeamMemberRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddTeamMemberResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}/members/{memberId}/delete:
    delete:
      tags:
        - teams
      summary: Delete team member
      description: Deletes the team member identified by the given `memberId`.
      operationId: DeleteOrganizationTeamMember
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: memberId
          in: path
          description: Member numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}/workspaces:
    get:
      tags:
        - teams
      summary: List team workspaces
      description: Lists all the workspaces of which the given `teamId` is a participant.
      operationId: ListWorkspacesByTeam
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Search criteria
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkspacesResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces:
    get:
      tags:
        - workspaces
      summary: List organization workspaces
      description: Lists the organization workspaces in `orgId` to which the requesting user belongs.
      operationId: ListWorkspaces
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkspacesResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      tags:
        - workspaces
      summary: Create workspace
      description: Creates a new organization workspace.
      operationId: CreateWorkspace
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Workspace create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWorkspaceRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkspaceResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/validate:
    get:
      tags:
        - workspaces
      summary: Validate workspace name
      description: Confirms the validity of the given workspace name within the organization identified by the given `orgId`. Append `?name=<your_workspace_name>`.
      operationId: ValidateWorkspaceName
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Workspace name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}:
    get:
      tags:
        - workspaces
      summary: Describe workspace
      description: Retrieves the details of the workspace identified by the given `workspaceId`.
      operationId: DescribeWorkspace
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkspaceResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    put:
      tags:
        - workspaces
      summary: Update workspace
      description: Updates the details of the workspace identified by the given `workspaceId`.
      operationId: UpdateWorkspace
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Workspace update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkspaceRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkspaceResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Duplicate name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      tags:
        - workspaces
      summary: Delete workspace
      description: Deletes the workspace identified by the given `workspaceId`.
      operationId: DeleteWorkspace
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants:
    get:
      tags:
        - workspaces
      summary: List workspace participants
      description: Lists the participants of the workspace identified by the given `workspaceId`.
      operationId: ListWorkspaceParticipants
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListParticipantsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      tags:
        - workspaces
      summary: Leave workspace
      description: Removes the requesting user from the given workspace.
      operationId: LeaveWorkspaceParticipant
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants/add:
    put:
      tags:
        - workspaces
      summary: Create workspace participant
      description: Adds a new participant to the workspace identified by the given `workspaceId`.
      operationId: CreateWorkspaceParticipant
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Participant addition request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddParticipantRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddParticipantResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants/{participantId}:
    delete:
      tags:
        - workspaces
      summary: Delete workspace participant
      description: Deletes the given participant from the given workspace.
      operationId: DeleteWorkspaceParticipant
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: participantId
          in: path
          description: Participant numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants/{participantId}/role:
    put:
      tags:
        - workspaces
      summary: Update participant role
      description: Updates the role of the given participant in the given workspace.
      operationId: UpdateWorkspaceParticipantRole
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: participantId
          in: path
          description: Participant numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Participant role update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateParticipantRoleRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/settings/studios:
    get:
      tags:
        - workspaces
      summary: List workspace Studios settings
      description: Retrieves the Studios settings of the workspace identified by the given `workspaceId`.
      operationId: FindDataStudiosWorkspaceSettings
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Workspace update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkspaceRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioWorkspaceSettingsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    put:
      tags:
        - workspaces
      summary: Update workspace Studios settings
      description: Updates the Studios settings of the workspace identified by the given `workspaceId`.
      operationId: UpdateDataStudiosWorkspaceSettings
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Workspace update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkspaceRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: UpdateDataStudiosWorkspaceSettings 200 response
          content:
            application/json:
              schema:
                type: object
      security:
        - BearerAuth: []
  /pipeline-secrets:
    get:
      tags:
        - pipeline-secrets
      summary: List pipeline secrets
      description: Lists all available pipeline secrets in a user context. Append `?workspaceId` to list secrets in a workspace context.
      operationId: ListPipelineSecrets
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPipelineSecretsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      tags:
        - pipeline-secrets
      summary: Create pipeline secret
      description: Creates a new pipeline secret in the user context. Append `?workspaceId` to create the secret in a workspace context.
      operationId: CreatePipelineSecret
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Pipeline secret create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePipelineSecretRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePipelineSecretResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipeline-secrets/validate:
    get:
      tags:
        - pipeline-secrets
      summary: Validate secret name
      description: Confirms the validity of the given pipeline secret name in a user context. Append `?name=<your_secret_name>`. Append `?workspaceId` to validate the name in a workspace context.
      operationId: ValidatePipelineSecretName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Secret name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /pipeline-secrets/{secretId}:
    get:
      tags:
        - pipeline-secrets
      summary: Describe pipeline secret
      description: Retrieves the details of the pipeline secret identified by the given `secretId`.
      operationId: DescribePipelineSecret
      parameters:
        - name: secretId
          in: path
          description: Secret numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePipelineSecretResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    put:
      tags:
        - pipeline-secrets
      summary: Update secret
      description: Updates the pipeline secret identified by the given `secretId`.
      operationId: UpdatePipelineSecret
      parameters:
        - name: secretId
          in: path
          description: Secret numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Secret update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePipelineSecretRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      tags:
        - pipeline-secrets
      summary: Delete secret
      description: Deletes the pipeline secret identified by the given `secretId`.
      operationId: DeletePipelineSecret
      parameters:
        - name: secretId
          in: path
          description: Secret numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines:
    get:
      tags:
        - pipelines
      summary: List pipelines
      description: "Lists all available pipelines in a user context, enriched by `attributes`. Append `workspaceId` to list pipelines in a workspace context."
      operationId: ListPipelines
      parameters:
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`, `optimized` status, `computeEnv`). Returns an empty value (`labels: null`, etc.) if omitted."
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PipelineQueryAttribute"
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: 'Maximum number of pipelines to return per request.'
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: 'Number of results to skip for pagination. Default: `0`.'
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Free-text search filter to match against pipeline names and descriptions.
          schema:
            type: string
        - name: visibility
          in: query
          description: 'Filter pipelines by visibility. Accepts `private`, `shared`, or `all`.'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPipelinesResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      tags:
        - pipelines
      summary: Create pipeline
      description: Creates a new pipeline in a user context. Append `?workspaceId` to create the pipeline in a workspace context.
      operationId: CreatePipeline
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. If omitted, creates pipeline in a user context.
          schema:
            type: integer
            format: int64
      requestBody:
        description: Pipeline creation request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePipelineRequest"
            examples:
              BasicPipelineCreation:
                summary: "Create a pipeline with nf-core/rnaseq"
                description: "Minimal pipeline creation request using nf-core/rnaseq with the `test_full` configuration profile."
                value:
                  name: "rnaseq-pipeline"
                  description: "Minimal nf-core/rnaseq pipeline configuration with the `test_full` profile."
                  launch:
                    pipeline: "https://github.com/nf-core/rnaseq"
                    computeEnvId: "your-compute-env-id"
                    revision: "master"
                    configProfiles:
                      - "test_full"
                    labelIds:
                      - "label_id_1"
                      - "label_id_2"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePipelineResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /pipelines/info:
    get:
      tags:
        - pipelines
      summary: Describe remote pipeline repository
      description: Retrieves the details of a remote Nextflow pipeline Git repository. Append the repository name or full URL with `?name`.
      operationId: DescribePipelineRepository
      parameters:
        - name: name
          in: query
          description: Pipeline repository name (e.g., `nextflow-io/hello`) or full URL.
          schema:
            type: string
        - name: revision
          in: query
          description: 'Git revision, branch, or tag to describe. Default: repository default branch.'
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. If omitted, describes pipeline in a user context.
          schema:
            type: integer
            format: int64
        - name: mainScript
          in: query
          description: 'Alternative main script filename. Default: `main.nf`.'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePipelineInfoResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/labels/add:
    post:
      tags:
        - labels
      summary: Add labels to pipelines
      description: Adds the given list of labels to the given pipelines. Existing labels are preserved.
      operationId: AddLabelsToPipelines
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels add request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociatePipelineLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/labels/apply:
    post:
      tags:
        - labels
      summary: Replace pipeline labels
      description: Applies the given list of labels to the given pipelines. Existing labels are replaced â€” include labels to be preserved in `labelIds`.
      operationId: ApplyLabelsToPipelines
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels apply request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociatePipelineLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/labels/remove:
    post:
      tags:
        - labels
      summary: Remove labels from pipelines
      description: Removes the given list of labels from the given pipelines.
      operationId: RemoveLabelsFromPipelines
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels remove request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociatePipelineLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/repositories:
    get:
      tags:
        - pipelines
      summary: List user pipeline repositories
      description: "Lists known Nextflow pipeline Git repositories, extracted from existing runs. Append `?workspaceId` to list repositories in a workspace context."
      operationId: ListPipelineRepositories
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. If omitted, lists repositories in a user context.
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPipelineInfoResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/validate:
    get:
      tags:
        - pipelines
      summary: Validate pipeline name
      description: Confirms the validity of the given pipeline `name` in a user context. Append `?name=<your_pipeline_name>`. Append `?workspaceId` to validate the name in a workspace context.
      operationId: ValidatePipelineName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier. If omitted, validates pipeline name in a user context.
          schema:
            type: integer
            format: int64
        - name: orgId
          in: query
          description: Organization numeric identifier. Used for organization-level validation.
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Pipeline name to validate for uniqueness and format.
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /pipelines/{pipelineId}:
    get:
      tags:
        - pipelines
      summary: Describe pipeline
      description: "Retrieves the details of the pipeline identified by the given `pipelineId`, enriched by `attributes`."
      operationId: DescribePipeline
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline numeric identifier.
          required: true
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`, `optimized` status, `computeEnv`). Returns empty values if omitted."
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PipelineQueryAttribute"
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
        - name: sourceWorkspaceId
          in: query
          description: Source workspace numeric identifier. Used when accessing a shared pipeline from another workspace.
          required: false
          schema:
            type: integer
            format: int64
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePipelineResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    put:
      tags:
        - pipelines
      summary: Update pipeline
      description: "Updates the details of the pipeline identified by the given `pipelineId`.\n\n**Note**: If `labelIds` is `null`, empty, or omitted, existing pipeline labels are removed. Include `labelIds: [<label-id-1>,<label-id-2>]` to override existing labels. Labels to be preserved must be included. To append a list of labels to multiple pipelines, use `/pipelines/labels/add`."
      operationId: UpdatePipeline
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline numeric identifier.
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
      requestBody:
        description: Pipeline update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePipelineRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePipelineResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    delete:
      tags:
        - pipelines
      summary: Delete pipeline
      description: Deletes the pipeline identified by the given `pipelineId`.
      operationId: DeletePipeline
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline numeric identifier.
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/{pipelineId}/launch:
    get:
      tags:
        - pipelines
      summary: Describe pipeline launch
      description: Retrieves the launch details of the pipeline identified by the given `pipelineId`.
      operationId: DescribePipelineLaunch
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline numeric identifier.
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
        - name: sourceWorkspaceId
          in: query
          description: Source workspace numeric identifier. Used when accessing a shared pipeline from another workspace.
          required: false
          schema:
            type: integer
            format: int64
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLaunchResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/{pipelineId}/schema:
    get:
      tags:
        - pipelines
      summary: Describe pipeline schema
      description: "Retrieves the pipeline schema of the pipeline identified by the given `pipelineId`, enriched by `attributes`.\n            `200 - OK` responses include the pipeline schema.\n            `204 - OK` responses indicate a successful request, with no saved schema found for the given pipeline ID.\n            "
      operationId: DescribePipelineSchema
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline numeric identifier.
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier.
          schema:
            type: integer
            format: int64
        - name: sourceWorkspaceId
          in: query
          description: Source workspace numeric identifier. Used when accessing a shared pipeline from another workspace.
          required: false
          schema:
            type: integer
            format: int64
            nullable: true
        - name: attributes
          in: query
          description: "Attribute values to include in the response. `schema` returns the pipeline schema, `params` returns the pipeline config. Returns all if omitted."
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PipelineSchemaAttributes"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PipelineSchemaResponse"
        "204":
          description: Request OK - No schema found for given pipeline ID
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /platforms:
    get:
      tags:
        - platforms
      summary: List platforms
      description: Lists all available computing platforms in a user context. Append `?workspaceId` to list platforms in a workspace context.
      operationId: ListPlatforms
      parameters:
        - name: orgId
          in: query
          description: Organization numeric identifier
          required: false
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPlatformsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /platforms/{platformId}:
    get:
      tags:
        - platforms
      summary: Describe platform
      description: Retrieves the details of the computing platform identified by the given `platformId`.
      operationId: DescribePlatform
      parameters:
        - name: platformId
          in: path
          description: Platform string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: regionId
          in: query
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePlatformResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /platforms/{platformId}/regions:
    get:
      tags:
        - platforms
      summary: List platform regions
      description: Lists the available regions for the computing platform identified by the given `platformId`.
      operationId: ListPlatformRegions
      parameters:
        - name: platformId
          in: path
          description: Platform string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRegionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /service-info:
    get:
      tags:
        - service-info
      summary: General Seqera service features and version.
      operationId: Info
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceInfoResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /studios:
    get:
      tags:
        - studios
      summary: List Studios
      description: Lists all available Studios in a user context. Append `?workspaceId` to list Studios in a workspace context.
      operationId: ListDataStudios
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: search
          in: query
          description: "Optional search criteria, allowing free text search on name and templateUrl and keywords: `userId`, `computeEnvId` and `status`."
          schema:
            type: string
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: attributes
          in: query
          description: "Optional attribute values to be included in the response (`labels`). Returns an empty value (`labels: null`) if omitted."
          schema:
            type: array
            items:
              $ref: "#/components/schemas/DataStudioQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioListResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the workspace is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed.
      security:
        - BearerAuth: []
    post:
      tags:
        - studios
      summary: Create Studio
      description: "Creates a new Studio environment, starting it by default. Default behavior can be changed using the query parameter `autoStart=false`."
      operationId: CreateDataStudio
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: autoStart
          in: query
          description: Optionally disable the Studio's automatic launch when it is created.
          schema:
            type: boolean
      requestBody:
        description: Create Studio request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataStudioCreateRequest"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCreateResponse"
        "404":
          description: "NotFound, when the workspace or compute environment is not found or when the API is disabled."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict - duplicated name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed.
        "200":
          description: CreateDataStudio 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCreateResponse"
      security:
        - BearerAuth: []
  /studios/data-links:
    get:
      tags:
        - studios
      summary: List mounted data-links
      description: "Lists the IDs of all available data-links mounted in existing Studios. Append `orgId` or `?workspaceId` to list mounted data-links in an organization or workspace context, respectively."
      operationId: ListMountedDataLinkIds
      parameters:
        - name: orgId
          in: query
          description: Organization numeric identifier
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          description: Optional Studio status
          schema:
            type: string
        - name: exclude
          in: query
          description: Optional Studio session ID to exclude in the request.
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioMountedLinksResponse"
        "403":
          description: Operation not allowed.
      security:
        - BearerAuth: []
  /studios/templates:
    get:
      tags:
        - studios
      summary: List available Studio templates
      description: "Returns the list of available, configured Studio templates."
      operationId: ListDataStudioTemplates
      parameters:
        - name: workspaceId
          in: query
          description: Workspace identifier
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Ok - paginated list of available Studio templates.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioTemplatesListResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed.
      security:
        - BearerAuth: []
  /studios/validate:
    get:
      tags:
        - studios
      summary: Validate Studio name
      description: Confirms the availability of the given name for a Studio in the user context. Append `?workspaceId=` to validate the name in a workspace context.
      operationId: ValidateDataStudioName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Studio name to validate
          schema:
            type: string
      responses:
        "204":
          description: "Ok - No content, if the name is valid and available."
        "400":
          description: "Bad request, if the name is not valid."
        "409":
          description: "Conflict, name duplicated in the given context."
        "403":
          description: Operation not allowed.
      security:
        - BearerAuth: []
  /studios/{sessionId}:
    get:
      tags:
        - studios
      summary: Describe Studio
      description: Retrieves the details of the Studio session identified by the given `sessionId`.
      operationId: DescribeDataStudio
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioDto"
        "202":
          description: "Accepted, when the Studio is fetching mounted data links in the background."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioDto"
        "404":
          description: "NotFound, when the Studio is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed.
      security:
        - BearerAuth: []
    delete:
      tags:
        - studios
      summary: Delete Studio
      description: Deletes the Studio associated with the given Studio session ID.
      operationId: DeleteDataStudio
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "404":
          description: "NotFound, when the Studio is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed.
      security:
        - BearerAuth: []
  /studios/{sessionId}/checkpoints:
    get:
      tags:
        - studios
      summary: List Studio checkpoints
      description: "Retrieves the list of checkpoints for the given Studio session ID, sorted by creation date in descending order."
      operationId: ListDataStudioCheckpoints
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: search
          in: query
          description: "Optional search criteria, allowing free text search on name and keywords: `status`, `before` and `after` for saved date"
          schema:
            type: string
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioListCheckpointsResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the Studio is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed.
      security:
        - BearerAuth: []
  /studios/{sessionId}/checkpoints/{checkpointId}:
    get:
      tags:
        - studios
      summary: Get Studio checkpoint
      description: Retrieves the details of the given Studio checkpoint ID.
      operationId: GetDataStudioCheckpoint
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: checkpointId
          in: path
          description: Numeric identifier of the checkpoint.
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCheckpointDto"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the studio or the checkpoint is not found or when the API is disabled for the workspace"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed.
      security:
        - BearerAuth: []
    put:
      tags:
        - studios
      summary: Update Studio checkpoint name
      description: Updates the name of the given Studio checkpoint ID.
      operationId: UpdateDataStudioCheckpoint
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: checkpointId
          in: path
          description: Numeric identifier of the checkpoint.
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataStudioCheckpointUpdateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCheckpointDto"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the studio or the checkpoint is not found or when the API is disabled for the workspace"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: "Conflict, when the checkpoint name conflicts with an existing checkpoint for the same Studio."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed.
      security:
        - BearerAuth: []
  /studios/{sessionId}/lifespan:
    post:
      tags:
        - studios
      description: Extends the lifespan of the given Studio session ID.
      operationId: ExtendDataStudioLifespan
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioDto"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the Studio is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed.
      security:
        - BearerAuth: []
  /studios/{sessionId}/start:
    put:
      tags:
        - studios
      summary: Starts a Studio
      description: Starts the given Studio session ID.
      operationId: StartDataStudio
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: An optional overriding configuration for the studio to be started.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataStudioStartRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioStartResponse"
        "404":
          description: "NotFound, when the Studio is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed.
      security:
        - BearerAuth: []
  /studios/{sessionId}/stop:
    put:
      tags:
        - studios
      summary: Stop Studio
      description: Stops the given Studio session ID.
      operationId: StopDataStudio
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioStopResponse"
        "404":
          description: "NotFound, when the Studio is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed.
      security:
        - BearerAuth: []
  /tokens:
    get:
      tags:
        - tokens
      summary: List tokens
      description: Retrieves the list of all available API access tokens.
      operationId: TokenList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAccessTokensResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      tags:
        - tokens
      summary: Create token
      description: Creates an API access token with the details in the given request body.
      operationId: CreateToken
      requestBody:
        description: Access token create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccessTokenRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccessTokenResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /tokens/delete-all:
    delete:
      tags:
        - tokens
      summary: Delete all user tokens
      description: Deletes all API access tokens in the user context.
      operationId: DeleteAllTokens
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /tokens/{tokenId}:
    delete:
      tags:
        - tokens
      summary: Delete token
      description: Deletes the given API access token ID.
      operationId: DeleteToken
      parameters:
        - name: tokenId
          in: path
          description: Token numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /trace/create:
    post:
      tags:
        - trace
      summary: Create workflow execution trace
      description: Creates a new workflow execution trace.
      operationId: CreateTrace
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Trace create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceCreateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceCreateResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /trace/{workflowId}/begin:
    put:
      tags:
        - trace
      summary: Signal workflow execution start
      description: Updates the workflow execution trace for the given `workflowId`.
      operationId: UpdateTraceBegin
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Trace begin request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceBeginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceBeginResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /trace/{workflowId}/complete:
    put:
      tags:
        - trace
      summary: Signal workflow execution completion
      description: Updates the workflow execution trace for the given `workflowId`.
      operationId: UpdateTraceComplete
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Trace complete request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceCompleteRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceCompleteResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /trace/{workflowId}/heartbeat:
    put:
      tags:
        - trace
      summary: Signal workflow execution heartbeat
      description: Update the workflow execution trace heartbeat for the given `workflowId` to signal that execution is ongoing.
      operationId: UpdateTraceHeartbeat
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Trace heartbeat request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceHeartbeatRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceHeartbeatResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /trace/{workflowId}/progress:
    put:
      tags:
        - trace
      summary: Store workflow task execution metadata
      description: Store the execution metadata for one or more tasks in the given `workflowId`.
      operationId: UpdateTraceProgress
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Trace progress request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceProgressRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceProgressResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /user-info:
    get:
      tags:
        - users
      summary: Describe current user
      operationId: UserInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeUserResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /user/{userId}/workspaces:
    get:
      tags:
        - workspaces
      summary: List user workspaces and organizations
      description: Lists the workspaces and organizations to which the user identified by the given `userId` belongs.
      operationId: ListWorkspacesUser
      parameters:
        - name: userId
          in: path
          description: User numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkspacesAndOrgResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /users/validate:
    get:
      tags:
        - users
      summary: Check that the user name is valid
      operationId: ValidateUserName
      parameters:
        - name: name
          in: query
          description: User name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /users/{userId}:
    get:
      tags:
        - users
      summary: Describe a user entity
      operationId: DescribeUser
      parameters:
        - name: userId
          in: path
          description: User numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeUserResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
    post:
      tags:
        - users
      summary: Update an user entity
      operationId: UpdateUser
      parameters:
        - name: userId
          in: path
          description: User numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: User update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDbDto"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      tags:
        - users
      summary: Delete a user entity
      operationId: DeleteUser
      parameters:
        - name: userId
          in: path
          description: User numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow:
    get:
      tags:
        - workflows
      summary: List workflows
      description: "Lists all workflow records, enriched with `attributes`. Append `?workspaceId` to list workflow records in a workspace context."
      operationId: ListWorkflows
      parameters:
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`, `optimized` status). Returns an empty value (`labels: null`) if omitted."
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/WorkflowQueryAttribute"
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkflowsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/delete:
    post:
      tags:
        - workflows
      summary: Delete workflows
      description: Deletes the workflow records identified by the given list of `workflowIds`.
      operationId: DeleteWorkflowMany
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: force
          in: query
          description: Force the deletion even if any workflows are active
          schema:
            type: boolean
      requestBody:
        description: Delete workflows request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteWorkflowsRequest"
        required: true
      responses:
        "200":
          description: "OK - Return the IDs of workflows that could not be deleted, if any"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteWorkflowsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/labels/add:
    post:
      tags:
        - labels
      summary: Add labels to workflows
      description: Adds the given list of labels to the given workflows. Existing labels are preserved.
      operationId: AddLabelsToWorkflows
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels add request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateWorkflowLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/labels/apply:
    post:
      tags:
        - labels
      summary: Replace workflow labels
      description: Applies the given list of labels to the given workflows. Existing labels are replaced â€” include labels to be preserved in `labelIds`.
      operationId: ApplyLabelsToWorkflows
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels apply request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateWorkflowLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/labels/remove:
    post:
      tags:
        - labels
      summary: Remove labels from workflows
      description: Removes the given list of labels from the given workflows.
      operationId: RemoveLabelsFromWorkflows
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels remove request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateWorkflowLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/launch:
    post:
      tags:
        - workflows
      summary: Launch workflow
      description: Submits a workflow execution.
      operationId: CreateWorkflowLaunch
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: sourceWorkspaceId
          in: query
          description: Source workspace numeric identifier
          required: false
          schema:
            type: integer
            format: int64
            nullable: true
      requestBody:
        description: Workflow launch request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitWorkflowLaunchRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmitWorkflowLaunchResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/random-name:
    get:
      tags:
        - workflows
      summary: Generates a random name
      operationId: GenerateRandomWorkflowName
      responses:
        "200":
          description: Generated name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RandomWorkflowNameResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/validate:
    get:
      tags:
        - workflows
      summary: Validate run name
      description: "Check that the given run name of a workflow has a valid format. When the session ID is given: check that no other workflow in the system exists with the combination of both elements."
      operationId: ValidateWorkflowConstraints
      parameters:
        - name: runName
          in: query
          description: Workflow run name to validate
          schema:
            type: string
        - name: sessionId
          in: query
          description: Workflow session ID to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request. Invalid run name format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Duplicated element. Existing run name and session ID combination
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}:
    get:
      tags:
        - workflows
      summary: Describe workflow
      description: Retrieves the details of the workflow record associated with the given `workflowId`.
      operationId: DescribeWorkflow
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          description: Comma-separated list of attributes to retrieve. Returns an empty value for each attribute not specified.
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/WorkflowQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkflowResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      tags:
        - workflows
      summary: Delete the Workflow entity with the given ID
      operationId: DeleteWorkflow
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: force
          in: query
          description: Force the deletion even if the workflow is active
          schema:
            type: boolean
      responses:
        "204":
          description: OK - Not content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/cancel:
    post:
      tags:
        - workflows
      summary: Cancel workflow
      description: Cancels the workflow execution identified by the given `workflowId`.
      operationId: CancelWorkflow
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: force
          in: query
          description: Cancel on the Platform side even if it cannot be cancelled on the CE provider side
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/download:
    get:
      tags:
        - workflows
      summary: Download workflow files
      description: Downloads the workflow files for the Nextflow main job associated with the given `workflowId`.
      operationId: DownloadWorkflowLog
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: fileName
          in: query
          description: Filename to download
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/download/{taskId}:
    get:
      tags:
        - workflows
      summary: Download workflow task files
      description: Downloads the workflow files of the task identified by the given `taskId`.
      operationId: DownloadWorkflowTaskLog
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          description: Task numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: fileName
          in: query
          description: Filename to download
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/launch:
    get:
      tags:
        - workflows
      summary: Describe workflow launch
      description: Retrieves the details of the workflow launch associated with the given `workflowId`.
      operationId: DescribeWorkflowLaunch
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkflowLaunchResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element. Existing run name and session ID combination
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /workflow/{workflowId}/log:
    get:
      tags:
        - workflows
      summary: Get workflow log
      description: Retrieves the execution log output of the workflow identified by the given `workflowId`.
      operationId: GetWorkflowLog
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: next
          in: query
          description: Workflow log cursor
          schema:
            type: string
        - name: maxLength
          in: query
          description: Maximum length in bytes of the log to retrieve
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowLogResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/log/{taskId}:
    get:
      tags:
        - workflows
      summary: Get workflow task logs
      description: Retrieves the output logs for the workflow task identified by the given `taskId`.
      operationId: GetWorkflowTaskLog
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          description: Task numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: next
          in: query
          description: Workflow log cursor
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: maxLength
          in: query
          description: Maximum length in bytes of the log to retrieve
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowLogResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/metrics:
    get:
      tags:
        - workflows
      summary: Get the execution metrics for the given Workflow ID
      operationId: DescribeWorkflowMetrics
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWorkflowMetricsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/progress:
    get:
      tags:
        - workflows
      summary: Retrieve the execution progress for the given Workflow ID
      operationId: DescribeWorkflowProgress
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProgressResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/star:
    get:
      tags:
        - workflows
      summary: Check workflow star status
      description: Confirms whether the given `workflowId` is starred.
      operationId: DescribeWorkflowStar
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkflowStarResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - workflows
      summary: Star workflow
      description: Adds the workflow identified by the given `workflowId` to your list of starred workflows.
      operationId: CreateWorkflowStar
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkflowStarResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - workflows
      summary: Unstar workflow
      description: Removes the workflow identified by the given `workflowId` from your list of starred workflows.
      operationId: DeleteWorkflowStar
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkflowStarResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /workflow/{workflowId}/task/{taskId}:
    get:
      tags:
        - workflows
      summary: Describe a task entity with the given ID
      operationId: DescribeWorkflowTask
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          description: Task numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTaskResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/tasks:
    get:
      tags:
        - workflows
      summary: List the tasks for the given Workflow ID and filter parameters
      operationId: ListWorkflowTasks
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description: Field to sort by
          schema:
            type: string
        - name: sortDir
          in: query
          description: Sorting direction (asc|desc)
          schema:
            type: string
        - name: search
          in: query
          description: Search tasks by name
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTasksResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets:
    get:
      tags:
        - datasets
      summary: (Deprecated) List available datasets
      description: |-
        **This endpoint is deprecated. See [List datasets](https://docs.seqera.io/platform-api/list-datasets-v-2) for the current endpoint.**

        Lists all available datasets in the workspace context identified by the given `workspaceId`.
      operationId: ListDatasets
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
    post:
      tags:
        - datasets
      summary: (Deprecated) Create dataset
      description: |-
        **This endpoint is deprecated. See [Create dataset](https://docs.seqera.io/platform-api/create-dataset-v-2) for the current endpoint.**

        Creates a new dataset in the given workspace context. Include the dataset file and details in your request body.
      operationId: CreateDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Dataset create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasetRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDatasetResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/versions:
    get:
      tags:
        - datasets
      summary: (Deprecated) List latest dataset versions
      description: |-
        **This endpoint is deprecated. See [List latest dataset versions](https://docs.seqera.io/platform-api/list-latest-dataset-versions-v-2) for the current endpoint.**

        Lists the latest version of each dataset associated with the given `workspaceId`.
      operationId: ListWorkspaceDatasetVersions
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: mimeType
          in: query
          schema:
            type: string
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}:
    put:
      tags:
        - datasets
      summary: (Deprecated) Update dataset
      description: |-
        **This endpoint is deprecated. See [Update dataset](https://docs.seqera.io/platform-api/update-dataset-v-2) for the current endpoint.**

        Updates the details of the dataset identified by the given `datasetId`.
      operationId: UpdateDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Dataset update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDatasetRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      deprecated: true
      security:
        - BearerAuth: []
    delete:
      tags:
        - datasets
      summary: (Deprecated) Delete dataset
      description: |-
        **This endpoint is deprecated. See [Delete dataset](https://docs.seqera.io/platform-api/delete-dataset-v-2) for the current endpoint.**

        Deletes the dataset identified by the given `datasetId`.
      operationId: DeleteDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/metadata:
    get:
      tags:
        - datasets
      summary: (Deprecated) Describe dataset
      description: |-
        **This endpoint is deprecated. See [Describe dataset](https://docs.seqera.io/platform-api/describe-dataset-v-2) for the current endpoint.**

        Retrieves the metadata of the dataset identified by the given `datasetId`.
      operationId: DescribeDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDatasetResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/upload:
    post:
      tags:
        - datasets
      summary: (Deprecated) Upload new dataset version
      description: |-
        **This endpoint is deprecated. See [Upload new dataset version](https://docs.seqera.io/platform-api/upload-dataset-v-2) for the current endpoint.**

        Uploads the CSV or TSV content to create a new version of the dataset identified by the given `datasetId`.
      operationId: UploadDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
        - name: header
          in: query
          description: Uploaded file has header
          schema:
            type: boolean
      requestBody:
        description: Dataset file request
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MultiRequestFileSchema"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadDatasetVersionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/v/{version}/n/{fileName}:
    get:
      tags:
        - datasets
      summary: Download dataset content
      description: Downloads the content of the dataset identified by the given `datasetId` and `version`.
      operationId: DownloadDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: Version number to download
          required: true
          schema:
            type: string
        - name: fileName
          in: path
          description: File name for the downloaded dataset content
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/versions:
    get:
      tags:
        - datasets
      summary: (Deprecated) List all dataset versions
      description: |-
        **This endpoint is deprecated. See [List all dataset versions](https://docs.seqera.io/platform-api/list-dataset-versions-v-2) for the current endpoint.**

        Lists all versions of the given `datasetId`.
      operationId: ListDatasetVersions
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
        - name: mimeType
          in: query
          description: MIME type filter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
components:
  schemas:
    AbstractGridConfig:
      type: object
      properties:
        workDir:
          type: string
          description: Nextflow work directory on the cluster's shared file system. Must be an absolute path and credentials must have read-write access.
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        nextflowConfig:
          type: string
          description: "Additional Nextflow configuration to apply. See [Nextflow config file](https://docs.seqera.io/platform-cloud/launch/advanced#nextflow-config-file)."
        launchDir:
          type: string
          description: "Directory where Nextflow runs. Must be an absolute path and credentials must have read-write access. If omitted, defaults to `workDir`."
        userName:
          type: string
          description: "Username for SSH connection to HPC head node."
        hostName:
          type: string
          description: "Hostname or IP address of HPC head node."
        port:
          type: integer
          format: int32
          description: "SSH port. Default: `22`."
        headQueue:
          type: string
          description: "The name of the queue on the cluster used to launch the Nextflow execution."
        computeQueue:
          type: string
          description: "The name of queue on the cluster to which pipeline jobs are submitted. Can be overridden by the pipeline configuration."
        maxQueueSize:
          type: integer
          format: int32
          description: "The maximum number of jobs Nextflow can submit to the queue simultaneously. Default: `100`."
        headJobOptions:
          type: string
          description: "Additional submit options for the Nextflow head job."
        propagateHeadJobOptions:
          type: boolean
          description: "If true, `headJobOptions` are also applied to the Nextflow-submitted compute jobs."
    AccessToken:
      required:
        - name
      type: object
      properties:
        basicAuth:
          type: string
          deprecated: true
        id:
          type: integer
          format: int64
          nullable: true
        name:
          maxLength: 50
          minLength: 1
          type: string
        lastUsed:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
    Action.ConfigType:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
      discriminator:
        propertyName: discriminator
        mapping:
          github: "#/components/schemas/GithubActionConfig"
          tower: "#/components/schemas/Action.TowerActionConfig"
      oneOf:
        - $ref: "#/components/schemas/Action.TowerActionConfig"
        - $ref: "#/components/schemas/GithubActionConfig"
    Action.EventType:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
      discriminator:
        propertyName: discriminator
        mapping:
          github: "#/components/schemas/GithubActionEvent"
          tower: "#/components/schemas/Action.TowerActionEvent"
      oneOf:
        - $ref: "#/components/schemas/GithubActionEvent"
        - $ref: "#/components/schemas/Action.TowerActionEvent"
    Action.Source:
      type: string
      enum:
        - github
        - tower
      x-enum-varnames:
        - github
        - tower
    Action.Status:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - ERROR
        - PAUSED
    Action.TowerActionConfig:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
    Action.TowerActionEvent:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
        workflowId:
          type: string
    ActionQueryAttribute:
      type: string
      enum:
        - labels
      x-enum-varnames:
        - labels
    ActionResponseDto:
      type: object
      properties:
        id:
          type: string
        launch:
          $ref: "#/components/schemas/Launch"
        name:
          type: string
        hookId:
          type: string
        hookUrl:
          type: string
        message:
          type: string
        source:
          $ref: "#/components/schemas/Action.Source"
        status:
          $ref: "#/components/schemas/Action.Status"
        config:
          $ref: "#/components/schemas/Action.ConfigType"
        event:
          $ref: "#/components/schemas/Action.EventType"
        lastSeen:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
    ActiveConnection:
      required:
        - lastActive
      type: object
      allOf:
        - $ref: "#/components/schemas/UserInfo"
        - properties:
            lastActive:
              type: string
              format: date-time
    AddMemberRequest:
      type: object
      properties:
        user:
          type: string
    AddMemberResponse:
      type: object
      properties:
        member:
          $ref: "#/components/schemas/MemberDbDto"
    AddParticipantRequest:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        teamId:
          type: integer
          format: int64
        userNameOrEmail:
          type: string
    AddParticipantResponse:
      type: object
      properties:
        participant:
          $ref: "#/components/schemas/ParticipantDbDto"
    AddTeamMemberResponse:
      type: object
      properties:
        member:
          $ref: "#/components/schemas/MemberDbDto"
    AgentSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        connectionId:
          type: string
        workDir:
          type: string
        shared:
          type: boolean
    AllowedDynamicLabelsResponse:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
    AltairPbsComputeConfig:
      title: Altair PBS configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              readOnly: true
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
    Analytics:
      type: object
      properties:
        hubspotId:
          type: string
        posthogApiKey:
          type: string
        posthogApiHost:
          type: string
    AssociateActionLabelsRequest:
      type: object
      properties:
        actionIds:
          type: array
          items:
            type: string
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    AssociatePipelineLabelsRequest:
      type: object
      properties:
        pipelineIds:
          type: array
          items:
            type: integer
            format: int64
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    AssociateWorkflowLabelsRequest:
      type: object
      properties:
        workflowIds:
          type: array
          items:
            type: string
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    Avatar:
      type: object
      properties:
        id:
          maxLength: 22
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    AwsBatchConfig:
      title: AWS Batch configuration
      type: object
      properties:
        storageType:
          type: string
          deprecated: true
        lustreId:
          type: string
          deprecated: true
        volumes:
          type: array
          items:
            type: string
          description: "EBS volumes to mount (format: `/host/path:/container/path`)."
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        region:
          type: string
          description: "AWS region where resources will be created (e.g., `us-east-1`)."
        computeQueue:
          type: string
          description: "AWS Batch compute queue for running jobs."
        dragenQueue:
          type: string
          description: "AWS Batch queue for DRAGEN workflows. See [Illumina DRAGEN](https://docs.seqera.io/platform-cloud/supported_software/dragen/overview)."
        dragenInstanceType:
          type: string
          description: "EC2 instance type for DRAGEN workflows (e.g., `f1.2xlarge`)."
        computeJobRole:
          type: string
          description: "Role ARN to grant fine-grained IAM permissions to Nextflow compute jobs."
        executionRole:
          type: string
          description: "IAM role ARN for ECS task execution."
        headQueue:
          type: string
          description: "AWS Batch queue for the Nextflow head job."
        headJobRole:
          type: string
          description: "Role ARN to grant fine-grained IAM permissions to the Nextflow head job."
        cliPath:
          type: string
          description: "Path to the AWS CLI installation in the container."
        workDir:
          type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        headJobCpus:
          type: integer
          format: int32
          description: "Number of CPUs allocated to the Nextflow head job."
        headJobMemoryMb:
          type: integer
          format: int32
          description: "Memory allocation for the Nextflow head job, in megabytes."
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
          description: "Enable [Wave containers](https://docs.seqera.io/wave). Default: `false`."
        fusion2Enabled:
          type: boolean
          description: "Enable [Fusion file system](https://docs.seqera.io/fusion). Requires Wave containers. Default: `false`."
        nvnmeStorageEnabled:
          type: boolean
          description: "Enable NVMe instance storage. Requires Fusion file system."
        logGroup:
          type: string
          description: "CloudWatch Logs group for container logs."
        nextflowConfig:
          type: string
          description: "Additional Nextflow configuration to apply. See [Nextflow config file](https://docs.seqera.io/platform-cloud/launch/advanced#nextflow-config-file)."
        fusionSnapshots:
          type: boolean
          description: "Enable [Fusion Snapshots](https://docs.seqera.io/fusion/guide/snapshots). Requires Fusion file system."
        forge:
          $ref: "#/components/schemas/ForgeConfig"
          description: "Batch Forge configuration options. [Batch Forge](https://docs.seqera.io/platform-cloud/compute-envs/aws-batch#batch-forge-compute-environment) automates the AWS Batch compute environment and job queue configuration required for deploying Nextflow pipelines."
        forgedResources:
          type: array
          items:
            type: object
            additionalProperties: true
          description: "Resources created by Batch Forge (read-only)."
      required: ["region", "workDir", "region", "workDir"]
    AwsBatchPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        jobQueues:
          type: array
          items:
            $ref: "#/components/schemas/JobQueue"
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/Bucket"
        fileSystems:
          type: array
          items:
            $ref: "#/components/schemas/FsxFileSystem"
        efsFileSystems:
          type: array
          items:
            $ref: "#/components/schemas/EfsFileSystem"
        keyPairs:
          type: array
          items:
            type: string
        vpcs:
          type: array
          items:
            $ref: "#/components/schemas/Vpc"
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
        securityGroups:
          type: array
          items:
            $ref: "#/components/schemas/SecurityGroup"
        subnets:
          type: array
          items:
            $ref: "#/components/schemas/Subnet"
        instanceFamilies:
          type: array
          items:
            type: string
        allocStrategy:
          type: array
          items:
            type: string
    AwsCloudConfig:
      title: AWS Cloud configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        allowBuckets:
          type: array
          items:
            type: string
          description: "Comma-separated list of S3 buckets accessible to the compute environment."
        region:
          type: string
          description: "AWS region for EC2 instances (e.g., `us-east-1`)."
        instanceType:
          type: string
          description: "EC2 instance type (e.g., `t3.medium`). If omitted, a default instance type is used."
        imageId:
          type: string
          description: "The AMI ID to use for launching EC2 instance. If omitted, the default [Seqera-maintained AMI](https://docs.seqera.io/platform-cloud/compute-envs/aws-cloud#managed-amazon-machine-image-ami) is used. Use Seqera AMIs for best performance."
        workDir:
          type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        nextflowConfig:
          type: string
          description: "Additional Nextflow configuration to apply. See [Nextflow config file](https://docs.seqera.io/platform-cloud/launch/advanced#nextflow-config-file)."
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
          description: "Enable [Wave containers](https://docs.seqera.io/wave). Default: `false`."
        fusion2Enabled:
          type: boolean
          description: "Enable [Fusion file system](https://docs.seqera.io/fusion). Requires Wave containers. Default: `false`."
        logGroup:
          type: string
          description: "CloudWatch Logs group for container logs."
        arm64Enabled:
          type: boolean
          description: "Enable ARM64 architecture (Graviton) EC2 instances to run compute jobs."
        gpuEnabled:
          type: boolean
          description: "Enable GPU instances to run compute jobs."
        ec2KeyPair:
          type: string
          description: "EC2 key pair name for SSH access to instances."
        ebsBootSize:
          type: integer
          format: int32
          description: "EC2 instance boot disk size, in GB. If omitted, a 50 GB `gp3` volume is used by default."
        instanceProfileArn:
          type: string
          description: "The `InstanceProfile` ARN used by the EC2 instance to assume a role while running. If unspecified, Seqera will provision an ARN with enough permissions to run."
        subnetId:
          type: string
          description: "Subnet ID for instance placement (single subnet)."
        securityGroups:
          type: array
          items:
            type: string
          description: "Security group IDs that control network access."
        forgedResources:
          type: array
          items:
            type: object
            additionalProperties: true
          description: "Resources created by Cloud Forge (read-only)."
      required: ["region", "workDir", "region", "workDir"]
    AwsCloudPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/Bucket"
        keyPairs:
          type: array
          items:
            type: string
        vpcs:
          type: array
          items:
            $ref: "#/components/schemas/Vpc"
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
        securityGroups:
          type: array
          items:
            $ref: "#/components/schemas/SecurityGroup"
        subnets:
          type: array
          items:
            $ref: "#/components/schemas/Subnet"
        instanceTypes:
          type: array
          items:
            $ref: "#/components/schemas/InstanceType"
    AwsSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        accessKey:
          type: string
        secretKey:
          type: string
          writeOnly: true
        assumeRoleArn:
          type: string
    AzBatchConfig:
      title: Azure batch configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        workDir:
          type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        region:
          type: string
          description: "Azure region (e.g., `eastus`)."
        headPool:
          type: string
          description: "Batch pool for the Nextflow head job."
        autoPoolMode:
          type: boolean
          deprecated: true
        forge:
          $ref: "#/components/schemas/AzBatchForgeConfig"
          description: "Batch Forge configuration mode properties. Batch Forge automatically creates Azure Batch resources during compute environment creation."
        tokenDuration:
          type: string
          description: "Duration of the SAS token created by Nextflow. Default: `12h`."
        deleteJobsOnCompletion:
          $ref: "#/components/schemas/JobCleanupPolicy"
          description: "Automatically delete Batch jobs after completion."
          enum: ["on_success", "always", "never", "on_success", "always", "never"]
        deletePoolsOnCompletion:
          type: boolean
          description: "Automatically delete Batch pools after completion. Default: `false`."
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
          description: "Enable [Wave containers](https://docs.seqera.io/wave). Default: `false`."
        fusion2Enabled:
          type: boolean
          description: "Enable [Fusion file system](https://docs.seqera.io/fusion). Requires Wave containers. Default: `false`."
        nextflowConfig:
          type: string
          description: "Additional Nextflow configuration to apply. See [Nextflow config file](https://docs.seqera.io/platform-cloud/launch/advanced#nextflow-config-file)."
        managedIdentityClientId:
          type: string
          nullable: true
          description: "The ID of a [managed identity client](https://docs.seqera.io/platform-cloud/compute-envs/azure-batch#managed-identity) attached to the Azure Batch Pool, used by Nextflow to authenticate to Azure Batch and Storage."
      required: ["region", "workDir", "region", "workDir"]
    AzBatchForgeConfig:
      type: object
      properties:
        vmType:
          type: string
          description: "Azure VM type used by the Batch pool. Must be a valid Azure Batch VM type. Default: `Standard_D4s_v3`."
        vmCount:
          type: integer
          format: int32
          description: "Number of VMs in the Batch pool. When autoscaling is enabled, this represents the maximum number of VMs to which the pool can grow, and automatically scales to 0 when unused."
        autoScale:
          type: boolean
          description: "Enable auto-scaling for the Batch pool."
        disposeOnDeletion:
          type: boolean
          description: "Delete Batch compute pool when the compute environment is deleted."
        containerRegIds:
          type: array
          items:
            type: string
          description: "Container registry resource IDs."
    AzBatchPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        pools:
          type: array
          items:
            type: string
        containers:
          type: array
          items:
            type: string
        vmTypes:
          type: array
          items:
            type: string
    AzCloudConfig:
      title: Azure Cloud configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
          description: "Enable [Wave containers](https://docs.seqera.io/wave). Default: `false`."
        fusion2Enabled:
          type: boolean
          description: "Enable [Fusion file system](https://docs.seqera.io/fusion). Requires Wave containers. Default: `false`."
        nextflowConfig:
          type: string
        instanceType:
          type: string
          description: "Azure VM size (e.g., `Standard_D2s_v3`)."
        region:
          type: string
        resourceGroup:
          type: string
          description: "Azure resource group for VMs."
        networkId:
          type: string
          description: "Virtual network resource ID."
        subscriptionId:
          type: string
          description: "Azure subscription ID."
        managedIdentityId:
          type: string
          description: "User-assigned managed identity resource ID."
        managedIdentityClientId:
          type: string
          description: "Managed identity client ID for authentication."
        logWorkspaceId:
          type: string
          description: "Log Analytics workspace ID for monitoring."
        logTableName:
          type: string
          description: "Custom table name in Log Analytics."
        dataCollectionEndpoint:
          type: string
          description: "Data collection endpoint for logs."
        dataCollectionRuleId:
          type: string
          description: "Data collection rule ID for log routing."
        forgedResources:
          type: array
          items:
            $ref: "#/components/schemas/Map.Entry_String.String_"
          description: "Resources created by Cloud Forge (read-only)."
      required: ["location", "workDir", "location", "workDir"]
    AzureEntraKeys:
      type: object
      allOf:
        - $ref: "#/components/schemas/AzureSecurityKeys"
        - properties:
            discriminator:
              type: string
              readOnly: true
            tenantId:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
              writeOnly: true
    AzureReposSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
    AzureSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        batchName:
          type: string
        storageName:
          type: string
        batchKey:
          type: string
          writeOnly: true
        storageKey:
          type: string
          writeOnly: true
    BitBucketSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        token:
          type: string
          writeOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
    Bucket:
      type: object
      properties:
        path:
          type: string
    CloudPriceModel:
      type: string
      enum:
        - standard
        - spot
      x-enum-varnames:
        - standard
        - spot
    CodeCommitSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
    ComputeConfig:
      type: object
      properties:
        workDir:
          type: string
          description: Work directory path for storing intermediate workflow files.
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
          description: "Environment variables to set in the compute environment."
        nextflowConfig:
          type: string
          description: "Additional Nextflow configuration to apply. See [Nextflow config file](https://docs.seqera.io/platform-cloud/launch/advanced#nextflow-config-file)."
        discriminator:
          type: string
          description: Platform type discriminator (read-only, set based on platform selection).
          readOnly: true
      discriminator:
        propertyName: discriminator
        mapping:
          moab-platform: "#/components/schemas/MoabComputeConfig"
          aws-batch: "#/components/schemas/AwsBatchConfig"
          google-cloud: "#/components/schemas/GoogleCloudConfig"
          azure-cloud: "#/components/schemas/AzCloudConfig"
          gke-platform: "#/components/schemas/GkeComputeConfig"
          google-batch: "#/components/schemas/GoogleBatchConfig"
          aws-cloud: "#/components/schemas/AwsCloudConfig"
          slurm-platform: "#/components/schemas/SlurmComputeConfig"
          k8s-platform: "#/components/schemas/K8sComputeConfig"
          altair-platform: "#/components/schemas/AltairPbsComputeConfig"
          lsf-platform: "#/components/schemas/LsfComputeConfig"
          azure-batch: "#/components/schemas/AzBatchConfig"
          seqeracompute-platform: "#/components/schemas/SeqeraComputeConfig"
          eks-platform: "#/components/schemas/EksComputeConfig"
          google-lifesciences: "#/components/schemas/GoogleLifeSciencesConfig"
          uge-platform: "#/components/schemas/UnivaComputeConfig"
      oneOf:
        - $ref: "#/components/schemas/AwsBatchConfig"
        - $ref: "#/components/schemas/AwsCloudConfig"
        - $ref: "#/components/schemas/SeqeraComputeConfig"
        - $ref: "#/components/schemas/GoogleLifeSciencesConfig"
        - $ref: "#/components/schemas/GoogleBatchConfig"
        - $ref: "#/components/schemas/AzBatchConfig"
        - $ref: "#/components/schemas/LsfComputeConfig"
        - $ref: "#/components/schemas/SlurmComputeConfig"
        - $ref: "#/components/schemas/K8sComputeConfig"
        - $ref: "#/components/schemas/EksComputeConfig"
        - $ref: "#/components/schemas/GkeComputeConfig"
        - $ref: "#/components/schemas/UnivaComputeConfig"
        - $ref: "#/components/schemas/AltairPbsComputeConfig"
        - $ref: "#/components/schemas/MoabComputeConfig"
    ComputeEnv.Status:
      type: string
      readOnly: true
      enum:
        - CREATING
        - AVAILABLE
        - ERRORED
        - INVALID
    ComputeEnvDbDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        platform:
          type: string
        region:
          type: string
    ComputeEnvQueryAttribute:
      type: string
      enum:
        - labels
      x-enum-varnames:
        - labels
    ComputeEnvResponseDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        platform:
          type: string
          enum:
            - aws-batch
            - aws-cloud
            - seqeracompute-platform
            - google-lifesciences
            - google-batch
            - azure-batch
            - k8s-platform
            - eks-platform
            - gke-platform
            - uge-platform
            - slurm-platform
            - lsf-platform
            - altair-platform
        config:
          $ref: "#/components/schemas/ComputeConfig"
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        lastUsed:
          type: string
          format: date-time
        deleted:
          type: boolean
        status:
          $ref: "#/components/schemas/ComputeEnv.Status"
        message:
          type: string
        primary:
          type: boolean
        credentialsId:
          type: string
        managedIdentityId:
          type: string
        orgId:
          type: integer
          format: int64
        workspaceId:
          type: integer
          format: int64
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
    ComputeEnv_ComputeConfig_:
      required:
        - config
        - name
        - platform
        - "name"
        - "platform"
        - "config"
        - "name"
        - "platform"
        - "config"
      type: object
      properties:
        credentialsId:
          type: string
          description: "Credentials identifier for compute environment authentication. Requires existing cloud provider/HPC credentials. See [Create credentials](https://docs.seqera.io/platform-api/create-credentials)."
        orgId:
          type: integer
          format: int64
          readOnly: true
          description: "Organization numeric identifier (read-only, set by system)."
        workspaceId:
          type: integer
          format: int64
          readOnly: true
          description: "Workspace numeric identifier (read-only, set by system)."
        id:
          maxLength: 22
          type: string
          readOnly: true
          description: "Compute environment alphanumeric identifier (read-only, generated by system)."
        name:
          maxLength: 100
          type: string
          description: "Unique name for the compute environment. Must consist of 1-100 alphanumeric, dash, or underscore characters."
        description:
          maxLength: 2000
          type: string
          description: "Description of the compute environment. Maximum length: 2000 characters."
        platform:
          maxLength: 25
          type: string
          enum:
            - aws-batch
            - aws-cloud
            - google-lifesciences
            - google-batch
            - google-cloud
            - azure-batch
            - azure-cloud
            - k8s-platform
            - eks-platform
            - gke-platform
            - uge-platform
            - slurm-platform
            - lsf-platform
            - altair-platform
            - moab-platform
            - local-platform
            - seqeracompute-platform
            - "aws-batch"
            - "aws-cloud"
            - "google-batch"
            - "google-cloud"
            - "azure-batch"
            - "k8s-platform"
            - "eks-platform"
            - "gke-platform"
            - "slurm-platform"
            - "lsf-platform"
            - "uge-platform"
            - "moab-platform"
            - "altair-platform"
            - "local-platform"
            - "seqeracompute-platform"
            - "aws-batch"
            - "aws-cloud"
            - "google-batch"
            - "google-cloud"
            - "azure-batch"
            - "azure-cloud"
            - "k8s-platform"
            - "eks-platform"
            - "gke-platform"
            - "slurm-platform"
            - "lsf-platform"
            - "uge-platform"
            - "moab-platform"
            - "altair-platform"
            - "local-platform"
            - "seqeracompute-platform"
          description: "Compute platform provider."
        config:
          $ref: "#/components/schemas/ComputeConfig"
          description: "Platform-specific configuration. Structure depends on the selected platform."
        dateCreated:
          type: string
          format: date-time
          readOnly: true
          description: "Creation timestamp (read-only, set by system)."
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
          description: "Last update timestamp (read-only, updated by system)."
        lastUsed:
          type: string
          format: date-time
          readOnly: true
          description: "Last usage timestamp (read-only, updated by system)."
        deleted:
          type: boolean
          readOnly: true
          description: "Deletion status flag (read-only, updated by system)."
        status:
          type: string
          readOnly: true
          allOf:
            - $ref: "#/components/schemas/ComputeEnv.Status"
          description: "Current status of the compute environment (read-only)."
          enum: ["CREATING", "AVAILABLE", "ERRORED", "INVALID", "CREATING", "AVAILABLE", "ERRORED", "INVALID"]
        message:
          maxLength: 4096
          type: string
        primary:
          type: boolean
          readOnly: true
    ComputePlatform:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        credentialsProviders:
          type: array
          items:
            type: string
    ComputePlatformDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ComputeRegion:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ConfigEnvVariable:
      type: object
      properties:
        name:
          type: string
          description: "Environment variable name."
        value:
          type: string
          description: "Environment variable value."
        head:
          type: boolean
          description: "Apply this variable to the Nextflow head job."
        compute:
          type: boolean
          description: "Apply this variable to the Nextflow compute jobs."
      required: ["name", "value", "name", "value"]
    ContainerData:
      required:
        - targetImage
      type: object
      properties:
        requestId:
          type: string
        sourceImage:
          type: string
        targetImage:
          type: string
        buildId:
          type: string
        scanId:
          type: string
        mirrorId:
          type: string
        cached:
          type: boolean
        freeze:
          type: boolean
        requestTime:
          type: string
          format: date-time
    ContainerRegistryKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        userName:
          type: string
        password:
          type: string
          writeOnly: true
        registry:
          type: string
    CreateAccessTokenRequest:
      type: object
      properties:
        name:
          type: string
    CreateAccessTokenResponse:
      type: object
      properties:
        accessKey:
          type: string
        token:
          $ref: "#/components/schemas/AccessToken"
    CreateActionRequest:
      type: object
      properties:
        name:
          type: string
        source:
          $ref: "#/components/schemas/Action.Source"
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
    CreateActionResponse:
      type: object
      properties:
        actionId:
          type: string
    CreateAvatarResponse:
      type: object
      properties:
        avatar:
          $ref: "#/components/schemas/Avatar"
        url:
          type: string
    CreateComputeEnvRequest:
      type: object
      properties:
        computeEnv:
          $ref: "#/components/schemas/ComputeEnv_ComputeConfig_"
          description: "Compute environment configuration object."
        labelIds:
          type: array
          items:
            type: integer
            format: int64
          description: "Array of label IDs to assign to the compute environment."
      required: ["computeEnv", "computeEnv"]
    CreateComputeEnvResponse:
      type: object
      properties:
        computeEnvId:
          type: string
    CreateCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: "#/components/schemas/Credentials"
    CreateCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    CreateDatasetRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    CreateDatasetResponse:
      type: object
      properties:
        dataset:
          $ref: "#/components/schemas/DatasetDto"
    CreateLabelRequest:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
        isDefault:
          type: boolean
    CreateLabelResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
        isDefault:
          type: boolean
    CreateManagedCredentialsRequest:
      type: object
      properties:
        provider:
          type: string
          enum:
            - ssh
          description: "Authentication provider type. Currently supports `ssh`."
        credentials:
          $ref: "#/components/schemas/Credentials"
          description: "Authentication credentials configuration object."
        metadata:
          $ref: "#/components/schemas/ManagedCredentialsMetadata"
          description: "Additional metadata for the managed credentials."
    CreateManagedCredentialsResponse:
      type: object
      properties:
        managedCredentials:
          $ref: "#/components/schemas/ManagedCredentialsDbDto"
          description: "Created managed credentials object."
    CreateManagedIdentityRequest:
      type: object
      properties:
        name:
          type: string
          description: "Unique name for the managed identity. Must consist of alphanumeric, dash, or underscore characters."
        platform:
          type: string
          enum:
            - altair-platform
            - lsf-platform
            - moab-platform
            - slurm-platform
            - uge-platform
          description: "HPC platform type for this managed identity."
        config:
          $ref: "#/components/schemas/AbstractGridConfig"
          description: "Platform-specific configuration. Structure depends on the selected platform."
    CreateManagedIdentityResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "Managed identity numeric identifier."
        name:
          type: string
          description: "Name of the created managed identity."
        platform:
          type: string
          description: "HPC platform type."
        config:
          $ref: "#/components/schemas/ComputeConfig"
          description: "Platform-specific configuration."
    CreateOrganizationRequest:
      type: object
      properties:
        organization:
          $ref: "#/components/schemas/Organization"
        logoId:
          type: string
    CreateOrganizationResponse:
      type: object
      properties:
        organization:
          $ref: "#/components/schemas/OrganizationDbDto"
    CreatePipelineRequest:
      type: object
      properties:
        name:
          type: string
          description: "Pipeline name. Must be unique within the workspace."
        description:
          type: string
          description: "Pipeline description."
        icon:
          type: string
          description: "Pipeline icon URL."
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
          description: "Launch configuration for the pipeline."
        labelIds:
          type: array
          items:
            type: integer
            format: int64
          description: "Array of label IDs to apply to the pipeline."
    CreatePipelineResponse:
      type: object
      properties:
        pipeline:
          $ref: "#/components/schemas/PipelineDbDto"
    CreatePipelineSecretRequest:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    CreatePipelineSecretResponse:
      type: object
      properties:
        secretId:
          type: integer
          format: int64
    CreateTeamMemberRequest:
      type: object
      properties:
        userNameOrEmail:
          type: string
    CreateTeamRequest:
      type: object
      properties:
        team:
          $ref: "#/components/schemas/Team"
        avatarId:
          type: string
    CreateTeamResponse:
      type: object
      properties:
        team:
          $ref: "#/components/schemas/TeamDbDto"
    CreateWorkflowStarResponse:
      type: object
      properties:
        workflowId:
          type: string
    CreateWorkspaceRequest:
      type: object
      properties:
        workspace:
          $ref: "#/components/schemas/Workspace"
    CreateWorkspaceResponse:
      type: object
      properties:
        workspace:
          $ref: "#/components/schemas/Workspace"
    Credentials:
      required:
        - name
        - provider
      type: object
      properties:
        id:
          maxLength: 22
          type: string
        name:
          maxLength: 100
          type: string
        description:
          type: string
        provider:
          maxLength: 16
          type: string
          enum:
            - aws
            - azure
            - azure_entra
            - google
            - github
            - gitlab
            - bitbucket
            - ssh
            - k8s
            - container-reg
            - tw-agent
            - codecommit
            - gitea
            - azurerepos
            - seqeracompute
            - azure-cloud
            - s3
        baseUrl:
          maxLength: 200
          pattern: ""
          type: string
        category:
          maxLength: 20
          type: string
        deleted:
          type: boolean
          readOnly: true
        lastUsed:
          type: string
          format: date-time
          readOnly: true
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        keys:
          $ref: "#/components/schemas/SecurityKeys"
    DataLink.Status:
      type: string
      readOnly: true
      enum:
        - VALID
        - INVALID
    DataLinkContentResponse:
      type: object
      properties:
        originalPath:
          type: string
          description: "Base path for all returned objects within the data-link."
        objects:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkItem"
          description: "Array of data-link items (files and folders) at the specified path."
        nextPageToken:
          type: string
          description: "Token that can be used to request the next page of items. Null if no more items are available."
    DataLinkContentTreeListResponse:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkSimpleItem"
          description: "Array of simple data-link items containing file paths and sizes."
    DataLinkCreateRequest:
      type: object
      properties:
        name:
          type: string
          description: "Unique name for the data-link. Must consist of alphanumeric, dash, or underscore characters."
        description:
          type: string
          description: "Description of the data-link. Maximum length: 1000 characters."
        type:
          $ref: "#/components/schemas/DataLinkType"
          description: "Type of the data-link. Currently supports `bucket`."
        provider:
          $ref: "#/components/schemas/DataLinkProvider"
          description: "Cloud provider for the data-link. Supports `aws`, `google`, `azure`, `azure_entra`, `azure-cloud`, `seqeracompute`, and `s3`."
        resourceRef:
          type: string
          description: "Resource path for the data-link, including the URI scheme (e.g., `s3://my-bucket`, `gs://my-bucket`, `az://account.container`)."
        publicAccessible:
          type: boolean
          description: "Whether the data-link is publicly accessible. If `true`, no credentials are required. If `false`, `credentialsId` must be provided."
        credentialsId:
          type: string
          description: "Credentials string identifier. Required when `publicAccessible` is `false`."
    DataLinkCredentials:
      required:
        - id
        - name
        - provider
      type: object
      properties:
        id:
          type: string
          description: "Credentials string identifier."
        name:
          type: string
          description: "Name of the credentials."
        provider:
          $ref: "#/components/schemas/DataLinkProvider"
          description: "Credentials cloud provider."
    DataLinkDeleteItemRequest:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
          description: "Array of file paths to be deleted from the data-link."
        dirs:
          type: array
          items:
            type: string
          description: "Array of directory paths to be deleted from the data-link."
    DataLinkDeleteItemResponse:
      type: object
      properties:
        deletionFailures:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkItemDeletionFailure"
          description: "Array of items that failed to be deleted, including error messages."
    DataLinkDownloadScriptResponse:
      type: object
      properties:
        script:
          type: string
          description: "Shell script content to download files from the data-link."
    DataLinkDownloadUrlResponse:
      type: object
      properties:
        url:
          type: string
          description: "Pre-signed URL to download the requested file."
    DataLinkDto:
      type: object
      properties:
        id:
          type: string
          description: "Data-link string identifier. Generated based on provider, type, region, and resource path."
        name:
          type: string
          description: "Name of the data-link (e.g., bucket name)."
        description:
          type: string
          description: "Description of the data-link. Null for data-links auto-discovered from workspace credentials."
        resourceRef:
          type: string
          description: "Resource path for the data-link, including the URI scheme (e.g., `s3://my-bucket`, `gs://my-bucket`, `az://account.container`)."
        type:
          $ref: "#/components/schemas/DataLinkType"
          description: "Data-link type. Currently supports `bucket`."
        provider:
          $ref: "#/components/schemas/DataLinkProvider"
          description: "Cloud provider for the data-link. Supports `aws`, `google`, `azure`, `azure_entra`, `azure-cloud`, `seqeracompute`, and `s3`."
        region:
          type: string
          description: "Cloud region of the data-link (e.g., `us-east-1`, `europe-west1`). May be null for some providers."
        credentials:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkCredentials"
          description: "Array of credentials that can access this data-link. Empty for public data-links."
        publicAccessible:
          type: boolean
          description: "Whether the data-link is publicly accessible without credentials."
        hidden:
          type: boolean
          description: "Visibility status flag. If `true`, data-link is hidden from default list views."
        status:
          type: string
          readOnly: true
          allOf:
            - $ref: "#/components/schemas/DataLink.Status"
          description: "Status of the data-link. Can be `VALID` or `INVALID`. Set to `INVALID` when associated credentials are deleted."
        message:
          type: string
          description: "Error message for invalid data-links. Null for valid data-links."
    DataLinkFinishMultiPartUploadRequest:
      type: object
      properties:
        uploadId:
          type: string
          description: "Upload ID assigned when initiating multi-part upload for AWS S3. Obtained from the `/upload` endpoint response."
        fileName:
          type: string
          description: "Name of the uploaded file."
        tags:
          type: array
          items:
            $ref: "#/components/schemas/UploadEtag"
          description: "Array of ETags assigned for each part by AWS S3 during the upload process. Each ETag is returned in the response headers when uploading a part to the pre-signed URLs from the `/upload` endpoint."
        withError:
          type: boolean
          description: "Flag indicating whether the upload encountered an error. If `true`, the upload will be aborted. If `false`, the upload will be completed."
    DataLinkItem:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/DataLinkItemType"
          description: "Type of the item. Either `FILE` or `FOLDER`."
        name:
          type: string
          description: "Name of the file or folder."
        size:
          type: integer
          format: int64
          description: "Size of the file in bytes. For folders, always `0`."
        mimeType:
          type: string
          description: "MIME type of the file, calculated by analyzing the file extension. Null for folders."
    DataLinkItemDeletionFailure:
      required:
        - dataLinkItem
        - errorMessage
      type: object
      properties:
        dataLinkItem:
          $ref: "#/components/schemas/DataLinkItem"
          description: "Data-link item that failed to be deleted."
        errorMessage:
          type: string
          description: "Error message describing why the deletion failed."
    DataLinkItemType:
      type: string
      enum:
        - FOLDER
        - FILE
      description: "Type of data-link content item. Either `FILE` or `FOLDER`."
    DataLinkMultiPartUploadRequest:
      type: object
      properties:
        fileName:
          type: string
          description: "Name of the file to upload."
        contentLength:
          type: integer
          format: int64
          description: "Size of the file to upload in bytes."
        contentType:
          type: string
          description: "MIME type of the file to upload (e.g., `application/octet-stream`, `text/plain`)."
    DataLinkMultiPartUploadResponse:
      type: object
      properties:
        uploadId:
          type: string
          description: "Upload ID generated by AWS S3. Required for the `/upload/finish` request."
        uploadUrls:
          type: array
          items:
            type: string
          description: "Array of pre-signed URLs to execute multi-part upload. One URL per part."
    DataLinkProvider:
      type: string
      enum:
        - aws
        - google
        - azure
        - azure_entra
        - azure-cloud
        - seqeracompute
        - s3
      description: "Cloud provider for data-links. Supports AWS S3, Google Cloud Storage, Azure Blob Storage, Azure with Entra ID, Seqera Compute storage, and generic S3-compatible storage."
    DataLinkResponse:
      type: object
      properties:
        dataLink:
          $ref: "#/components/schemas/DataLinkDto"
          description: "Data-link object containing metadata."
    DataLinkSimpleItem:
      required:
        - path
        - size
      type: object
      properties:
        path:
          type: string
          description: "Path to the item from the data-link root (resource path)."
        size:
          type: integer
          format: int64
          description: "Size of the file in bytes. For folders, always `0`."
    DataLinkType:
      type: string
      enum:
        - bucket
      x-enum-varnames:
        - bucket
      description: "Data-link type. Currently only `bucket` is supported."
    DataLinkUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: "New name for the data-link. Must be unique within the workspace or user context."
        description:
          type: string
          description: "Updated description for the data-link. Maximum length: 1000 characters."
        credentialsId:
          type: string
          description: "Updated credentials ID for accessing the data-link."
    DataLinksListResponse:
      type: object
      properties:
        dataLinks:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkDto"
          description: "Array of data-link objects."
        totalSize:
          type: integer
          format: int64
          description: "Total number of data-links matching the query."
    DataStudioCheckpointDto:
      required:
        - author
        - dateCreated
        - dateSaved
        - id
        - name
        - path
        - status
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateSaved:
          type: string
          format: date-time
        author:
          $ref: "#/components/schemas/UserInfo"
        path:
          type: string
        status:
          $ref: "#/components/schemas/StudioCheckpointStatus"
    DataStudioCheckpointUpdateRequest:
      type: object
      properties:
        name:
          type: string
    DataStudioComputeEnvDto:
      type: object
      allOf:
        - $ref: "#/components/schemas/ComputeEnvDbDto"
        - properties:
            credentialsId:
              type: string
            workDir:
              type: string
    DataStudioConfiguration:
      type: object
      properties:
        gpu:
          minimum: 0
          type: integer
          format: int32
        cpu:
          minimum: 0
          type: integer
          format: int32
        memory:
          minimum: 0
          type: integer
          format: int32
        mountData:
          type: array
          items:
            type: string
        environment:
          type: object
          additionalProperties:
            type: string
          nullable: true
        condaEnvironment:
          maxLength: 2048
          type: string
        lifespanHours:
          minimum: 0
          type: integer
          format: int32
    DataStudioCreateRequest:
      required:
        - computeEnvId
        - name
      type: object
      properties:
        name:
          maxLength: 80
          minLength: 1
          type: string
        description:
          maxLength: 2048
          type: string
        dataStudioToolUrl:
          type: string
        computeEnvId:
          minLength: 1
          type: string
        initialCheckpointId:
          type: integer
          format: int64
        configuration:
          $ref: "#/components/schemas/DataStudioConfiguration"
        isPrivate:
          type: boolean
        labelIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
        spot:
          type: boolean
          nullable: true
    DataStudioCreateResponse:
      type: object
      properties:
        studio:
          $ref: "#/components/schemas/DataStudioDto"
    DataStudioDto:
      type: object
      properties:
        sessionId:
          type: string
        workspaceId:
          type: integer
          format: int64
        parentCheckpoint:
          $ref: "#/components/schemas/DataStudioDto.ParentCheckpoint"
        user:
          $ref: "#/components/schemas/UserInfo"
        name:
          type: string
        description:
          type: string
        studioUrl:
          type: string
        computeEnv:
          $ref: "#/components/schemas/DataStudioComputeEnvDto"
        template:
          $ref: "#/components/schemas/DataStudioTemplate"
        configuration:
          $ref: "#/components/schemas/DataStudioConfiguration"
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        lastStarted:
          type: string
          format: date-time
        effectiveLifespanHours:
          type: integer
          format: int32
        activeConnections:
          type: array
          items:
            $ref: "#/components/schemas/ActiveConnection"
        statusInfo:
          $ref: "#/components/schemas/DataStudioStatusInfo"
        waveBuildUrl:
          type: string
        baseImage:
          type: string
        customImage:
          type: boolean
        isPrivate:
          type: boolean
        mountedDataLinks:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkDto"
        progress:
          type: array
          items:
            $ref: "#/components/schemas/DataStudioProgressStep"
        labels:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/LabelDbDto"
    DataStudioDto.ParentCheckpoint:
      type: object
      properties:
        checkpointId:
          type: integer
          format: int64
        checkpointName:
          type: string
        sessionId:
          type: string
        studioName:
          type: string
    DataStudioListCheckpointsResponse:
      required:
        - checkpoints
        - totalSize
      type: object
      properties:
        checkpoints:
          type: array
          items:
            $ref: "#/components/schemas/DataStudioCheckpointDto"
        totalSize:
          type: integer
          format: int64
    DataStudioListResponse:
      required:
        - studios
        - totalSize
      type: object
      properties:
        studios:
          type: array
          items:
            $ref: "#/components/schemas/DataStudioDto"
        totalSize:
          type: integer
          format: int64
    DataStudioMountedLinksResponse:
      type: object
      properties:
        dataLinkIds:
          type: array
          items:
            type: string
    DataStudioProgressStep:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/DataStudioProgressStep.Status"
        message:
          type: string
        warnings:
          type: array
          items:
            type: string
    DataStudioProgressStep.Status:
      type: string
      enum:
        - pending
        - in-progress
        - succeeded
        - errored
    DataStudioQueryAttribute:
      type: string
      enum:
        - labels
      x-enum-varnames:
        - labels
    DataStudioStartRequest:
      type: object
      properties:
        configuration:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/DataStudioConfiguration"
        description:
          type: string
          nullable: true
        labelIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
        spot:
          type: boolean
          nullable: true
    DataStudioStartResponse:
      required:
        - jobSubmitted
        - sessionId
        - statusInfo
      type: object
      properties:
        jobSubmitted:
          type: boolean
        sessionId:
          type: string
        statusInfo:
          $ref: "#/components/schemas/DataStudioStatusInfo"
    DataStudioStatus:
      type: string
      enum:
        - starting
        - running
        - stopping
        - stopped
        - errored
        - building
        - buildFailed
      x-enum-varnames:
        - starting
        - running
        - stopping
        - stopped
        - errored
        - building
        - buildFailed
    DataStudioStatusInfo:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/DataStudioStatus"
        message:
          type: string
        lastUpdate:
          type: string
          format: date-time
        stopReason:
          $ref: "#/components/schemas/DataStudioStopReason"
    DataStudioStopReason:
      type: string
      enum:
        - CREDITS_RUN_OUT
        - LIFESPAN_EXPIRED
        - SPOT_RECLAMATION
    DataStudioStopResponse:
      required:
        - jobSubmitted
        - sessionId
        - statusInfo
      type: object
      properties:
        jobSubmitted:
          type: boolean
        sessionId:
          type: string
        statusInfo:
          $ref: "#/components/schemas/DataStudioStatusInfo"
    DataStudioTemplate:
      type: object
      properties:
        repository:
          type: string
        icon:
          type: string
        status:
          $ref: "#/components/schemas/DataStudioVersionStatus"
        tool:
          type: string
    DataStudioTemplatesListResponse:
      required:
        - templates
        - totalSize
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: "#/components/schemas/DataStudioTemplate"
        totalSize:
          type: integer
          format: int64
    DataStudioVersionStatus:
      type: string
      enum:
        - recommended
        - deprecated
        - experimental
        - unsupported
      x-enum-varnames:
        - recommended
        - deprecated
        - experimental
        - unsupported
    DataStudioWorkspaceSettingsResponse:
      type: object
      properties:
        orgId:
          type: integer
          format: int64
        wspId:
          type: integer
          format: int64
        lifespanHours:
          type: integer
          format: int32
    DatasetDto:
      type: object
      properties:
        id:
          type: string
        user:
          $ref: "#/components/schemas/UserInfo"
        workspaceId:
          type: integer
          format: int64
        organizationId:
          type: integer
          format: int64
        name:
          type: string
        lastUpdatedBy:
          $ref: "#/components/schemas/UserInfo"
        description:
          type: string
        mediaType:
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        deleted:
          type: boolean
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        version:
          type: integer
          format: int64
    DatasetVersionDto:
      type: object
      properties:
        datasetId:
          type: string
        datasetName:
          type: string
        datasetDescription:
          type: string
        hasHeader:
          type: boolean
        version:
          type: integer
          format: int64
        createdBy:
          $ref: "#/components/schemas/UserInfo"
        lastUpdated:
          type: string
          format: date-time
        fileName:
          type: string
        mediaType:
          type: string
        workspaceId:
          type: integer
          format: int64
        url:
          type: string
    DeleteCredentialsConflictResponse:
      type: object
      properties:
        credentialsId:
          type: string
        conflicts:
          type: array
          items:
            $ref: "#/components/schemas/DeleteCredentialsConflictResponse.Conflict"
    DeleteCredentialsConflictResponse.Conflict:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
        name:
          type: string
        url:
          type: string
    DeleteManagedCredentialsConflictResponse:
      type: object
      properties:
        managedCredentialsId:
          type: string
          description: "Identifier of credentials that could not be deleted."
        conflicts:
          type: array
          items:
            $ref: "#/components/schemas/DeleteManagedCredentialsConflictResponse.Conflict"
          description: "Array of conflicts preventing deletion."
    DeleteManagedCredentialsConflictResponse.Conflict:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
        name:
          type: string
        url:
          type: string
    DeleteWorkflowsRequest:
      type: object
      properties:
        workflowIds:
          type: array
          items:
            type: string
    DeleteWorkflowsResponse:
      type: object
      properties:
        failedWorkflowIds:
          type: array
          items:
            type: string
    DescribeActionResponse:
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ActionResponseDto"
    DescribeComputeEnvResponse:
      type: object
      properties:
        computeEnv:
          $ref: "#/components/schemas/ComputeEnvResponseDto"
    DescribeCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: "#/components/schemas/Credentials"
    DescribeDatasetResponse:
      type: object
      properties:
        dataset:
          $ref: "#/components/schemas/DatasetDto"
    DescribeLaunchResponse:
      type: object
      properties:
        launch:
          $ref: "#/components/schemas/Launch"
    DescribeOrganizationQuotasResponse:
      type: object
      properties:
        quotas:
          $ref: "#/components/schemas/OrganizationQuotas"
    DescribeOrganizationResponse:
      type: object
      properties:
        organization:
          $ref: "#/components/schemas/OrganizationDbDto"
    DescribePipelineInfoResponse:
      type: object
      properties:
        pipelineInfo:
          $ref: "#/components/schemas/PipelineInfo"
    DescribePipelineResponse:
      type: object
      properties:
        pipeline:
          $ref: "#/components/schemas/PipelineDbDto"
    DescribePipelineSecretResponse:
      type: object
      properties:
        pipelineSecret:
          $ref: "#/components/schemas/PipelineSecret"
    DescribePlatformResponse:
      type: object
      properties:
        metainfo:
          $ref: "#/components/schemas/PlatformMetainfo"
    DescribeTaskResponse:
      type: object
      properties:
        task:
          $ref: "#/components/schemas/Task"
    DescribeTeamResponse:
      type: object
      properties:
        team:
          $ref: "#/components/schemas/TeamDbDto"
    DescribeUserResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserDbDto"
        needConsent:
          type: boolean
        defaultWorkspaceId:
          type: integer
          format: int64
    DescribeWorkflowLaunchResponse:
      type: object
      properties:
        launch:
          $ref: "#/components/schemas/WorkflowLaunchResponse"
    DescribeWorkflowResponse:
      type: object
      properties:
        workflow:
          $ref: "#/components/schemas/Workflow"
        progress:
          $ref: "#/components/schemas/ProgressData"
        platform:
          $ref: "#/components/schemas/ComputePlatformDto"
        jobInfo:
          $ref: "#/components/schemas/JobInfoDto"
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        optimized:
          type: boolean
        messages:
          type: array
          items:
            type: string
    DescribeWorkspaceResponse:
      type: object
      properties:
        workspace:
          $ref: "#/components/schemas/Workspace"
    EfsFileSystem:
      type: object
      properties:
        id:
          type: string
    EksComputeConfig:
      title: Amazon EKS cluster configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/K8sComputeConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              readOnly: true
            workDir:
              type: string
            preRunScript:
              type: string
            postRunScript:
              type: string
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
            nextflowConfig:
              type: string
            region:
              type: string
              description: AWS region
            clusterName:
              type: string
              description: The AWS EKS cluster name
            waveEnabled:
              type: boolean
            fusion2Enabled:
              type: boolean
      required: ["region", "clusterName", "workDir", "region", "clusterName", "workDir"]
    EksPlatformMetaInfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        clusters:
          type: array
          items:
            type: string
    EmptyBodyRequest:
      type: object
    ErrorResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
    EventType:
      type: object
      properties:
        source:
          type: string
        display:
          type: string
        description:
          type: string
        enabled:
          type: boolean
    ForgeConfig:
      type: object
      properties:
        type:
          type: string
          enum:
            - SPOT
            - EC2
            - "SPOT"
            - "EC2"
            - "SPOT"
            - "EC2"
          description: "Instance type. `EC2` deploys uninterruptible on-demand EC2 instances. `SPOT` deploys interruptible Spot instances (lower cost)."
        minCpus:
          type: integer
          format: int32
          description: "Minimum CPUs provisioned in the compute environment."
        maxCpus:
          type: integer
          format: int32
          description: "Maximum CPUs provisioned in the compute environment."
        gpuEnabled:
          type: boolean
          description: "Enable GPU instances."
        ebsAutoScale:
          type: boolean
          description: "If true, provisions an EBS auto-expandable disk in the compute environment. Not compatible with Fusion file system."
        instanceTypes:
          type: array
          items:
            type: string
          description: "Comma-separated list of allowed EC2 instance types."
        allocStrategy:
          type: string
          enum:
            - BEST_FIT
            - BEST_FIT_PROGRESSIVE
            - SPOT_CAPACITY_OPTIMIZED
            - SPOT_PRICE_CAPACITY_OPTIMIZED
            - "BEST_FIT"
            - "BEST_FIT_PROGRESSIVE"
            - "SPOT_CAPACITY_OPTIMIZED"
            - "SPOT_PRICE_CAPACITY_OPTIMIZED"
            - "BEST_FIT"
            - "BEST_FIT_PROGRESSIVE"
            - "SPOT_CAPACITY_OPTIMIZED"
            - "SPOT_PRICE_CAPACITY_OPTIMIZED"
          description: "Determines how Batch selects EC2 instances to carry out job executions. Default: `BEST_FIT_PROGRESSIVE` for on-demand instances and `SPOT_PRICE_CAPACITY_OPTIMIZED` for Spot instances."
        imageId:
          type: string
          description: "Custom AMI ID to use for launching EC2 instances. Must be an AWS Linux-2 ECS-optimized image that meets the compute resource's AMI specification. If omitted, the latest approved version of the Amazon ECS-optimized AMI for compute resources is used."
        vpcId:
          type: string
          description: "VPC ID for networking."
        subnets:
          type: array
          items:
            type: string
          description: "List of VPC subnets to isolate EC2 resources from each other, or the internet."
        securityGroups:
          type: array
          items:
            type: string
          description: "List of security group IDs to define a set of firewall rules that control EC2 compute node traffic."
        fsxMount:
          type: string
          description: "FSx for Lustre mount point."
        fsxName:
          type: string
          description: "FSx for Lustre file system name."
        fsxSize:
          type: integer
          format: int32
          description: "FSx for Lustre file system size in GB."
        disposeOnDeletion:
          type: boolean
          description: "If true, delete AWS resources when compute environment is deleted."
        ec2KeyPair:
          type: string
          description: "EC2 key pair for SSH access."
        allowBuckets:
          type: array
          items:
            type: string
          description: "List of additional S3 buckets accessible to compute environment."
        ebsBlockSize:
          type: integer
          format: int32
          description: "EBS volume size in GB."
        fusionEnabled:
          type: boolean
          description: "(Deprecated) Enable Fusion file system (v1)."
        bidPercentage:
          type: integer
          format: int32
          description: "Maximum allowed price of a Spot instance, as a percentage of the on-demand price for that instance type. Spot instances will not be launched until the current spot price is below the specified cost percentage. Default: `100%`."
        efsCreate:
          type: boolean
          description: "If true, creates new EFS file system."
        efsId:
          type: string
          description: "Existing EFS file system ID."
        efsMount:
          type: string
          description: "EFS file system mount point in containers."
        dragenEnabled:
          type: boolean
          description: "Enable [DRAGEN](https://docs.seqera.io/platform-cloud/supported_software/dragen/overview) support."
        dragenAmiId:
          type: string
          description: "AMI ID for [DRAGEN](https://docs.seqera.io/platform-cloud/supported_software/dragen/overview) instances."
        ebsBootSize:
          type: integer
          format: int32
          description: "Boot disk size for instances, in GB."
        ecsConfig:
          type: string
          description: "Custom configuration for the ECS agent parameters used by AWS Batch. Appended to the `/etc/ecs/ecs.config` file in each cluster node. Altering this file may result in a malfunctioning Batch Forge compute environment. See [ECS agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html)."
        fargateHeadEnabled:
          type: boolean
          description: "Run Nextflow head job on Fargate container service. Requires Fusion file system and Spot instance provisioning model. Fargate is not compatible with EFS and FSx file systems."
        arm64Enabled:
          type: boolean
          description: "Enable ARM64 (Graviton) instances. Requires Fargate, Wave containers, and Fusion file system."
        dragenInstanceType:
          type: string
          description: "Instance type for DRAGEN workflows."
    FsxFileSystem:
      type: object
      properties:
        id:
          type: string
        dns:
          type: string
        mount:
          type: string
    GetProgressResponse:
      type: object
      properties:
        progress:
          $ref: "#/components/schemas/ProgressData"
    GetWorkflowMetricsResponse:
      type: object
      properties:
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/WorkflowMetrics"
    GitHubSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
    GitLabSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        token:
          type: string
          writeOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
    GiteaSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
    GithubActionConfig:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        events:
          type: array
          items:
            type: string
    GithubActionEvent:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        ref:
          type: string
        commitId:
          type: string
        commitMessage:
          type: string
        pusherName:
          type: string
        pusherEmail:
          type: string
        timestamp:
          type: string
          format: date-time
    GkeComputeConfig:
      title: Google GKE cluster configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/K8sComputeConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              readOnly: true
            workDir:
              type: string
            preRunScript:
              type: string
            postRunScript:
              type: string
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
            nextflowConfig:
              type: string
            region:
              type: string
              description: The GKE cluster region - or - zone
            clusterName:
              type: string
              description: The GKE cluster name
            fusion2Enabled:
              type: boolean
            waveEnabled:
              type: boolean
      required: ["region", "clusterName", "workDir", "region", "clusterName", "workDir"]
    GkePlatformMetaInfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        clusters:
          type: array
          items:
            type: string
    GoogleBatchConfig:
      title: Google Batch service configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        location:
          type: string
          description: "Google Cloud location (region) for Batch jobs (e.g., `us-central1`)."
        workDir:
          type: string
        spot:
          type: boolean
          description: "Use Spot instances."
        bootDiskSizeGb:
          type: integer
          format: int32
          description: "Boot disk size in GB for compute instances."
        cpuPlatform:
          type: string
          description: "Google Cloud Batch CPU platform."
        machineType:
          type: string
          description: "Machine type for compute instances (e.g., `n1-standard-4`)."
        projectId:
          type: string
          description: "Google Cloud project ID."
        sshDaemon:
          type: boolean
          description: "Enable SSH daemon for debugging."
        sshImage:
          type: string
          description: "Container image for SSH daemon."
        debugMode:
          type: integer
          format: int32
          description: "Debug level (0-3) for troubleshooting."
        copyImage:
          type: string
          description: "Container image for copying files."
        usePrivateAddress:
          type: boolean
          description: "Use private IP addresses only (no external IPs)."
        labels:
          type: object
          additionalProperties:
            type: string
          description: "Comma-separated list of labels to apply to Batch resources."
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        headJobCpus:
          type: integer
          format: int32
          description: "Number of CPUs allocated for the Nextflow head job."
        headJobMemoryMb:
          type: integer
          format: int32
          description: "Memory allocation for the Nextflow head job in megabytes."
        nextflowConfig:
          type: string
          description: "Additional Nextflow configuration to apply. See [Nextflow config file](https://docs.seqera.io/platform-cloud/launch/advanced#nextflow-config-file)."
        nfsTarget:
          type: string
          description: "NFS server target for shared storage."
        nfsMount:
          type: string
          description: "NFS mount path in containers."
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
          description: "Enable [Wave containers](https://docs.seqera.io/wave). Default: `false`."
        fusion2Enabled:
          type: boolean
          description: "Enable [Fusion file system](https://docs.seqera.io/fusion). Requires Wave containers. Default: `false`."
        serviceAccount:
          type: string
          description: "Specify a service account email address other than the Compute Engine default to execute workflows (recommended for production environments)."
        network:
          type: string
          description: "VPC network name."
        subnetwork:
          type: string
          description: "Subnetwork name within the VPC."
        headJobInstanceTemplate:
          type: string
          description: "Specify the name or fully-qualified reference of a [VM instance template](https://cloud.google.com/compute/docs/instance-templates), without the `template://` prefix, to use for the Nextflow head job."
        computeJobsInstanceTemplate:
          type: string
          description: "Specify the name or fully-qualified reference of a [VM instance template](https://cloud.google.com/compute/docs/instance-templates), without the `template://` prefix, to use for Nextflow compute jobs."
      required: ["location", "workDir", "location", "workDir"]
    GoogleBucket:
      type: object
      properties:
        path:
          type: string
    GoogleCloudConfig:
      title: Google Cloud configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        workDir:
          type: string
        nextflowConfig:
          type: string
          description: "Additional Nextflow configuration to apply. See [Nextflow config file](https://docs.seqera.io/platform-cloud/launch/advanced#nextflow-config-file)."
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
          description: "Enable [Wave containers](https://docs.seqera.io/wave). Default: `false`."
        fusion2Enabled:
          type: boolean
          description: "Enable [Fusion file system](https://docs.seqera.io/fusion). Requires Wave containers. Default: `false`."
        projectId:
          type: string
          description: "Google Cloud project ID."
        region:
          type: string
          description: "Google Cloud region (e.g., `us-central1`)."
        zone:
          type: string
          description: "Google Cloud zone within the region (e.g., `us-central1-a`). If omitted, defaults to the first zone in the alphabetical list."
        serviceAccountEmail:
          type: string
          description: "Service account email for IAM access to instances."
        instanceType:
          type: string
          description: "Machine type (e.g., `n1-standard-1`). If omitted, a default instance type is used."
        imageId:
          type: string
          description: "ID of the image defining the operating system and pre-installed software for the VM. [Ubuntu LTS](https://cloud.google.com/compute/docs/images/os-details#ubuntu_lts) Google public images are supported. For GPU-enabled instances, a [Deep Learning VM](https://cloud.google.com/deep-learning-vm/docs/images#base_versions) base image with CUDA pre-installed is automatically selected. Optimized, Seqera-owned custom images will be available in a future release."
        arm64Enabled:
          type: boolean
          description: "Enable ARM64 instances."
        gpuEnabled:
          type: boolean
          description: "Enable GPU instances."
        bootDiskSizeGb:
          type: integer
          format: int32
          description: "Size of the boot disk for the Compute Engine instance. `pd-standard` is used. If undefined, a default 50 GB volume is used."
        forgedResources:
          type: array
          items:
            type: object
            additionalProperties: true
          description: "Resources created by Cloud Forge (read-only)."
      required: ["region", "workDir", "region", "workDir"]
    GoogleCloudPlatformMetaInfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        zones:
          type: array
          items:
            type: string
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/GoogleBucket"
        instanceTypes:
          type: array
          items:
            $ref: "#/components/schemas/GoogleInstanceType"
        images:
          type: array
          items:
            $ref: "#/components/schemas/GoogleImage"
    GoogleImage:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        arch:
          type: string
    GoogleInstanceType:
      type: object
      properties:
        id:
          type: string
        arch:
          type: string
    GoogleLifeSciencesConfig:
      title: Google life sciences configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        region:
          type: string
        zones:
          type: array
          items:
            type: string
        location:
          type: string
        workDir:
          type: string
        preemptible:
          type: boolean
        bootDiskSizeGb:
          type: integer
          format: int32
        projectId:
          type: string
        sshDaemon:
          type: boolean
        sshImage:
          type: string
        debugMode:
          type: integer
          format: int32
        copyImage:
          type: string
        usePrivateAddress:
          type: boolean
        labels:
          type: object
          additionalProperties:
            type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        nextflowConfig:
          type: string
        nfsTarget:
          type: string
        nfsMount:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
    GooglePlatformMetainfo:
      type: object
      properties:
        locations:
          type: array
          items:
            type: string
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        zones:
          type: array
          items:
            type: string
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/GooglePlatformMetainfo.Bucket"
        filestores:
          type: array
          items:
            $ref: "#/components/schemas/GooglePlatformMetainfo.Filestore"
    GooglePlatformMetainfo.Bucket:
      type: object
      properties:
        path:
          type: string
    GooglePlatformMetainfo.Filestore:
      type: object
      properties:
        target:
          type: string
        name:
          type: string
        location:
          type: string
    GoogleSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        data:
          type: string
          writeOnly: true
    GridPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
    Image:
      required:
        - arch
        - description
        - id
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        arch:
          type: string
    InstanceType:
      required:
        - arch
      type: object
      properties:
        id:
          type: string
        arch:
          type: string
    Iterator_String_:
      type: object
    JobCleanupPolicy:
      type: string
      enum:
        - on_success
        - always
        - never
      x-enum-varnames:
        - on_success
        - always
        - never
    JobInfoDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        operationId:
          type: string
        message:
          type: string
        status:
          type: string
        exitCode:
          type: integer
          format: int32
    JobQueue:
      required:
        - name
        - state
      type: object
      properties:
        name:
          type: string
        state:
          type: string
    K8sComputeConfig:
      title: Kubernetes compute configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        workDir:
          type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        server:
          type: string
          description: "Kubernetes control plane URL (e.g., `https://your-k8s-host.com`)."
        sslCert:
          type: string
          description: "SSL certificate to authenticate the connection with the Kubernetes cluster."
        namespace:
          type: string
          description: "Kubernetes namespace for workflow execution. Default: `default`."
        computeServiceAccount:
          type: string
          description: "Kubernetes service account to use for Nextflow-submitted pipeline jobs. Default: `default`."
        headServiceAccount:
          type: string
          description: "Kubernetes service account to connect to the cluster and launch workflow executions. See [Cluster preparation](https://docs.seqera.io/platform-cloud/compute-envs/k8s#cluster-preparation)."
        storageClaimName:
          type: string
          description: "PersistentVolumeClaim name used as scratch storage for workflow execution, e.g., `tower-scratch`. Must allow `ReadWriteMany` access mode."
        storageMountPath:
          type: string
          description: "Mount path of the persistent volume claim used as scratch storage. Default: `/scratch`."
        podCleanup:
          $ref: "#/components/schemas/PodCleanupPolicy"
          description: "Pod cleanup policy after job completion."
          enum: ["on_success", "always", "never", "on_success", "always", "never"]
        headPodSpec:
          type: string
          description: "Custom configuration for the pod running the Nextflow head job, e.g., `nodeSelector` and `affinity` constraints. Must be a valid PodSpec YAML structure starting with `spec:`."
        servicePodSpec:
          type: string
          description: "Custom configuration for the compute environment service pod, e.g., `nodeSelector` and `affinity` constraints. Must be a valid PodSpec YAML structure starting with `spec:`."
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        headJobCpus:
          type: integer
          format: int32
          description: "Number of CPUs allocated for the Nextflow head job."
        headJobMemoryMb:
          type: integer
          format: int32
          description: "Memory allocation for the Nextflow head job in megabytes."
        nextflowConfig:
          type: string
          description: "Additional Nextflow configuration to apply. See [Nextflow config file](https://docs.seqera.io/platform-cloud/launch/advanced#nextflow-config-file)."
      required: ["server", "sslCert", "workDir", "server", "sslCert", "workDir"]
    K8sPlatformMetaInfo:
      type: object
      properties:
        discriminator:
          type: string
    K8sSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        certificate:
          type: string
        privateKey:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
    LabelDbDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
        isDefault:
          type: boolean
        isDynamic:
          type: boolean
        isInterpolated:
          type: boolean
        dateCreated:
          type: string
          format: date-time
    LabelType:
      type: string
      enum:
        - simple
        - resource
        - all
      x-enum-varnames:
        - simple
        - resource
        - all
    Launch:
      required:
        - dateCreated
        - pipeline
      type: object
      properties:
        id:
          maxLength: 22
          type: string
        computeEnv:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/ComputeEnv_ComputeConfig_"
        pipeline:
          maxLength: 200
          type: string
        workDir:
          type: string
        revision:
          maxLength: 100
          type: string
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        mainScript:
          maxLength: 200
          type: string
        entryName:
          maxLength: 80
          type: string
        schemaName:
          maxLength: 100
          pattern: "[\\p{Graph}&&[^/]]\\p{Graph}+"
          type: string
        resume:
          type: boolean
        resumeLaunchId:
          maxLength: 22
          type: string
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        sessionId:
          maxLength: 36
          type: string
        runName:
          maxLength: 80
          type: string
        configProfiles:
          type: array
          items:
            type: string
        userSecrets:
          type: array
          items:
            type: string
        workspaceSecrets:
          type: array
          items:
            type: string
        optimizationId:
          maxLength: 32
          type: string
        optimizationTargets:
          type: string
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        launchContainer:
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    LaunchActionRequest:
      type: object
      properties:
        params:
          type: object
          additionalProperties: true
    LaunchActionResponse:
      type: object
      properties:
        workflowId:
          type: string
    ListAccessTokensResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: "#/components/schemas/AccessToken"
    ListActionsResponse:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: "#/components/schemas/ListActionsResponse.ActionInfo"
    ListActionsResponse.ActionInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pipeline:
          type: string
        source:
          $ref: "#/components/schemas/Action.Source"
        status:
          $ref: "#/components/schemas/Action.Status"
        lastSeen:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        event:
          $ref: "#/components/schemas/Action.EventType"
        endpoint:
          type: string
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        usageCmd:
          type: string
    ListComputeEnvsResponse:
      type: object
      properties:
        computeEnvs:
          type: array
          items:
            $ref: "#/components/schemas/ListComputeEnvsResponse.Entry"
    ListComputeEnvsResponse.Entry:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        platform:
          type: string
        status:
          $ref: "#/components/schemas/ComputeEnv.Status"
        message:
          type: string
        lastUsed:
          type: string
          format: date-time
        primary:
          type: boolean
        workspaceName:
          type: string
        visibility:
          type: string
        workDir:
          type: string
        credentialsId:
          type: string
        region:
          type: string
    ListCredentialsResponse:
      type: object
      properties:
        credentials:
          type: array
          items:
            $ref: "#/components/schemas/Credentials"
    ListDatasetVersionsResponse:
      type: object
      properties:
        versions:
          type: array
          items:
            $ref: "#/components/schemas/DatasetVersionDto"
    ListDatasetsResponse:
      type: object
      properties:
        datasets:
          type: array
          items:
            $ref: "#/components/schemas/DatasetDto"
    ListEventTypesResponse:
      type: object
      properties:
        eventTypes:
          type: array
          items:
            $ref: "#/components/schemas/EventType"
    ListLabelsResponse:
      type: object
      properties:
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        totalSize:
          type: integer
          format: int64
    ListManagedCredentialsRespDto:
      type: object
      properties:
        managedCredentialsId:
          type: integer
          format: int64
          description: "Managed credentials numeric identifier."
        userId:
          type: integer
          format: int64
          description: "User numeric identifier associated with these credentials."
        userName:
          type: string
          description: "Username of the associated user."
        firstName:
          type: string
          description: "First name of the associated user."
        lastName:
          type: string
          description: "Last name of the associated user."
        avatarUrl:
          type: string
          description: "URL of the user's avatar image."
        provider:
          type: string
          enum:
            - ssh
          description: "Authentication provider type."
        metadata:
          $ref: "#/components/schemas/ManagedCredentialsMetadata"
          description: "Additional metadata for the managed credentials."
    ListManagedCredentialsResponse:
      type: object
      properties:
        managedCredentials:
          type: array
          items:
            $ref: "#/components/schemas/ListManagedCredentialsRespDto"
          description: "Array of managed credentials objects."
        totalSize:
          type: integer
          format: int64
          description: "Total number of managed credentials matching the query."
    ListManagedIdentitiesResponse:
      type: object
      properties:
        managedIdentities:
          type: array
          items:
            $ref: "#/components/schemas/ManagedIdentityDbDto_AbstractGridConfig_"
          description: "Array of managed identities."
        totalSize:
          type: integer
          format: int64
          description: "Total number of managed identities matching the query."
    ListMembersResponse:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: "#/components/schemas/MemberDbDto"
        totalSize:
          type: integer
          format: int64
    ListOrganizationsResponse:
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationDbDto"
        totalSize:
          type: integer
          format: int32
    ListParticipantsResponse:
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: "#/components/schemas/ParticipantDbDto"
        totalSize:
          type: integer
          format: int64
    ListPipelineInfoResponse:
      type: object
      properties:
        pipelines:
          type: array
          items:
            type: string
    ListPipelineSecretsResponse:
      type: object
      properties:
        pipelineSecrets:
          type: array
          items:
            $ref: "#/components/schemas/PipelineSecret"
        totalSize:
          type: integer
          format: int64
    ListPipelinesResponse:
      type: object
      properties:
        pipelines:
          type: array
          items:
            $ref: "#/components/schemas/PipelineDbDto"
        totalSize:
          type: integer
          format: int64
    ListPlatformsResponse:
      type: object
      properties:
        platforms:
          type: array
          items:
            $ref: "#/components/schemas/ComputePlatform"
    ListRegionsResponse:
      type: object
      properties:
        regions:
          type: array
          items:
            $ref: "#/components/schemas/ComputeRegion"
    ListTasksResponse:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/DescribeTaskResponse"
        total:
          type: integer
          format: int64
    ListTeamResponse:
      type: object
      properties:
        teams:
          type: array
          items:
            $ref: "#/components/schemas/TeamDbDto"
        totalSize:
          type: integer
          format: int64
    ListWorkflowsResponse:
      type: object
      properties:
        workflows:
          type: array
          items:
            $ref: "#/components/schemas/ListWorkflowsResponse.ListWorkflowsElement"
        totalSize:
          type: integer
          format: int64
    ListWorkflowsResponse.ListWorkflowsElement:
      type: object
      properties:
        workflow:
          $ref: "#/components/schemas/WorkflowDbDto"
        progress:
          $ref: "#/components/schemas/ProgressData"
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        starred:
          type: boolean
        optimized:
          type: boolean
    ListWorkspacesAndOrgResponse:
      type: object
      properties:
        orgsAndWorkspaces:
          type: array
          items:
            $ref: "#/components/schemas/OrgAndWorkspaceDto"
    ListWorkspacesResponse:
      type: object
      properties:
        workspaces:
          type: array
          items:
            $ref: "#/components/schemas/WorkspaceDbDto"
    LocalPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
    Log:
      type: object
      properties:
        name:
          type: string
        cmd:
          type: array
          items:
            type: string
        start_time:
          type: string
        end_time:
          type: string
        stdout:
          type: string
        stderr:
          type: string
        exit_code:
          type: integer
          format: int32
    LogPage:
      type: object
      properties:
        truncated:
          type: boolean
        entries:
          $ref: "#/components/schemas/Iterator_String_"
        rewindToken:
          type: string
        forwardToken:
          type: string
        pending:
          type: boolean
        message:
          type: string
        downloads:
          type: array
          items:
            $ref: "#/components/schemas/LogPage.Download"
    LogPage.Download:
      type: object
      properties:
        saveName:
          type: string
        fileName:
          type: string
        displayText:
          type: string
    LsfComputeConfig:
      title: IBM LSF configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              readOnly: true
            unitForLimits:
              type: string
            perJobMemLimit:
              type: boolean
            perTaskReserve:
              type: boolean
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
    ManagedCredentialsDbDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "Managed credentials numeric identifier."
    ManagedCredentialsMetadata:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
          description: "Type discriminator for metadata structure (read-only)."
    ManagedIdentityDbDto_AbstractGridConfig_:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "Managed identity numeric identifier."
        name:
          type: string
          description: "Name of the managed identity."
        platform:
          type: string
          enum:
            - altair-platform
            - lsf-platform
            - moab-platform
            - slurm-platform
            - uge-platform
          description: "HPC platform type."
        config:
          $ref: "#/components/schemas/AbstractGridConfig"
          description: "HPC platform-specific configuration for the managed identity."
    Map.Entry_String.String_:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    MemberDbDto:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        userName:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        role:
          $ref: "#/components/schemas/OrgRole"
    MoabComputeConfig:
      title: Moab configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              readOnly: true
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
    MultiRequestFileSchema:
      type: object
      properties:
        file:
          type: string
          format: binary
    NavbarConfig:
      type: object
      properties:
        menus:
          type: array
          items:
            $ref: "#/components/schemas/NavbarConfig.NavbarMenu"
    NavbarConfig.NavbarMenu:
      type: object
      properties:
        label:
          type: string
        url:
          type: string
    OrgAndWorkspaceDto:
      type: object
      properties:
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        orgLogoUrl:
          type: string
        orgType:
          $ref: "#/components/schemas/OrgType"
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        workspaceFullName:
          type: string
        visibility:
          $ref: "#/components/schemas/Visibility"
        roles:
          type: array
          items:
            type: string
    OrgRole:
      type: string
      enum:
        - owner
        - member
        - collaborator
      x-enum-varnames:
        - owner
        - member
        - collaborator
    OrgType:
      type: string
      enum:
        - academic
        - evaluating
        - pro
        - basic
        - internal
      x-enum-varnames:
        - academic
        - evaluating
        - pro
        - basic
        - internal
    Organization:
      required:
        - fullName
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          readOnly: true
        name:
          maxLength: 40
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,38}$"
          type: string
        fullName:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        location:
          maxLength: 100
          type: string
        website:
          pattern: ""
          type: string
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
    OrganizationDbDto:
      type: object
      properties:
        paying:
          type: boolean
          deprecated: true
        orgId:
          type: integer
          format: int64
        name:
          type: string
        fullName:
          type: string
        description:
          type: string
        location:
          type: string
        website:
          type: string
        logoId:
          type: string
        logoUrl:
          type: string
        memberId:
          type: integer
          format: int64
        memberRole:
          $ref: "#/components/schemas/OrgRole"
        type:
          $ref: "#/components/schemas/OrgType"
    OrganizationQuotas:
      type: object
      properties:
        maxWorkspaces:
          type: integer
          format: int64
        maxMembers:
          type: integer
          format: int64
        maxTeams:
          type: integer
          format: int64
        maxPipelinesPerWorkspace:
          type: integer
          format: int64
        maxParticipantsPerWorkspace:
          type: integer
          format: int64
        maxDatasetsPerWorkspace:
          type: integer
          format: int64
        maxVersionsPerDataset:
          type: integer
          format: int64
        maxRuns:
          type: integer
          format: int64
        maxRunHistory:
          type: integer
          format: int64
        maxLabelsPerWorkspace:
          type: integer
          format: int64
        maxDataStudiosRunning:
          type: integer
          format: int64
        maxSeqeraComputeComputeEnvs:
          type: integer
          format: int64
        maxFusionThroughputBytes:
          type: integer
          format: int64
    ParticipantDbDto:
      type: object
      properties:
        participantId:
          type: integer
          format: int64
        memberId:
          type: integer
          format: int64
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        orgRole:
          $ref: "#/components/schemas/OrgRole"
        teamId:
          type: integer
          format: int64
        teamName:
          type: string
        wspRole:
          $ref: "#/components/schemas/WspRole"
        type:
          $ref: "#/components/schemas/ParticipantType"
        teamAvatarUrl:
          type: string
        userAvatarUrl:
          type: string
    ParticipantType:
      type: string
      enum:
        - MEMBER
        - TEAM
        - COLLABORATOR
    PipelineDbDto:
      type: object
      properties:
        pipelineId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        repository:
          type: string
        userId:
          type: integer
          format: int64
        userName:
          type: string
        userFirstName:
          type: string
        userLastName:
          type: string
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        visibility:
          type: string
        deleted:
          type: boolean
        lastUpdated:
          type: string
          format: date-time
        optimizationId:
          type: string
        optimizationTargets:
          type: string
        optimizationStatus:
          $ref: "#/components/schemas/PipelineOptimizationStatus"
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        computeEnv:
          $ref: "#/components/schemas/ComputeEnvDbDto"
    PipelineInfo:
      type: object
      properties:
        projectName:
          type: string
        simpleName:
          type: string
        repositoryUrl:
          type: string
        cloneUrl:
          type: string
        provider:
          type: string
        configFiles:
          type: array
          items:
            type: string
        workDirs:
          type: array
          items:
            type: string
        revisions:
          type: array
          items:
            type: string
        profiles:
          type: array
          items:
            type: string
        manifest:
          $ref: "#/components/schemas/WfManifest"
        warnings:
          type: array
          items:
            type: string
    PipelineOptimizationStatus:
      type: string
      enum:
        - OPTIMIZED
        - OPTIMIZABLE
        - UNAVAILABLE
    PipelineQueryAttribute:
      type: string
      enum:
        - optimized
        - labels
        - computeEnv
      x-enum-varnames:
        - optimized
        - labels
        - computeEnv
    PipelineSchemaAttributes:
      type: string
      enum:
        - schema
        - params
      x-enum-varnames:
        - schema
        - params
    PipelineSchemaResponse:
      required:
        - schema
      type: object
      properties:
        schema:
          type: string
        params:
          type: string
    PipelineSecret:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          maxLength: 100
          pattern: "^[a-zA-Z_](?:[0-9A-Za-z]+|(_)(?!\\1)){1,49}$"
          type: string
        lastUsed:
          type: string
          format: date-time
          readOnly: true
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
    PlatformMetainfo:
      type: object
      discriminator:
        propertyName: discriminator
        mapping:
          gke-platform: "#/components/schemas/GkePlatformMetaInfo"
          aws-cloud: "#/components/schemas/AwsCloudPlatformMetainfo"
          seqeracompute: "#/components/schemas/SeqeraComputePlatformMetainfo"
          k8s-platform: "#/components/schemas/K8sPlatformMetaInfo"
          grid: "#/components/schemas/GridPlatformMetainfo"
          aws-batch: "#/components/schemas/AwsBatchPlatformMetainfo"
          google-cloud: "#/components/schemas/GoogleCloudPlatformMetaInfo"
          local-platform: "#/components/schemas/LocalPlatformMetainfo"
          azure-batch: "#/components/schemas/AzBatchPlatformMetainfo"
          eks-platform: "#/components/schemas/EksPlatformMetaInfo"
      oneOf:
        - $ref: "#/components/schemas/AwsBatchPlatformMetainfo"
        - $ref: "#/components/schemas/AwsCloudPlatformMetainfo"
        - $ref: "#/components/schemas/GooglePlatformMetainfo"
        - $ref: "#/components/schemas/GoogleCloudPlatformMetaInfo"
        - $ref: "#/components/schemas/AzBatchPlatformMetainfo"
        - $ref: "#/components/schemas/EksPlatformMetaInfo"
        - $ref: "#/components/schemas/GkePlatformMetaInfo"
        - $ref: "#/components/schemas/K8sPlatformMetaInfo"
        - $ref: "#/components/schemas/GridPlatformMetainfo"
        - $ref: "#/components/schemas/SeqeraComputePlatformDescriber"
        - $ref: "#/components/schemas/LocalPlatformMetainfo"
    PodCleanupPolicy:
      type: string
      enum:
        - on_success
        - always
        - never
      x-enum-varnames:
        - on_success
        - always
        - never
    ProcessLoad:
      required:
        - aborted
        - cached
        - cpuLoad
        - cpuTime
        - cpus
        - failed
        - ignored
        - invCtxSwitch
        - loadCpus
        - loadMemory
        - loadTasks
        - memoryReq
        - memoryRss
        - peakCpus
        - peakMemory
        - peakTasks
        - pending
        - process
        - readBytes
        - retries
        - running
        - submitted
        - succeeded
        - volCtxSwitch
        - writeBytes
      type: object
      properties:
        pending:
          type: integer
          format: int64
        submitted:
          type: integer
          format: int64
        running:
          type: integer
          format: int64
        succeeded:
          type: integer
          format: int64
        failed:
          type: integer
          format: int64
        cached:
          type: integer
          format: int64
        aborted:
          type: integer
          format: int64
        retries:
          type: integer
          format: int64
        ignored:
          type: integer
          format: int64
        memoryEfficiency:
          type: number
          format: float
        cpuEfficiency:
          type: number
          format: float
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        version:
          type: integer
          format: int64
        process:
          type: string
        cpus:
          type: integer
          format: int64
          deprecated: true
        cpuTime:
          type: integer
          format: int64
          deprecated: true
        cpuLoad:
          type: integer
          format: int64
          deprecated: true
        memoryRss:
          type: integer
          format: int64
          deprecated: true
        memoryReq:
          type: integer
          format: int64
          deprecated: true
        readBytes:
          type: integer
          format: int64
          deprecated: true
        writeBytes:
          type: integer
          format: int64
          deprecated: true
        volCtxSwitch:
          type: integer
          format: int64
          deprecated: true
        invCtxSwitch:
          type: integer
          format: int64
          deprecated: true
        loadTasks:
          type: integer
          format: int64
          deprecated: true
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakCpus:
          type: integer
          format: int64
        peakTasks:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
    ProgressData:
      type: object
      properties:
        workflowProgress:
          $ref: "#/components/schemas/WorkflowLoad"
        processesProgress:
          type: array
          items:
            $ref: "#/components/schemas/ProcessLoad"
        totalProcesses:
          type: integer
          format: int32
    RandomWorkflowNameResponse:
      type: object
      properties:
        name:
          type: string
    ResourceData:
      type: object
      properties:
        warnings:
          type: array
          items:
            type: string
        mean:
          type: number
          format: float
        min:
          type: number
          format: float
        q1:
          type: number
          format: float
        q2:
          type: number
          format: float
        q3:
          type: number
          format: float
        max:
          type: number
          format: float
        minLabel:
          type: string
        maxLabel:
          type: string
        q1Label:
          type: string
        q2Label:
          type: string
        q3Label:
          type: string
    RunId:
      type: object
      properties:
        run_id:
          type: string
    RunListResponse:
      type: object
      properties:
        runs:
          type: array
          items:
            $ref: "#/components/schemas/RunStatus"
        next_page_token:
          type: string
    RunLog:
      type: object
      properties:
        run_id:
          type: string
        request:
          $ref: "#/components/schemas/RunRequest"
        state:
          $ref: "#/components/schemas/State"
        run_log:
          $ref: "#/components/schemas/Log"
        task_logs:
          type: array
          items:
            $ref: "#/components/schemas/Log"
        outputs: {}
    RunRequest:
      type: object
      properties:
        workflow_params:
          type: string
        workflow_type:
          type: string
        workflow_type_version:
          type: string
        tags:
          type: object
          additionalProperties:
            type: string
        workflow_engine_parameters:
          type: object
          additionalProperties:
            type: string
        workflow_url:
          type: string
    RunStatus:
      type: object
      properties:
        run_id:
          type: string
        state:
          $ref: "#/components/schemas/State"
    S3SecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        accessKey:
          type: string
        secretKey:
          type: string
          writeOnly: true
        pathStyleAccessEnabled:
          type: boolean
    SSHSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
        privateKey:
          type: string
          writeOnly: true
        passphrase:
          type: string
          writeOnly: true
    SecurityGroup:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        vpcId:
          type: string
    SecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          readOnly: true
      discriminator:
        propertyName: discriminator
        mapping:
          s3: "#/components/schemas/S3SecurityKeys"
          github: "#/components/schemas/GitHubSecurityKeys"
          azurerepos: "#/components/schemas/AzureReposSecurityKeys"
          azure_entra: "#/components/schemas/AzureEntraKeys"
          container-reg: "#/components/schemas/ContainerRegistryKeys"
          tw-agent: "#/components/schemas/AgentSecurityKeys"
          k8s: "#/components/schemas/K8sSecurityKeys"
          ssh: "#/components/schemas/SSHSecurityKeys"
          google: "#/components/schemas/GoogleSecurityKeys"
          bitbucket: "#/components/schemas/BitBucketSecurityKeys"
          gitea: "#/components/schemas/GiteaSecurityKeys"
          seqeracompute: "#/components/schemas/SeqeraComputeSecurityKeys"
          codecommit: "#/components/schemas/CodeCommitSecurityKeys"
          gitlab: "#/components/schemas/GitLabSecurityKeys"
          aws: "#/components/schemas/AwsSecurityKeys"
          azure: "#/components/schemas/AzureSecurityKeys"
      oneOf:
        - $ref: "#/components/schemas/AwsSecurityKeys"
        - $ref: "#/components/schemas/GoogleSecurityKeys"
        - $ref: "#/components/schemas/GitHubSecurityKeys"
        - $ref: "#/components/schemas/GitLabSecurityKeys"
        - $ref: "#/components/schemas/BitBucketSecurityKeys"
        - $ref: "#/components/schemas/GiteaSecurityKeys"
        - $ref: "#/components/schemas/SSHSecurityKeys"
        - $ref: "#/components/schemas/K8sSecurityKeys"
        - $ref: "#/components/schemas/AzureSecurityKeys"
        - $ref: "#/components/schemas/AzureReposSecurityKeys"
        - $ref: "#/components/schemas/ContainerRegistryKeys"
        - $ref: "#/components/schemas/AgentSecurityKeys"
        - $ref: "#/components/schemas/CodeCommitSecurityKeys"
        - $ref: "#/components/schemas/AzureEntraKeys"
        - $ref: "#/components/schemas/SeqeraComputeSecurityKeys"
        - $ref: "#/components/schemas/S3SecurityKeys"
    SeqeraComputeConfig:
      title: Seqera Compute configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        region:
          type: string
          description: "Target execution region. See supported AWS regions [under step 4 here](https://docs.seqera.io/platform-cloud/compute-envs/seqera-compute#create-a-seqera-compute-environment)."
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        defaultDataRetentionPolicy:
          type: boolean
          description: "If true, intermediary files are deleted after 28 days to manage storage cost/usage."
        nextflowConfig:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
      required: ["region", "workDir", "region", "workDir"]
    SeqeraComputePlatformDescriber:
      type: object
    SeqeraComputePlatformMetainfo:
      type: object
      properties:
        warnings:
          type: array
          items:
            type: string
        jobQueues:
          type: array
          items:
            $ref: "#/components/schemas/JobQueue"
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/Bucket"
        fileSystems:
          type: array
          items:
            $ref: "#/components/schemas/FsxFileSystem"
        efsFileSystems:
          type: array
          items:
            $ref: "#/components/schemas/EfsFileSystem"
        keyPairs:
          type: array
          items:
            type: string
        vpcs:
          type: array
          items:
            $ref: "#/components/schemas/Vpc"
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
        securityGroups:
          type: array
          items:
            $ref: "#/components/schemas/SecurityGroup"
        subnets:
          type: array
          items:
            $ref: "#/components/schemas/Subnet"
        instanceFamilies:
          type: array
          items:
            type: string
        allocStrategy:
          type: array
          items:
            type: string
        instanceTypes:
          type: array
          items:
            $ref: "#/components/schemas/InstanceType"
        discriminator:
          type: string
    SeqeraComputeSecurityKeys:
      type: object
      allOf:
        - $ref: "#/components/schemas/AwsSecurityKeys"
        - properties:
            discriminator:
              type: string
              readOnly: true
    ServiceInfo:
      type: object
      properties:
        version:
          type: string
        apiVersion:
          type: string
        commitId:
          type: string
        authTypes:
          type: array
          items:
            type: string
        loginPath:
          type: string
        navbar:
          $ref: "#/components/schemas/NavbarConfig"
        heartbeatInterval:
          type: integer
          format: int32
        userWorkspaceEnabled:
          type: boolean
        allowInstanceCredentials:
          type: boolean
        landingUrl:
          type: string
        termsOfUseUrl:
          type: string
        contentUrl:
          type: string
        analytics:
          $ref: "#/components/schemas/Analytics"
        allowLocalRepos:
          type: boolean
          deprecated: true
        contentMaxFileSize:
          type: integer
          format: int64
        waveEnabled:
          type: boolean
        groundswellEnabled:
          type: boolean
        groundswellAllowedWorkspaces:
          type: array
          items:
            type: integer
            format: int64
        scmsServerUrl:
          type: string
        forgePrefix:
          type: string
        seqeraCloud:
          type: boolean
        evalWorkspaceIds:
          type: array
          items:
            type: integer
            format: int64
        contactEmail:
          type: string
        allowNextflowCliLogs:
          type: boolean
        logoutUrl:
          type: string
          nullable: true
    ServiceInfoResponse:
      type: object
      properties:
        serviceInfo:
          $ref: "#/components/schemas/ServiceInfo"
    SlurmComputeConfig:
      title: Slurm configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              readOnly: true
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
    State:
      type: string
      enum:
        - UNKNOWN
        - QUEUED
        - INITIALIZING
        - RUNNING
        - PAUSED
        - COMPLETE
        - EXECUTOR_ERROR
        - SYSTEM_ERROR
        - CANCELED
        - CANCELING
    StudioCheckpointStatus:
      type: string
      enum:
        - empty
        - interim
        - finalized
        - invalid
      x-enum-varnames:
        - empty
        - interim
        - finalized
        - invalid
    SubmitWorkflowLaunchRequest:
      type: object
      properties:
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
    SubmitWorkflowLaunchResponse:
      type: object
      properties:
        workflowId:
          type: string
    Subnet:
      type: object
      properties:
        id:
          type: string
        zone:
          type: string
        vpcId:
          type: string
    Task:
      required:
        - status
        - taskId
      type: object
      properties:
        hash:
          type: string
        name:
          type: string
        process:
          type: string
        tag:
          type: string
        submit:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        complete:
          type: string
          format: date-time
        module:
          type: array
          items:
            type: string
        container:
          type: string
        attempt:
          type: integer
          format: int32
        script:
          type: string
        scratch:
          type: string
        workdir:
          type: string
        queue:
          type: string
        cpus:
          type: integer
          format: int32
        memory:
          type: integer
          format: int64
        disk:
          type: integer
          format: int64
        time:
          type: integer
          format: int64
        env:
          type: string
        executor:
          type: string
        machineType:
          type: string
        cloudZone:
          type: string
        priceModel:
          $ref: "#/components/schemas/CloudPriceModel"
        cost:
          type: number
        errorAction:
          type: string
        exitStatus:
          type: integer
          format: int32
        duration:
          type: integer
          format: int64
        realtime:
          type: integer
          format: int64
        nativeId:
          type: string
        pcpu:
          type: number
          format: double
        pmem:
          type: number
          format: double
        rss:
          type: integer
          format: int64
        vmem:
          type: integer
          format: int64
        peakRss:
          type: integer
          format: int64
        peakVmem:
          type: integer
          format: int64
        rchar:
          type: integer
          format: int64
        wchar:
          type: integer
          format: int64
        syscr:
          type: integer
          format: int64
        syscw:
          type: integer
          format: int64
        readBytes:
          type: integer
          format: int64
        writeBytes:
          type: integer
          format: int64
        volCtxt:
          type: integer
          format: int64
        invCtxt:
          type: integer
          format: int64
        exit:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
          nullable: true
        taskId:
          type: integer
          format: int64
        status:
          $ref: "#/components/schemas/TaskStatus"
        dateCreated:
          type: string
          format: date-time
          nullable: true
        lastUpdated:
          type: string
          format: date-time
          nullable: true
    TaskStatus:
      type: string
      enum:
        - NEW
        - SUBMITTED
        - RUNNING
        - CACHED
        - COMPLETED
        - FAILED
        - ABORTED
    Team:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          readOnly: true
        name:
          maxLength: 40
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,38}$"
          type: string
        description:
          maxLength: 250
          type: string
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
    TeamDbDto:
      type: object
      properties:
        teamId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        avatarUrl:
          type: string
        membersCount:
          type: integer
          format: int64
    TraceBeginRequest:
      type: object
      properties:
        launchId:
          type: string
          deprecated: true
        workflow:
          $ref: "#/components/schemas/Workflow"
        processNames:
          type: array
          items:
            type: string
        towerLaunch:
          type: boolean
    TraceBeginResponse:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/TraceProcessingStatus"
        workflowId:
          type: string
        watchUrl:
          type: string
    TraceCompleteRequest:
      type: object
      properties:
        workflow:
          $ref: "#/components/schemas/Workflow"
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/WorkflowMetrics"
        progress:
          $ref: "#/components/schemas/TraceProgressData"
    TraceCompleteResponse:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/TraceProcessingStatus"
        workflowId:
          type: string
    TraceCreateRequest:
      type: object
      properties:
        launchId:
          type: string
          deprecated: true
        sessionId:
          type: string
        runName:
          type: string
        projectName:
          type: string
        repository:
          type: string
        workflowId:
          type: string
    TraceCreateResponse:
      type: object
      properties:
        message:
          type: string
        workflowId:
          type: string
    TraceHeartbeatRequest:
      type: object
      properties:
        progress:
          $ref: "#/components/schemas/TraceProgressData"
    TraceHeartbeatResponse:
      type: object
      properties:
        message:
          type: string
    TraceProcessingStatus:
      type: string
      enum:
        - OK
        - KO
    TraceProgressData:
      type: object
      properties:
        pending:
          type: integer
          format: int32
        submitted:
          type: integer
          format: int32
        running:
          type: integer
          format: int32
        succeeded:
          type: integer
          format: int32
        cached:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
        aborted:
          type: integer
          format: int32
        stored:
          type: integer
          format: int32
        ignored:
          type: integer
          format: int32
        retries:
          type: integer
          format: int32
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakRunning:
          type: integer
          format: int32
        peakCpus:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
        processes:
          type: array
          items:
            $ref: "#/components/schemas/TraceProgressDetail"
    TraceProgressDetail:
      type: object
      properties:
        index:
          type: integer
          format: int32
        name:
          type: string
        pending:
          type: integer
          format: int32
        submitted:
          type: integer
          format: int32
        running:
          type: integer
          format: int32
        succeeded:
          type: integer
          format: int32
        cached:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
        aborted:
          type: integer
          format: int32
        stored:
          type: integer
          format: int32
        ignored:
          type: integer
          format: int32
        retries:
          type: integer
          format: int32
        terminated:
          type: boolean
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakRunning:
          type: integer
          format: int32
        peakCpus:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
    TraceProgressRequest:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/Task"
        progress:
          $ref: "#/components/schemas/TraceProgressData"
        containers:
          type: array
          items:
            $ref: "#/components/schemas/ContainerData"
    TraceProgressResponse:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/TraceProcessingStatus"
        workflowId:
          type: string
    UnivaComputeConfig:
      title: Univa Grid Engine configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              readOnly: true
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
    UpdateActionRequest:
      type: object
      properties:
        name:
          type: string
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
    UpdateComputeEnvRequest:
      type: object
      properties:
        name:
          type: string
          description: "New name for the compute environment. Must be unique within workspace."
        credentialsId:
          type: string
          description: "Updated credentials identifier. Changing credentials may affect running workflows."
    UpdateCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: "#/components/schemas/Credentials"
    UpdateDatasetRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    UpdateLabelRequest:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        isDefault:
          type: boolean
    UpdateLabelResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        isDefault:
          type: boolean
    UpdateManagedCredentialsRequest:
      type: object
      properties:
        provider:
          type: string
          enum:
            - ssh
          description: "Authentication provider type. Currently supports `ssh`."
        credentials:
          $ref: "#/components/schemas/Credentials"
          description: "Updated authentication credentials configuration."
        metadata:
          $ref: "#/components/schemas/ManagedCredentialsMetadata"
          description: "Additional metadata for the managed credentials."
    UpdateManagedIdentityRequest:
      type: object
      properties:
        managedIdentity:
          $ref: "#/components/schemas/ManagedIdentityDbDto_AbstractGridConfig_"
          description: "Updated managed identity configuration object."
    UpdateMemberRoleRequest:
      type: object
      properties:
        role:
          $ref: "#/components/schemas/OrgRole"
    UpdateOrganizationRequest:
      type: object
      properties:
        fullName:
          type: string
        name:
          type: string
        description:
          type: string
        location:
          type: string
        website:
          type: string
        logoId:
          type: string
        paying:
          type: boolean
          nullable: true
          deprecated: true
        type:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/OrgType"
    UpdateParticipantRoleRequest:
      type: object
      properties:
        role:
          $ref: "#/components/schemas/WspRole"
    UpdatePipelineRequest:
      type: object
      properties:
        name:
          type: string
          description: "Pipeline name. Must be unique within the workspace."
        description:
          type: string
          description: "Pipeline description."
        icon:
          type: string
          description: "Pipeline icon URL."
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
          description: "Launch configuration for the pipeline."
        labelIds:
          type: array
          items:
            type: integer
            format: int64
          description: "Array of label IDs to assign to the pipeline. If null, empty, or omitted, all existing labels are removed. Label IDs to be preserved must be included in your request."
    UpdatePipelineResponse:
      type: object
      properties:
        pipeline:
          $ref: "#/components/schemas/PipelineDbDto"
    UpdatePipelineSecretRequest:
      type: object
      properties:
        value:
          type: string
    UpdateTeamRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        avatarId:
          type: string
    UpdateWorkspaceRequest:
      type: object
      properties:
        name:
          type: string
        fullName:
          type: string
        description:
          type: string
        visibility:
          $ref: "#/components/schemas/Visibility"
    UploadDatasetVersionResponse:
      type: object
      properties:
        version:
          $ref: "#/components/schemas/DatasetVersionDto"
    UploadEtag:
      type: object
      properties:
        partNumber:
          type: integer
          format: int32
        eTag:
          type: string
    UserDbDto:
      required:
        - email
        - userName
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          maxLength: 40
          type: string
        email:
          maxLength: 255
          type: string
          format: email
        firstName:
          maxLength: 100
          type: string
        lastName:
          maxLength: 100
          type: string
        organization:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        avatar:
          type: string
        avatarId:
          type: string
        notification:
          type: boolean
        termsOfUseConsent:
          type: boolean
        marketingConsent:
          type: boolean
        lastAccess:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        deleted:
          type: boolean
    UserInfo:
      required:
        - avatar
        - email
        - id
        - userName
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          type: string
        email:
          type: string
        avatar:
          type: string
    Visibility:
      type: string
      enum:
        - PRIVATE
        - SHARED
    Vpc:
      type: object
      properties:
        id:
          type: string
        isDefault:
          type: boolean
    WesErrorResponse:
      type: object
      properties:
        msg:
          type: string
        status_code:
          type: integer
          format: int32
    WfFusionMeta:
      type: object
      properties:
        enabled:
          type: boolean
        version:
          maxLength: 20
          type: string
    WfManifest:
      type: object
      properties:
        nextflowVersion:
          maxLength: 20
          type: string
        defaultBranch:
          maxLength: 20
          type: string
        version:
          maxLength: 20
          type: string
        homePage:
          maxLength: 200
          type: string
        gitmodules:
          maxLength: 150
          type: string
        description:
          maxLength: 1024
          type: string
        name:
          maxLength: 150
          type: string
        mainScript:
          maxLength: 100
          type: string
        author:
          maxLength: 150
          type: string
        icon:
          maxLength: 255
          type: string
    WfNextflow:
      type: object
      properties:
        version:
          maxLength: 20
          type: string
        build:
          maxLength: 10
          type: string
        timestamp:
          type: string
          format: date-time
    WfStats:
      type: object
      properties:
        computeTimeFmt:
          maxLength: 50
          type: string
        cachedCount:
          type: integer
          format: int32
        failedCount:
          type: integer
          format: int32
        ignoredCount:
          type: integer
          format: int32
        succeedCount:
          type: integer
          format: int32
        cachedCountFmt:
          type: string
        succeedCountFmt:
          type: string
        failedCountFmt:
          type: string
        ignoredCountFmt:
          type: string
        cachedPct:
          type: number
          format: float
        failedPct:
          type: number
          format: float
        succeedPct:
          type: number
          format: float
        ignoredPct:
          type: number
          format: float
        cachedDuration:
          type: integer
          format: int64
        failedDuration:
          type: integer
          format: int64
        succeedDuration:
          type: integer
          format: int64
    WfWaveMeta:
      type: object
      properties:
        enabled:
          type: boolean
    Workflow:
      required:
        - commandLine
        - projectName
        - runName
        - sessionId
        - submit
        - userName
        - workDir
      type: object
      properties:
        requiresAttention:
          type: boolean
        status:
          $ref: "#/components/schemas/WorkflowStatus"
        ownerId:
          type: integer
          format: int64
          readOnly: true
        repository:
          type: string
        id:
          maxLength: 16
          type: string
        submit:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        complete:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        runName:
          maxLength: 80
          type: string
        sessionId:
          maxLength: 36
          type: string
        profile:
          maxLength: 100
          type: string
        workDir:
          type: string
        commitId:
          maxLength: 40
          type: string
        userName:
          maxLength: 40
          type: string
        scriptId:
          maxLength: 40
          type: string
        revision:
          maxLength: 100
          type: string
        commandLine:
          maxLength: 8096
          type: string
        projectName:
          maxLength: 200
          type: string
        scriptName:
          maxLength: 100
          type: string
        launchId:
          maxLength: 22
          type: string
        configFiles:
          type: array
          items:
            type: string
        params:
          type: object
          additionalProperties: true
        configText:
          type: string
        manifest:
          $ref: "#/components/schemas/WfManifest"
        nextflow:
          $ref: "#/components/schemas/WfNextflow"
        stats:
          $ref: "#/components/schemas/WfStats"
        fusion:
          $ref: "#/components/schemas/WfFusionMeta"
        wave:
          $ref: "#/components/schemas/WfWaveMeta"
        errorMessage:
          type: string
        errorReport:
          type: string
        deleted:
          type: boolean
          readOnly: true
        projectDir:
          type: string
        homeDir:
          type: string
        container:
          type: string
        containerEngine:
          type: string
        scriptFile:
          type: string
        launchDir:
          type: string
        duration:
          type: integer
          format: int64
        exitStatus:
          type: integer
          format: int32
        resume:
          type: boolean
        success:
          type: boolean
        logFile:
          maxLength: 255
          type: string
        outFile:
          maxLength: 255
          type: string
        operationId:
          maxLength: 110
          type: string
    WorkflowDbDto:
      type: object
      properties:
        messages:
          type: array
          items:
            type: string
        id:
          type: string
        ownerId:
          type: integer
          format: int64
        submit:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        complete:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        runName:
          type: string
        sessionId:
          type: string
        profile:
          type: string
        workDir:
          type: string
        commitId:
          type: string
        userName:
          type: string
        scriptId:
          type: string
        revision:
          type: string
        commandLine:
          type: string
        projectName:
          type: string
        scriptName:
          type: string
        launchId:
          type: string
        status:
          $ref: "#/components/schemas/WorkflowStatus"
        requiresAttention:
          type: boolean
        configFiles:
          type: array
          items:
            type: string
        params:
          type: object
          additionalProperties: true
        configText:
          type: string
        manifest:
          $ref: "#/components/schemas/WfManifest"
        nextflow:
          $ref: "#/components/schemas/WfNextflow"
        stats:
          $ref: "#/components/schemas/WfStats"
        errorMessage:
          type: string
        errorReport:
          type: string
        deleted:
          type: boolean
        projectDir:
          type: string
        homeDir:
          type: string
        container:
          type: string
        repository:
          type: string
        containerEngine:
          type: string
        scriptFile:
          type: string
        launchDir:
          type: string
        duration:
          type: integer
          format: int64
        exitStatus:
          type: integer
          format: int32
        resume:
          type: boolean
        success:
          type: boolean
    WorkflowLaunchRequest:
      type: object
      properties:
        id:
          type: string
          description: "Launch configuration identifier."
        computeEnvId:
          type: string
          description: "Compute environment identifier where the pipeline will run. Defaults to workspace primary compute environment if omitted."
        runName:
          type: string
          description: "Custom run name for the workflow execution."
        pipeline:
          type: string
          description: "Pipeline repository URL (e.g., `https://github.com/nextflow-io/hello`)."
        workDir:
          type: string
          description: "Work directory path where workflow intermediate files are stored. Defaults to compute environment work directory if omitted."
        revision:
          type: string
          description: "Git revision, branch, or tag to use."
        sessionId:
          type: string
          description: "Nextflow session identifier for resuming failed runs."
        configProfiles:
          type: array
          items:
            type: string
          description: "Array of Nextflow configuration profile names to apply."
        userSecrets:
          type: array
          items:
            type: string
          description: "Array of user secrets to make available to the pipeline."
        workspaceSecrets:
          type: array
          items:
            type: string
          description: "Array of workspace secrets to make available to the pipeline."
        configText:
          type: string
          description: "Nextflow configuration as text (overrides config files)."
        towerConfig:
          type: string
          description: "Platform-specific configuration options."
        paramsText:
          type: string
          description: "Pipeline parameters in JSON or YAML format."
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        mainScript:
          type: string
          description: "Alternative main script filename. Default: `main.nf`."
        entryName:
          type: string
          description: "Workflow entry point name when using Nextflow DSL2."
        schemaName:
          type: string
          description: "Name of the pipeline schema to use."
        resume:
          type: boolean
          description: "Enable resume to restart workflow execution from the last successful process. See [Resume a workflow run](https://docs.seqera.io/platform-cloud/launch/cache-resume#resume-a-workflow-run)."
        pullLatest:
          type: boolean
          description: "Pull the latest version of the pipeline from the repository."
        stubRun:
          type: boolean
          description: "Execute a stub run for testing (processes return dummy results)."
        optimizationId:
          type: string
          description: "Optimization configuration identifier. See [Pipeline resource optimization](https://docs.seqera.io/platform-cloud/pipeline-optimization/overview)."
        optimizationTargets:
          type: string
          description: "Comma-separated list of optimization targets. See [Pipeline resource optimization](https://docs.seqera.io/platform-cloud/pipeline-optimization/overview)."
        labelIds:
          type: array
          items:
            type: integer
            format: int64
          description: "Array of label IDs to assign to each pipeline run."
        headJobCpus:
          type: integer
          format: int32
          description: "Number of CPUs allocated for the Nextflow head job."
        headJobMemoryMb:
          type: integer
          format: int32
          description: "Memory allocation for the Nextflow head job in megabytes."
        launchContainer:
          type: string
          description: "Container image to use for the Nextflow launcher."
        dateCreated:
          type: string
          format: date-time
          description: "Timestamp when the launch configuration was created."
    WorkflowLaunchResponse:
      type: object
      properties:
        id:
          type: string
        computeEnv:
          $ref: "#/components/schemas/ComputeEnv_ComputeConfig_"
        pipeline:
          type: string
        pipelineId:
          type: integer
          format: int64
        workDir:
          type: string
        revision:
          type: string
        sessionId:
          type: string
        configProfiles:
          type: array
          items:
            type: string
        userSecrets:
          type: array
          items:
            type: string
        workspaceSecrets:
          type: array
          items:
            type: string
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        mainScript:
          type: string
        entryName:
          type: string
        schemaName:
          type: string
        resume:
          type: boolean
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        resumeDir:
          type: string
        resumeCommitId:
          type: string
        headJobMemoryMb:
          type: integer
          format: int32
        headJobCpus:
          type: integer
          format: int32
        optimizationId:
          type: string
        optimizationTargets:
          type: string
        dateCreated:
          type: string
          format: date-time
    WorkflowLoad:
      required:
        - aborted
        - cached
        - cpuLoad
        - cpuTime
        - cpus
        - failed
        - ignored
        - invCtxSwitch
        - loadCpus
        - loadMemory
        - loadTasks
        - memoryReq
        - memoryRss
        - peakCpus
        - peakMemory
        - peakTasks
        - pending
        - readBytes
        - retries
        - running
        - submitted
        - succeeded
        - volCtxSwitch
        - writeBytes
      type: object
      properties:
        pending:
          type: integer
          format: int64
        submitted:
          type: integer
          format: int64
        running:
          type: integer
          format: int64
        succeeded:
          type: integer
          format: int64
        failed:
          type: integer
          format: int64
        cached:
          type: integer
          format: int64
        aborted:
          type: integer
          format: int64
        retries:
          type: integer
          format: int64
        ignored:
          type: integer
          format: int64
        memoryEfficiency:
          type: number
          format: float
        cpuEfficiency:
          type: number
          format: float
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        version:
          type: integer
          format: int64
        executors:
          type: array
          items:
            type: string
        cpus:
          type: integer
          format: int64
        cpuTime:
          type: integer
          format: int64
        cpuLoad:
          type: integer
          format: int64
        memoryRss:
          type: integer
          format: int64
        memoryReq:
          type: integer
          format: int64
        readBytes:
          type: integer
          format: int64
        writeBytes:
          type: integer
          format: int64
        volCtxSwitch:
          type: integer
          format: int64
        invCtxSwitch:
          type: integer
          format: int64
        loadTasks:
          type: integer
          format: int64
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakCpus:
          type: integer
          format: int64
        peakTasks:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
        cost:
          type: number
        netCpus:
          type: integer
          format: int64
        netCpuTime:
          type: integer
          format: int64
        netCpuLoad:
          type: integer
          format: int64
        netMemoryRss:
          type: integer
          format: int64
        netMemoryReq:
          type: integer
          format: int64
        netMemoryConsumption:
          type: number
        netReadBytes:
          type: integer
          format: int64
        netWriteBytes:
          type: integer
          format: int64
        netVolCtxSwitch:
          type: integer
          format: int64
        netInvCtxSwitch:
          type: integer
          format: int64
        netCost:
          type: number
    WorkflowLogResponse:
      type: object
      properties:
        log:
          $ref: "#/components/schemas/LogPage"
    WorkflowMetrics:
      required:
        - process
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        process:
          maxLength: 255
          type: string
        cpu:
          $ref: "#/components/schemas/ResourceData"
        mem:
          $ref: "#/components/schemas/ResourceData"
        vmem:
          $ref: "#/components/schemas/ResourceData"
        time:
          $ref: "#/components/schemas/ResourceData"
        reads:
          $ref: "#/components/schemas/ResourceData"
        writes:
          $ref: "#/components/schemas/ResourceData"
        cpuUsage:
          $ref: "#/components/schemas/ResourceData"
        memUsage:
          $ref: "#/components/schemas/ResourceData"
        timeUsage:
          $ref: "#/components/schemas/ResourceData"
    WorkflowQueryAttribute:
      type: string
      enum:
        - optimized
        - labels
        - messages
        - minimal
      x-enum-varnames:
        - optimized
        - labels
        - messages
        - minimal
    WorkflowStatus:
      type: string
      enum:
        - SUBMITTED
        - RUNNING
        - SUCCEEDED
        - FAILED
        - CANCELLED
        - UNKNOWN
    Workspace:
      required:
        - fullName
        - name
        - visibility
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          maxLength: 40
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,38}$"
          type: string
        fullName:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        visibility:
          $ref: "#/components/schemas/Visibility"
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    WorkspaceDbDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        fullName:
          type: string
        description:
          type: string
        visibility:
          $ref: "#/components/schemas/Visibility"
    WspRole:
      type: string
      enum:
        - owner
        - admin
        - maintain
        - launch
        - connect
        - view
      x-enum-varnames:
        - owner
        - admin
        - maintain
        - launch
        - connect
        - view
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: jwt
