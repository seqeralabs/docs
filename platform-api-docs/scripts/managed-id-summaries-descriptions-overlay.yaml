overlay: 1.0.0
info:
  title: Managed Identities and credentials operations API Overlay
  version: 1.0.0
actions:
  # ---- Operation summary and description fields ----
  - target: "$.paths./identities.get"
    update:
      summary: "List managed identities"
      description: "Lists all available managed identities in an organization context. To list the managed identities for an organization other than the requester's default, append an `?orgId`. Only organizations accessible to the requester's access token can be queried."
      
  - target: "$.paths./identities.post"
    update:
      summary: "Create managed identity"
      description: "Creates a new managed identity in an organization context. Managed identities enable centralized credential management for HPC environments."
      
  - target: "$.paths./identities/{managedIdentityId}.get"
    update:
      summary: "Describe managed identity"
      description: "Retrieves the details of the managed identity associated with the given `managedIdentityId`."
      
  - target: "$.paths./identities/{managedIdentityId}.put"
    update:
      summary: "Update managed identity"
      description: "Updates the details of the managed identity associated with the given `managedIdentityId`."
      
  - target: "$.paths./identities/{managedIdentityId}.delete"
    update:
      summary: "Delete managed identity"
      description: "Deletes the managed identity associated with the given `managedIdentityId`. To optionally check whether the deletion will be blocked by running jobs that depend on associated managed credentials, append `?checked=true`."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials.get"
    update:
      summary: "List managed credentials"
      description: "Lists all managed credentials associated with the given `managedIdentityId`. Filter by user with `?userId`."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials.post"
    update:
      summary: "Create managed credentials"
      description: "Creates new managed credentials for the given `managedIdentityId`. To associate the credentials with a user other than the requester, append the `?userId`."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials/{managedCredentialsId}.put"
    update:
      summary: "Update managed credentials"
      description: "Updates the managed credentials identified by the given `managedCredentialsId` within the given `managedIdentityId`."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials/{managedCredentialsId}.delete"
    update:
      summary: "Delete managed credentials"
      description: "Deletes the managed credentials identified by the given `managedCredentialsId` from the associated `managedIdentityId`. To optionally check whether the deletion will be blocked by running jobs that depend on the managed credentials, append `?checked=true`."

# ---- Path parameters ----
  - target: "$.paths./identities/{managedIdentityId}.get.parameters[?(@.name=='managedIdentityId')]"
    update:
      description: "Managed identity numeric identifier."
      
  - target: "$.paths./identities/{managedIdentityId}.put.parameters[?(@.name=='managedIdentityId')]"
    update:
      description: "Managed identity numeric identifier."
      
  - target: "$.paths./identities/{managedIdentityId}.delete.parameters[?(@.name=='managedIdentityId')]"
    update:
      description: "Managed identity numeric identifier."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials.get.parameters[?(@.name=='managedIdentityId')]"
    update:
      description: "Managed identity numeric identifier."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials.post.parameters[?(@.name=='managedIdentityId')]"
    update:
      description: "Managed identity numeric identifier."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials/{managedCredentialsId}.put.parameters[?(@.name=='managedIdentityId')]"
    update:
      description: "Managed identity numeric identifier."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials/{managedCredentialsId}.put.parameters[?(@.name=='managedCredentialsId')]"
    update:
      description: "Managed credentials numeric identifier."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials/{managedCredentialsId}.delete.parameters[?(@.name=='managedIdentityId')]"
    update:
      description: "Managed identity numeric identifier."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials/{managedCredentialsId}.delete.parameters[?(@.name=='managedCredentialsId')]"
    update:
      description: "Managed credentials numeric identifier."

  # ---- Query parameters ----
  - target: "$.paths./identities.get.parameters[?(@.name=='orgId')]"
    update:
      description: "Organization numeric identifier. Append to list managed identities within an organization other than the requester's default."
      
  - target: "$.paths./identities.get.parameters[?(@.name=='search')]"
    update:
      description: "Filter search parameter. Supports free text search on name and keywords: `platform:`."
      
  - target: "$.paths./identities.get.parameters[?(@.name=='max')]"
    update:
      description: "Maximum number of results to return. Default: `20`."
      
  - target: "$.paths./identities.get.parameters[?(@.name=='offset')]"
    update:
      description: "Number of results to skip for pagination. Default: `0`."
      
  - target: "$.paths./identities.post.parameters[?(@.name=='orgId')]"
    update:
      description: "Organization numeric identifier. Append to create managed identity within an organization other than the requester's default."
      
  - target: "$.paths./identities/{managedIdentityId}.get.parameters[?(@.name=='orgId')]"
    update:
      description: "Organization numeric identifier."
      
  - target: "$.paths./identities/{managedIdentityId}.put.parameters[?(@.name=='orgId')]"
    update:
      description: "Organization numeric identifier."
      
  - target: "$.paths./identities/{managedIdentityId}.delete.parameters[?(@.name=='orgId')]"
    update:
      description: "Organization numeric identifier."
      
  - target: "$.paths./identities/{managedIdentityId}.delete.parameters[?(@.name=='checked')]"
    update:
      description: "If `true`, deletion is blocked if running jobs depend on associated managed credentials. Default: `false`."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials.get.parameters[?(@.name=='orgId')]"
    update:
      description: "Organization numeric identifier."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials.get.parameters[?(@.name=='userId')]"
    update:
      description: "User numeric identifier. Filter managed credentials by specific user."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials.get.parameters[?(@.name=='search')]"
    update:
      description: "Filter search parameter. Supports free text search on `userName`, `firstName + lastName`, and keywords: `is:missing`, `is:added`."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials.get.parameters[?(@.name=='max')]"
    update:
      description: "Maximum number of results to return. Default: `20`."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials.get.parameters[?(@.name=='offset')]"
    update:
      description: "Number of results to skip for pagination. Default: `0`."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials.post.parameters[?(@.name=='orgId')]"
    update:
      description: "Organization numeric identifier."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials.post.parameters[?(@.name=='userId')]"
    update:
      description: "User numeric identifier. Append to associate managed credentials with a user other than the requester."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials/{managedCredentialsId}.put.parameters[?(@.name=='orgId')]"
    update:
      description: "Organization numeric identifier."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials/{managedCredentialsId}.delete.parameters[?(@.name=='orgId')]"
    update:
      description: "Organization numeric identifier."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials/{managedCredentialsId}.delete.parameters[?(@.name=='checked')]"
    update:
      description: "If `true`, deletion is blocked if running jobs depend on the given managed credentials. Default: `false`."

  # ---- Request body descriptions ----
  - target: "$.paths./identities.post.requestBody"
    update:
      description: "Managed identity create request."
      
  - target: "$.paths./identities/{managedIdentityId}.put.requestBody"
    update:
      description: "Managed identity update request."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials.post.requestBody"
    update:
      description: "Managed credentials create request, including provider type and authentication details."
      
  - target: "$.paths./identities/{managedIdentityId}/credentials/{managedCredentialsId}.put.requestBody"
    update:
      description: "Managed credentials update request."

  # ---- Schema property descriptions for CreateManagedIdentityRequest ----
  - target: "$.components.schemas.CreateManagedIdentityRequest.properties.name"
    update:
      description: "Unique name for the managed identity. Must consist of alphanumeric, dash, or underscore characters."
      
  - target: "$.components.schemas.CreateManagedIdentityRequest.properties.platform"
    update:
      description: "HPC platform type for this managed identity."
      
  - target: "$.components.schemas.CreateManagedIdentityRequest.properties.config"
    update:
      description: "Platform-specific configuration. Structure depends on the selected platform."

  # ---- Schema property descriptions for CreateManagedCredentialsRequest ----
  - target: "$.components.schemas.CreateManagedCredentialsRequest.properties.provider"
    update:
      description: "Authentication provider type. Currently supports `ssh`."
      
  - target: "$.components.schemas.CreateManagedCredentialsRequest.properties.credentials"
    update:
      description: "Authentication credentials configuration object."
      
  - target: "$.components.schemas.CreateManagedCredentialsRequest.properties.metadata"
    update:
      description: "Additional metadata for the managed credentials."

  # ---- Schema property descriptions for UpdateManagedIdentityRequest ----
  - target: "$.components.schemas.UpdateManagedIdentityRequest.properties.managedIdentity"
    update:
      description: "Updated managed identity configuration object."

  # ---- Schema property descriptions for UpdateManagedCredentialsRequest ----
  - target: "$.components.schemas.UpdateManagedCredentialsRequest.properties.provider"
    update:
      description: "Authentication provider type. Currently supports `ssh`."
      
  - target: "$.components.schemas.UpdateManagedCredentialsRequest.properties.credentials"
    update:
      description: "Updated authentication credentials configuration."
      
  - target: "$.components.schemas.UpdateManagedCredentialsRequest.properties.metadata"
    update:
      description: "Additional metadata for the managed credentials."

  # ---- Response schema descriptions ----
  - target: "$.components.schemas.ListManagedIdentitiesResponse.properties.managedIdentities"
    update:
      description: "Array of managed identities."
      
  - target: "$.components.schemas.ListManagedIdentitiesResponse.properties.totalSize"
    update:
      description: "Total number of managed identities matching the query."
      
  - target: "$.components.schemas.CreateManagedIdentityResponse.properties.id"
    update:
      description: "Managed identity numeric identifier."
      
  - target: "$.components.schemas.CreateManagedIdentityResponse.properties.name"
    update:
      description: "Name of the created managed identity."
      
  - target: "$.components.schemas.CreateManagedIdentityResponse.properties.platform"
    update:
      description: "HPC platform type."
      
  - target: "$.components.schemas.CreateManagedIdentityResponse.properties.config"
    update:
      description: "Platform-specific configuration."
      
  - target: "$.components.schemas.ListManagedCredentialsResponse.properties.managedCredentials"
    update:
      description: "Array of managed credentials objects."
      
  - target: "$.components.schemas.ListManagedCredentialsResponse.properties.totalSize"
    update:
      description: "Total number of managed credentials matching the query."
      
  - target: "$.components.schemas.CreateManagedCredentialsResponse.properties.managedCredentials"
    update:
      description: "Created managed credentials object."
      
  - target: "$.components.schemas.DeleteManagedCredentialsConflictResponse.properties.managedCredentialsId"
    update:
      description: "Identifier of credentials that could not be deleted."
      
  - target: "$.components.schemas.DeleteManagedCredentialsConflictResponse.properties.conflicts"
    update:
      description: "Array of conflicts preventing deletion."
      
  - target: "$.components.schemas.DeleteManagedCredentialsConflictResponse.Conflict.properties.type"
    update:
      description: "Type of resource causing the conflict."
      
  - target: "$.components.schemas.DeleteManagedCredentialsConflictResponse.Conflict.properties.id"
    update:
      description: "Identifier of the conflicting resource."
      
  - target: "$.components.schemas.DeleteManagedCredentialsConflictResponse.Conflict.properties.name"
    update:
      description: "Name of the conflicting resource."
      
  - target: "$.components.schemas.DeleteManagedCredentialsConflictResponse.Conflict.properties.url"
    update:
      description: "URL of the conflicting resource."

  # ---- ManagedIdentityDbDto schema ----
  - target: "$.components.schemas.ManagedIdentityDbDto_AbstractGridConfig_.properties.id"
    update:
      description: "Managed identity numeric identifier."
      
  - target: "$.components.schemas.ManagedIdentityDbDto_AbstractGridConfig_.properties.name"
    update:
      description: "Name of the managed identity."
      
  - target: "$.components.schemas.ManagedIdentityDbDto_AbstractGridConfig_.properties.platform"
    update:
      description: "HPC platform type."
      
  - target: "$.components.schemas.ManagedIdentityDbDto_AbstractGridConfig_.properties.config"
    update:
      description: "HPC platform-specific configuration for the managed identity."

  # ---- ManagedCredentialsDbDto schema ----
  - target: "$.components.schemas.ManagedCredentialsDbDto.properties.id"
    update:
      description: "Managed credentials numeric identifier."

  # ---- ListManagedCredentialsRespDto schema ----
  - target: "$.components.schemas.ListManagedCredentialsRespDto.properties.managedCredentialsId"
    update:
      description: "Managed credentials numeric identifier."
      
  - target: "$.components.schemas.ListManagedCredentialsRespDto.properties.userId"
    update:
      description: "User numeric identifier associated with these credentials."
      
  - target: "$.components.schemas.ListManagedCredentialsRespDto.properties.userName"
    update:
      description: "Username of the associated user."
      
  - target: "$.components.schemas.ListManagedCredentialsRespDto.properties.firstName"
    update:
      description: "First name of the associated user."
      
  - target: "$.components.schemas.ListManagedCredentialsRespDto.properties.lastName"
    update:
      description: "Last name of the associated user."
      
  - target: "$.components.schemas.ListManagedCredentialsRespDto.properties.avatarUrl"
    update:
      description: "URL of the user's avatar image."
      
  - target: "$.components.schemas.ListManagedCredentialsRespDto.properties.provider"
    update:
      description: "Authentication provider type."
      
  - target: "$.components.schemas.ListManagedCredentialsRespDto.properties.metadata"
    update:
      description: "Additional metadata for the managed credentials."

  # ---- ManagedCredentialsMetadata schema ----
  - target: "$.components.schemas.ManagedCredentialsMetadata.properties.discriminator"
    update:
      description: "Type discriminator for metadata structure (read-only)."